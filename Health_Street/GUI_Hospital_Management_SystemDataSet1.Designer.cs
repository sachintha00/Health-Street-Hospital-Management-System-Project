//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Health_Street {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("GUI_Hospital_Management_SystemDataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class GUI_Hospital_Management_SystemDataSet1 : global::System.Data.DataSet {
        
        private ACCOUNTDataTable tableACCOUNT;
        
        private ADMISSION_OFFICERDataTable tableADMISSION_OFFICER;
        
        private BILLDataTable tableBILL;
        
        private BILLING_OFFICERDataTable tableBILLING_OFFICER;
        
        private CHANNELING_OFFICERDataTable tableCHANNELING_OFFICER;
        
        private CUSTOMERDataTable tableCUSTOMER;
        
        private DRUGDataTable tableDRUG;
        
        private DRUG_ORDERDataTable tableDRUG_ORDER;
        
        private DRUG_SUPPLIERDataTable tableDRUG_SUPPLIER;
        
        private GUARDIANDataTable tableGUARDIAN;
        
        private HOSPITAL_CUSTOMERDataTable tableHOSPITAL_CUSTOMER;
        
        private IN_PATIENTDataTable tableIN_PATIENT;
        
        private IN_PATIENT_MEDICINEDataTable tableIN_PATIENT_MEDICINE;
        
        private IN_PATIENT_REPORTDataTable tableIN_PATIENT_REPORT;
        
        private IN_PATIENT_SCANDataTable tableIN_PATIENT_SCAN;
        
        private IN_PATIENT_XRAYDataTable tableIN_PATIENT_XRAY;
        
        private IN_SAMPLEDataTable tableIN_SAMPLE;
        
        private LABORATORY_STAFFDataTable tableLABORATORY_STAFF;
        
        private LOG_IN_DETAILDataTable tableLOG_IN_DETAIL;
        
        private LOG_IN_USERDataTable tableLOG_IN_USER;
        
        private ORGANIZATIONDataTable tableORGANIZATION;
        
        private OUT_PATIENTDataTable tableOUT_PATIENT;
        
        private OUT_PATIENT_MEDICINEDataTable tableOUT_PATIENT_MEDICINE;
        
        private OUT_PATIENT_REPORTDataTable tableOUT_PATIENT_REPORT;
        
        private OUT_PATIENT_SCANDataTable tableOUT_PATIENT_SCAN;
        
        private OUT_PATIENT_XRAYDataTable tableOUT_PATIENT_XRAY;
        
        private OUT_SAMPLEDataTable tableOUT_SAMPLE;
        
        private PATIENT_APPOINTMENT_DETAILSDataTable tablePATIENT_APPOINTMENT_DETAILS;
        
        private PATIENT_PRIVATE_DETAILDataTable tablePATIENT_PRIVATE_DETAIL;
        
        private PHARMACY_MEDICINESDataTable tablePHARMACY_MEDICINES;
        
        private PHARMACY_STAFFDataTable tablePHARMACY_STAFF;
        
        private QUALIFICATIONDataTable tableQUALIFICATION;
        
        private REPORT_IN_PATIENTDataTable tableREPORT_IN_PATIENT;
        
        private REPORT_OUT_PATIENTDataTable tableREPORT_OUT_PATIENT;
        
        private ROOMDataTable tableROOM;
        
        private SCAN_ROOMDataTable tableSCAN_ROOM;
        
        private SPECIALIST_DOCTORDataTable tableSPECIALIST_DOCTOR;
        
        private WARDDataTable tableWARD;
        
        private WARD_STAFFDataTable tableWARD_STAFF;
        
        private X_RAY_ROOMDataTable tableX_RAY_ROOM;
        
        private global::System.Data.DataRelation relationfk_ADMISSION_OFFICER;
        
        private global::System.Data.DataRelation relationFK__BILL__Billing_Of__6477ECF3;
        
        private global::System.Data.DataRelation relationfk_BILL;
        
        private global::System.Data.DataRelation relationfk_BILLING_OFFICER;
        
        private global::System.Data.DataRelation relationFK__CUSTOMER__Specia__5535A963;
        
        private global::System.Data.DataRelation relationfk_CUSTOMER;
        
        private global::System.Data.DataRelation relationFK__DRUG_ORDE__Suppl__73BA3083;
        
        private global::System.Data.DataRelation relationfk_DRUG_ORDER;
        
        private global::System.Data.DataRelation relationFK__GUARDIAN__Billin__4CA06362;
        
        private global::System.Data.DataRelation relationfk_GUARDIAN;
        
        private global::System.Data.DataRelation relationFK__HOSPITAL___Pharm__787EE5A0;
        
        private global::System.Data.DataRelation relationFK__HOSPITAL___Speci__778AC167;
        
        private global::System.Data.DataRelation relationfk_HOSPITAL_CUSTOMER;
        
        private global::System.Data.DataRelation relationFK__IN_PATIEN__Patie__5EBF139D;
        
        private global::System.Data.DataRelation relationFK__IN_PATIEN__Room___5DCAEF64;
        
        private global::System.Data.DataRelation relationFK__IN_PATIEN__Ward___5CD6CB2B;
        
        private global::System.Data.DataRelation relationfk_IN_PATIENT;
        
        private global::System.Data.DataRelation relationFK__IN_PATIEN__Drug___01142BA1;
        
        private global::System.Data.DataRelation relationfk_IN_PATIENT_MEDICINE;
        
        private global::System.Data.DataRelation relationfk_IN_PATIENT_REPORT;
        
        private global::System.Data.DataRelation relationFK__IN_PATIEN__Room___2645B050;
        
        private global::System.Data.DataRelation relationFK__IN_PATIEN__Speci__2739D489;
        
        private global::System.Data.DataRelation relationFK__IN_PATIEN__Ward___25518C17;
        
        private global::System.Data.DataRelation relationfk_IN_PATIENT_SCAN;
        
        private global::System.Data.DataRelation relationFK__IN_PATIEN__Room___1BC821DD;
        
        private global::System.Data.DataRelation relationFK__IN_PATIEN__Speci__1CBC4616;
        
        private global::System.Data.DataRelation relationFK__IN_PATIEN__Ward___1AD3FDA4;
        
        private global::System.Data.DataRelation relationfk_IN_PATIENT_XRAY;
        
        private global::System.Data.DataRelation relationFK__IN_SAMPLE__Speci__0B91BA14;
        
        private global::System.Data.DataRelation relationfk_IN_SAMPLE;
        
        private global::System.Data.DataRelation relationFK_LOG_IN_DETAIL;
        
        private global::System.Data.DataRelation relationfk_LOG_IN_USER;
        
        private global::System.Data.DataRelation relationFK__ORGANIZAT__Billi__693CA210;
        
        private global::System.Data.DataRelation relationfk_ORGANIZATION;
        
        private global::System.Data.DataRelation relationFK__OUT_PATIE__Drug___04E4BC85;
        
        private global::System.Data.DataRelation relationfk_OUT_PATIENT_MEDICINE;
        
        private global::System.Data.DataRelation relationfk_OUT_PATIENT_REPORT;
        
        private global::System.Data.DataRelation relationFK__OUT_PATIE__Speci__2B0A656D;
        
        private global::System.Data.DataRelation relationfk_OUT_PATIENT_SCAN;
        
        private global::System.Data.DataRelation relationfk_OUT_PATIENT_XRAY;
        
        private global::System.Data.DataRelation relationFK__OUT_SAMPL__Speci__0F624AF8;
        
        private global::System.Data.DataRelation relationfk_OUT_SAMPLE;
        
        private global::System.Data.DataRelation relationFK__PATIENT_A__Invoi__59063A47;
        
        private global::System.Data.DataRelation relationfk_PATIENT_APPOINTMENT_DETAILS;
        
        private global::System.Data.DataRelation relationFK__PATIENT_P__Speci__5070F446;
        
        private global::System.Data.DataRelation relationfk_PATIENT_PRIVATE_DETAIL;
        
        private global::System.Data.DataRelation relationFK__PHARMACY___Drug___7C4F7684;
        
        private global::System.Data.DataRelation relationfk_PHARMACY_MEDICINES;
        
        private global::System.Data.DataRelation relationfk_PHARMACY_STAFF;
        
        private global::System.Data.DataRelation relationfk_QUALIFICATION;
        
        private global::System.Data.DataRelation relationFK__REPORT_IN__In_Pa__2EDAF651;
        
        private global::System.Data.DataRelation relationFK__REPORT_IN__In_Pa__2FCF1A8A;
        
        private global::System.Data.DataRelation relationFK__REPORT_IN__In_Pa__30C33EC3;
        
        private global::System.Data.DataRelation relationfk_REPORT_IN_PATIENT;
        
        private global::System.Data.DataRelation relationFK__REPORT_OU__Out_P__3493CFA7;
        
        private global::System.Data.DataRelation relationFK__REPORT_OU__Out_P__3587F3E0;
        
        private global::System.Data.DataRelation relationFK__REPORT_OU__Out_P__367C1819;
        
        private global::System.Data.DataRelation relationfk_REPORT_OUT_PATIENT;
        
        private global::System.Data.DataRelation relationfk_ROOM;
        
        private global::System.Data.DataRelation relationfk_SPECIALIST_DOCTOR;
        
        private global::System.Data.DataRelation relationFK__WARD_STAF__Roll___47DBAE45;
        
        private global::System.Data.DataRelation relationfk_WARD_STAFF;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public GUI_Hospital_Management_SystemDataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected GUI_Hospital_Management_SystemDataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ACCOUNT"] != null)) {
                    base.Tables.Add(new ACCOUNTDataTable(ds.Tables["ACCOUNT"]));
                }
                if ((ds.Tables["ADMISSION_OFFICER"] != null)) {
                    base.Tables.Add(new ADMISSION_OFFICERDataTable(ds.Tables["ADMISSION_OFFICER"]));
                }
                if ((ds.Tables["BILL"] != null)) {
                    base.Tables.Add(new BILLDataTable(ds.Tables["BILL"]));
                }
                if ((ds.Tables["BILLING_OFFICER"] != null)) {
                    base.Tables.Add(new BILLING_OFFICERDataTable(ds.Tables["BILLING_OFFICER"]));
                }
                if ((ds.Tables["CHANNELING_OFFICER"] != null)) {
                    base.Tables.Add(new CHANNELING_OFFICERDataTable(ds.Tables["CHANNELING_OFFICER"]));
                }
                if ((ds.Tables["CUSTOMER"] != null)) {
                    base.Tables.Add(new CUSTOMERDataTable(ds.Tables["CUSTOMER"]));
                }
                if ((ds.Tables["DRUG"] != null)) {
                    base.Tables.Add(new DRUGDataTable(ds.Tables["DRUG"]));
                }
                if ((ds.Tables["DRUG_ORDER"] != null)) {
                    base.Tables.Add(new DRUG_ORDERDataTable(ds.Tables["DRUG_ORDER"]));
                }
                if ((ds.Tables["DRUG_SUPPLIER"] != null)) {
                    base.Tables.Add(new DRUG_SUPPLIERDataTable(ds.Tables["DRUG_SUPPLIER"]));
                }
                if ((ds.Tables["GUARDIAN"] != null)) {
                    base.Tables.Add(new GUARDIANDataTable(ds.Tables["GUARDIAN"]));
                }
                if ((ds.Tables["HOSPITAL_CUSTOMER"] != null)) {
                    base.Tables.Add(new HOSPITAL_CUSTOMERDataTable(ds.Tables["HOSPITAL_CUSTOMER"]));
                }
                if ((ds.Tables["IN_PATIENT"] != null)) {
                    base.Tables.Add(new IN_PATIENTDataTable(ds.Tables["IN_PATIENT"]));
                }
                if ((ds.Tables["IN_PATIENT_MEDICINE"] != null)) {
                    base.Tables.Add(new IN_PATIENT_MEDICINEDataTable(ds.Tables["IN_PATIENT_MEDICINE"]));
                }
                if ((ds.Tables["IN_PATIENT_REPORT"] != null)) {
                    base.Tables.Add(new IN_PATIENT_REPORTDataTable(ds.Tables["IN_PATIENT_REPORT"]));
                }
                if ((ds.Tables["IN_PATIENT_SCAN"] != null)) {
                    base.Tables.Add(new IN_PATIENT_SCANDataTable(ds.Tables["IN_PATIENT_SCAN"]));
                }
                if ((ds.Tables["IN_PATIENT_XRAY"] != null)) {
                    base.Tables.Add(new IN_PATIENT_XRAYDataTable(ds.Tables["IN_PATIENT_XRAY"]));
                }
                if ((ds.Tables["IN_SAMPLE"] != null)) {
                    base.Tables.Add(new IN_SAMPLEDataTable(ds.Tables["IN_SAMPLE"]));
                }
                if ((ds.Tables["LABORATORY_STAFF"] != null)) {
                    base.Tables.Add(new LABORATORY_STAFFDataTable(ds.Tables["LABORATORY_STAFF"]));
                }
                if ((ds.Tables["LOG_IN_DETAIL"] != null)) {
                    base.Tables.Add(new LOG_IN_DETAILDataTable(ds.Tables["LOG_IN_DETAIL"]));
                }
                if ((ds.Tables["LOG_IN_USER"] != null)) {
                    base.Tables.Add(new LOG_IN_USERDataTable(ds.Tables["LOG_IN_USER"]));
                }
                if ((ds.Tables["ORGANIZATION"] != null)) {
                    base.Tables.Add(new ORGANIZATIONDataTable(ds.Tables["ORGANIZATION"]));
                }
                if ((ds.Tables["OUT_PATIENT"] != null)) {
                    base.Tables.Add(new OUT_PATIENTDataTable(ds.Tables["OUT_PATIENT"]));
                }
                if ((ds.Tables["OUT_PATIENT_MEDICINE"] != null)) {
                    base.Tables.Add(new OUT_PATIENT_MEDICINEDataTable(ds.Tables["OUT_PATIENT_MEDICINE"]));
                }
                if ((ds.Tables["OUT_PATIENT_REPORT"] != null)) {
                    base.Tables.Add(new OUT_PATIENT_REPORTDataTable(ds.Tables["OUT_PATIENT_REPORT"]));
                }
                if ((ds.Tables["OUT_PATIENT_SCAN"] != null)) {
                    base.Tables.Add(new OUT_PATIENT_SCANDataTable(ds.Tables["OUT_PATIENT_SCAN"]));
                }
                if ((ds.Tables["OUT_PATIENT_XRAY"] != null)) {
                    base.Tables.Add(new OUT_PATIENT_XRAYDataTable(ds.Tables["OUT_PATIENT_XRAY"]));
                }
                if ((ds.Tables["OUT_SAMPLE"] != null)) {
                    base.Tables.Add(new OUT_SAMPLEDataTable(ds.Tables["OUT_SAMPLE"]));
                }
                if ((ds.Tables["PATIENT_APPOINTMENT_DETAILS"] != null)) {
                    base.Tables.Add(new PATIENT_APPOINTMENT_DETAILSDataTable(ds.Tables["PATIENT_APPOINTMENT_DETAILS"]));
                }
                if ((ds.Tables["PATIENT_PRIVATE_DETAIL"] != null)) {
                    base.Tables.Add(new PATIENT_PRIVATE_DETAILDataTable(ds.Tables["PATIENT_PRIVATE_DETAIL"]));
                }
                if ((ds.Tables["PHARMACY_MEDICINES"] != null)) {
                    base.Tables.Add(new PHARMACY_MEDICINESDataTable(ds.Tables["PHARMACY_MEDICINES"]));
                }
                if ((ds.Tables["PHARMACY_STAFF"] != null)) {
                    base.Tables.Add(new PHARMACY_STAFFDataTable(ds.Tables["PHARMACY_STAFF"]));
                }
                if ((ds.Tables["QUALIFICATION"] != null)) {
                    base.Tables.Add(new QUALIFICATIONDataTable(ds.Tables["QUALIFICATION"]));
                }
                if ((ds.Tables["REPORT_IN_PATIENT"] != null)) {
                    base.Tables.Add(new REPORT_IN_PATIENTDataTable(ds.Tables["REPORT_IN_PATIENT"]));
                }
                if ((ds.Tables["REPORT_OUT_PATIENT"] != null)) {
                    base.Tables.Add(new REPORT_OUT_PATIENTDataTable(ds.Tables["REPORT_OUT_PATIENT"]));
                }
                if ((ds.Tables["ROOM"] != null)) {
                    base.Tables.Add(new ROOMDataTable(ds.Tables["ROOM"]));
                }
                if ((ds.Tables["SCAN_ROOM"] != null)) {
                    base.Tables.Add(new SCAN_ROOMDataTable(ds.Tables["SCAN_ROOM"]));
                }
                if ((ds.Tables["SPECIALIST_DOCTOR"] != null)) {
                    base.Tables.Add(new SPECIALIST_DOCTORDataTable(ds.Tables["SPECIALIST_DOCTOR"]));
                }
                if ((ds.Tables["WARD"] != null)) {
                    base.Tables.Add(new WARDDataTable(ds.Tables["WARD"]));
                }
                if ((ds.Tables["WARD_STAFF"] != null)) {
                    base.Tables.Add(new WARD_STAFFDataTable(ds.Tables["WARD_STAFF"]));
                }
                if ((ds.Tables["X_RAY_ROOM"] != null)) {
                    base.Tables.Add(new X_RAY_ROOMDataTable(ds.Tables["X_RAY_ROOM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ACCOUNTDataTable ACCOUNT {
            get {
                return this.tableACCOUNT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ADMISSION_OFFICERDataTable ADMISSION_OFFICER {
            get {
                return this.tableADMISSION_OFFICER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BILLDataTable BILL {
            get {
                return this.tableBILL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BILLING_OFFICERDataTable BILLING_OFFICER {
            get {
                return this.tableBILLING_OFFICER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHANNELING_OFFICERDataTable CHANNELING_OFFICER {
            get {
                return this.tableCHANNELING_OFFICER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CUSTOMERDataTable CUSTOMER {
            get {
                return this.tableCUSTOMER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DRUGDataTable DRUG {
            get {
                return this.tableDRUG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DRUG_ORDERDataTable DRUG_ORDER {
            get {
                return this.tableDRUG_ORDER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DRUG_SUPPLIERDataTable DRUG_SUPPLIER {
            get {
                return this.tableDRUG_SUPPLIER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GUARDIANDataTable GUARDIAN {
            get {
                return this.tableGUARDIAN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HOSPITAL_CUSTOMERDataTable HOSPITAL_CUSTOMER {
            get {
                return this.tableHOSPITAL_CUSTOMER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IN_PATIENTDataTable IN_PATIENT {
            get {
                return this.tableIN_PATIENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IN_PATIENT_MEDICINEDataTable IN_PATIENT_MEDICINE {
            get {
                return this.tableIN_PATIENT_MEDICINE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IN_PATIENT_REPORTDataTable IN_PATIENT_REPORT {
            get {
                return this.tableIN_PATIENT_REPORT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IN_PATIENT_SCANDataTable IN_PATIENT_SCAN {
            get {
                return this.tableIN_PATIENT_SCAN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IN_PATIENT_XRAYDataTable IN_PATIENT_XRAY {
            get {
                return this.tableIN_PATIENT_XRAY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IN_SAMPLEDataTable IN_SAMPLE {
            get {
                return this.tableIN_SAMPLE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LABORATORY_STAFFDataTable LABORATORY_STAFF {
            get {
                return this.tableLABORATORY_STAFF;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LOG_IN_DETAILDataTable LOG_IN_DETAIL {
            get {
                return this.tableLOG_IN_DETAIL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LOG_IN_USERDataTable LOG_IN_USER {
            get {
                return this.tableLOG_IN_USER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ORGANIZATIONDataTable ORGANIZATION {
            get {
                return this.tableORGANIZATION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OUT_PATIENTDataTable OUT_PATIENT {
            get {
                return this.tableOUT_PATIENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OUT_PATIENT_MEDICINEDataTable OUT_PATIENT_MEDICINE {
            get {
                return this.tableOUT_PATIENT_MEDICINE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OUT_PATIENT_REPORTDataTable OUT_PATIENT_REPORT {
            get {
                return this.tableOUT_PATIENT_REPORT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OUT_PATIENT_SCANDataTable OUT_PATIENT_SCAN {
            get {
                return this.tableOUT_PATIENT_SCAN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OUT_PATIENT_XRAYDataTable OUT_PATIENT_XRAY {
            get {
                return this.tableOUT_PATIENT_XRAY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OUT_SAMPLEDataTable OUT_SAMPLE {
            get {
                return this.tableOUT_SAMPLE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PATIENT_APPOINTMENT_DETAILSDataTable PATIENT_APPOINTMENT_DETAILS {
            get {
                return this.tablePATIENT_APPOINTMENT_DETAILS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PATIENT_PRIVATE_DETAILDataTable PATIENT_PRIVATE_DETAIL {
            get {
                return this.tablePATIENT_PRIVATE_DETAIL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PHARMACY_MEDICINESDataTable PHARMACY_MEDICINES {
            get {
                return this.tablePHARMACY_MEDICINES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PHARMACY_STAFFDataTable PHARMACY_STAFF {
            get {
                return this.tablePHARMACY_STAFF;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QUALIFICATIONDataTable QUALIFICATION {
            get {
                return this.tableQUALIFICATION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public REPORT_IN_PATIENTDataTable REPORT_IN_PATIENT {
            get {
                return this.tableREPORT_IN_PATIENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public REPORT_OUT_PATIENTDataTable REPORT_OUT_PATIENT {
            get {
                return this.tableREPORT_OUT_PATIENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ROOMDataTable ROOM {
            get {
                return this.tableROOM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SCAN_ROOMDataTable SCAN_ROOM {
            get {
                return this.tableSCAN_ROOM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SPECIALIST_DOCTORDataTable SPECIALIST_DOCTOR {
            get {
                return this.tableSPECIALIST_DOCTOR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WARDDataTable WARD {
            get {
                return this.tableWARD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WARD_STAFFDataTable WARD_STAFF {
            get {
                return this.tableWARD_STAFF;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public X_RAY_ROOMDataTable X_RAY_ROOM {
            get {
                return this.tableX_RAY_ROOM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            GUI_Hospital_Management_SystemDataSet1 cln = ((GUI_Hospital_Management_SystemDataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ACCOUNT"] != null)) {
                    base.Tables.Add(new ACCOUNTDataTable(ds.Tables["ACCOUNT"]));
                }
                if ((ds.Tables["ADMISSION_OFFICER"] != null)) {
                    base.Tables.Add(new ADMISSION_OFFICERDataTable(ds.Tables["ADMISSION_OFFICER"]));
                }
                if ((ds.Tables["BILL"] != null)) {
                    base.Tables.Add(new BILLDataTable(ds.Tables["BILL"]));
                }
                if ((ds.Tables["BILLING_OFFICER"] != null)) {
                    base.Tables.Add(new BILLING_OFFICERDataTable(ds.Tables["BILLING_OFFICER"]));
                }
                if ((ds.Tables["CHANNELING_OFFICER"] != null)) {
                    base.Tables.Add(new CHANNELING_OFFICERDataTable(ds.Tables["CHANNELING_OFFICER"]));
                }
                if ((ds.Tables["CUSTOMER"] != null)) {
                    base.Tables.Add(new CUSTOMERDataTable(ds.Tables["CUSTOMER"]));
                }
                if ((ds.Tables["DRUG"] != null)) {
                    base.Tables.Add(new DRUGDataTable(ds.Tables["DRUG"]));
                }
                if ((ds.Tables["DRUG_ORDER"] != null)) {
                    base.Tables.Add(new DRUG_ORDERDataTable(ds.Tables["DRUG_ORDER"]));
                }
                if ((ds.Tables["DRUG_SUPPLIER"] != null)) {
                    base.Tables.Add(new DRUG_SUPPLIERDataTable(ds.Tables["DRUG_SUPPLIER"]));
                }
                if ((ds.Tables["GUARDIAN"] != null)) {
                    base.Tables.Add(new GUARDIANDataTable(ds.Tables["GUARDIAN"]));
                }
                if ((ds.Tables["HOSPITAL_CUSTOMER"] != null)) {
                    base.Tables.Add(new HOSPITAL_CUSTOMERDataTable(ds.Tables["HOSPITAL_CUSTOMER"]));
                }
                if ((ds.Tables["IN_PATIENT"] != null)) {
                    base.Tables.Add(new IN_PATIENTDataTable(ds.Tables["IN_PATIENT"]));
                }
                if ((ds.Tables["IN_PATIENT_MEDICINE"] != null)) {
                    base.Tables.Add(new IN_PATIENT_MEDICINEDataTable(ds.Tables["IN_PATIENT_MEDICINE"]));
                }
                if ((ds.Tables["IN_PATIENT_REPORT"] != null)) {
                    base.Tables.Add(new IN_PATIENT_REPORTDataTable(ds.Tables["IN_PATIENT_REPORT"]));
                }
                if ((ds.Tables["IN_PATIENT_SCAN"] != null)) {
                    base.Tables.Add(new IN_PATIENT_SCANDataTable(ds.Tables["IN_PATIENT_SCAN"]));
                }
                if ((ds.Tables["IN_PATIENT_XRAY"] != null)) {
                    base.Tables.Add(new IN_PATIENT_XRAYDataTable(ds.Tables["IN_PATIENT_XRAY"]));
                }
                if ((ds.Tables["IN_SAMPLE"] != null)) {
                    base.Tables.Add(new IN_SAMPLEDataTable(ds.Tables["IN_SAMPLE"]));
                }
                if ((ds.Tables["LABORATORY_STAFF"] != null)) {
                    base.Tables.Add(new LABORATORY_STAFFDataTable(ds.Tables["LABORATORY_STAFF"]));
                }
                if ((ds.Tables["LOG_IN_DETAIL"] != null)) {
                    base.Tables.Add(new LOG_IN_DETAILDataTable(ds.Tables["LOG_IN_DETAIL"]));
                }
                if ((ds.Tables["LOG_IN_USER"] != null)) {
                    base.Tables.Add(new LOG_IN_USERDataTable(ds.Tables["LOG_IN_USER"]));
                }
                if ((ds.Tables["ORGANIZATION"] != null)) {
                    base.Tables.Add(new ORGANIZATIONDataTable(ds.Tables["ORGANIZATION"]));
                }
                if ((ds.Tables["OUT_PATIENT"] != null)) {
                    base.Tables.Add(new OUT_PATIENTDataTable(ds.Tables["OUT_PATIENT"]));
                }
                if ((ds.Tables["OUT_PATIENT_MEDICINE"] != null)) {
                    base.Tables.Add(new OUT_PATIENT_MEDICINEDataTable(ds.Tables["OUT_PATIENT_MEDICINE"]));
                }
                if ((ds.Tables["OUT_PATIENT_REPORT"] != null)) {
                    base.Tables.Add(new OUT_PATIENT_REPORTDataTable(ds.Tables["OUT_PATIENT_REPORT"]));
                }
                if ((ds.Tables["OUT_PATIENT_SCAN"] != null)) {
                    base.Tables.Add(new OUT_PATIENT_SCANDataTable(ds.Tables["OUT_PATIENT_SCAN"]));
                }
                if ((ds.Tables["OUT_PATIENT_XRAY"] != null)) {
                    base.Tables.Add(new OUT_PATIENT_XRAYDataTable(ds.Tables["OUT_PATIENT_XRAY"]));
                }
                if ((ds.Tables["OUT_SAMPLE"] != null)) {
                    base.Tables.Add(new OUT_SAMPLEDataTable(ds.Tables["OUT_SAMPLE"]));
                }
                if ((ds.Tables["PATIENT_APPOINTMENT_DETAILS"] != null)) {
                    base.Tables.Add(new PATIENT_APPOINTMENT_DETAILSDataTable(ds.Tables["PATIENT_APPOINTMENT_DETAILS"]));
                }
                if ((ds.Tables["PATIENT_PRIVATE_DETAIL"] != null)) {
                    base.Tables.Add(new PATIENT_PRIVATE_DETAILDataTable(ds.Tables["PATIENT_PRIVATE_DETAIL"]));
                }
                if ((ds.Tables["PHARMACY_MEDICINES"] != null)) {
                    base.Tables.Add(new PHARMACY_MEDICINESDataTable(ds.Tables["PHARMACY_MEDICINES"]));
                }
                if ((ds.Tables["PHARMACY_STAFF"] != null)) {
                    base.Tables.Add(new PHARMACY_STAFFDataTable(ds.Tables["PHARMACY_STAFF"]));
                }
                if ((ds.Tables["QUALIFICATION"] != null)) {
                    base.Tables.Add(new QUALIFICATIONDataTable(ds.Tables["QUALIFICATION"]));
                }
                if ((ds.Tables["REPORT_IN_PATIENT"] != null)) {
                    base.Tables.Add(new REPORT_IN_PATIENTDataTable(ds.Tables["REPORT_IN_PATIENT"]));
                }
                if ((ds.Tables["REPORT_OUT_PATIENT"] != null)) {
                    base.Tables.Add(new REPORT_OUT_PATIENTDataTable(ds.Tables["REPORT_OUT_PATIENT"]));
                }
                if ((ds.Tables["ROOM"] != null)) {
                    base.Tables.Add(new ROOMDataTable(ds.Tables["ROOM"]));
                }
                if ((ds.Tables["SCAN_ROOM"] != null)) {
                    base.Tables.Add(new SCAN_ROOMDataTable(ds.Tables["SCAN_ROOM"]));
                }
                if ((ds.Tables["SPECIALIST_DOCTOR"] != null)) {
                    base.Tables.Add(new SPECIALIST_DOCTORDataTable(ds.Tables["SPECIALIST_DOCTOR"]));
                }
                if ((ds.Tables["WARD"] != null)) {
                    base.Tables.Add(new WARDDataTable(ds.Tables["WARD"]));
                }
                if ((ds.Tables["WARD_STAFF"] != null)) {
                    base.Tables.Add(new WARD_STAFFDataTable(ds.Tables["WARD_STAFF"]));
                }
                if ((ds.Tables["X_RAY_ROOM"] != null)) {
                    base.Tables.Add(new X_RAY_ROOMDataTable(ds.Tables["X_RAY_ROOM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableACCOUNT = ((ACCOUNTDataTable)(base.Tables["ACCOUNT"]));
            if ((initTable == true)) {
                if ((this.tableACCOUNT != null)) {
                    this.tableACCOUNT.InitVars();
                }
            }
            this.tableADMISSION_OFFICER = ((ADMISSION_OFFICERDataTable)(base.Tables["ADMISSION_OFFICER"]));
            if ((initTable == true)) {
                if ((this.tableADMISSION_OFFICER != null)) {
                    this.tableADMISSION_OFFICER.InitVars();
                }
            }
            this.tableBILL = ((BILLDataTable)(base.Tables["BILL"]));
            if ((initTable == true)) {
                if ((this.tableBILL != null)) {
                    this.tableBILL.InitVars();
                }
            }
            this.tableBILLING_OFFICER = ((BILLING_OFFICERDataTable)(base.Tables["BILLING_OFFICER"]));
            if ((initTable == true)) {
                if ((this.tableBILLING_OFFICER != null)) {
                    this.tableBILLING_OFFICER.InitVars();
                }
            }
            this.tableCHANNELING_OFFICER = ((CHANNELING_OFFICERDataTable)(base.Tables["CHANNELING_OFFICER"]));
            if ((initTable == true)) {
                if ((this.tableCHANNELING_OFFICER != null)) {
                    this.tableCHANNELING_OFFICER.InitVars();
                }
            }
            this.tableCUSTOMER = ((CUSTOMERDataTable)(base.Tables["CUSTOMER"]));
            if ((initTable == true)) {
                if ((this.tableCUSTOMER != null)) {
                    this.tableCUSTOMER.InitVars();
                }
            }
            this.tableDRUG = ((DRUGDataTable)(base.Tables["DRUG"]));
            if ((initTable == true)) {
                if ((this.tableDRUG != null)) {
                    this.tableDRUG.InitVars();
                }
            }
            this.tableDRUG_ORDER = ((DRUG_ORDERDataTable)(base.Tables["DRUG_ORDER"]));
            if ((initTable == true)) {
                if ((this.tableDRUG_ORDER != null)) {
                    this.tableDRUG_ORDER.InitVars();
                }
            }
            this.tableDRUG_SUPPLIER = ((DRUG_SUPPLIERDataTable)(base.Tables["DRUG_SUPPLIER"]));
            if ((initTable == true)) {
                if ((this.tableDRUG_SUPPLIER != null)) {
                    this.tableDRUG_SUPPLIER.InitVars();
                }
            }
            this.tableGUARDIAN = ((GUARDIANDataTable)(base.Tables["GUARDIAN"]));
            if ((initTable == true)) {
                if ((this.tableGUARDIAN != null)) {
                    this.tableGUARDIAN.InitVars();
                }
            }
            this.tableHOSPITAL_CUSTOMER = ((HOSPITAL_CUSTOMERDataTable)(base.Tables["HOSPITAL_CUSTOMER"]));
            if ((initTable == true)) {
                if ((this.tableHOSPITAL_CUSTOMER != null)) {
                    this.tableHOSPITAL_CUSTOMER.InitVars();
                }
            }
            this.tableIN_PATIENT = ((IN_PATIENTDataTable)(base.Tables["IN_PATIENT"]));
            if ((initTable == true)) {
                if ((this.tableIN_PATIENT != null)) {
                    this.tableIN_PATIENT.InitVars();
                }
            }
            this.tableIN_PATIENT_MEDICINE = ((IN_PATIENT_MEDICINEDataTable)(base.Tables["IN_PATIENT_MEDICINE"]));
            if ((initTable == true)) {
                if ((this.tableIN_PATIENT_MEDICINE != null)) {
                    this.tableIN_PATIENT_MEDICINE.InitVars();
                }
            }
            this.tableIN_PATIENT_REPORT = ((IN_PATIENT_REPORTDataTable)(base.Tables["IN_PATIENT_REPORT"]));
            if ((initTable == true)) {
                if ((this.tableIN_PATIENT_REPORT != null)) {
                    this.tableIN_PATIENT_REPORT.InitVars();
                }
            }
            this.tableIN_PATIENT_SCAN = ((IN_PATIENT_SCANDataTable)(base.Tables["IN_PATIENT_SCAN"]));
            if ((initTable == true)) {
                if ((this.tableIN_PATIENT_SCAN != null)) {
                    this.tableIN_PATIENT_SCAN.InitVars();
                }
            }
            this.tableIN_PATIENT_XRAY = ((IN_PATIENT_XRAYDataTable)(base.Tables["IN_PATIENT_XRAY"]));
            if ((initTable == true)) {
                if ((this.tableIN_PATIENT_XRAY != null)) {
                    this.tableIN_PATIENT_XRAY.InitVars();
                }
            }
            this.tableIN_SAMPLE = ((IN_SAMPLEDataTable)(base.Tables["IN_SAMPLE"]));
            if ((initTable == true)) {
                if ((this.tableIN_SAMPLE != null)) {
                    this.tableIN_SAMPLE.InitVars();
                }
            }
            this.tableLABORATORY_STAFF = ((LABORATORY_STAFFDataTable)(base.Tables["LABORATORY_STAFF"]));
            if ((initTable == true)) {
                if ((this.tableLABORATORY_STAFF != null)) {
                    this.tableLABORATORY_STAFF.InitVars();
                }
            }
            this.tableLOG_IN_DETAIL = ((LOG_IN_DETAILDataTable)(base.Tables["LOG_IN_DETAIL"]));
            if ((initTable == true)) {
                if ((this.tableLOG_IN_DETAIL != null)) {
                    this.tableLOG_IN_DETAIL.InitVars();
                }
            }
            this.tableLOG_IN_USER = ((LOG_IN_USERDataTable)(base.Tables["LOG_IN_USER"]));
            if ((initTable == true)) {
                if ((this.tableLOG_IN_USER != null)) {
                    this.tableLOG_IN_USER.InitVars();
                }
            }
            this.tableORGANIZATION = ((ORGANIZATIONDataTable)(base.Tables["ORGANIZATION"]));
            if ((initTable == true)) {
                if ((this.tableORGANIZATION != null)) {
                    this.tableORGANIZATION.InitVars();
                }
            }
            this.tableOUT_PATIENT = ((OUT_PATIENTDataTable)(base.Tables["OUT_PATIENT"]));
            if ((initTable == true)) {
                if ((this.tableOUT_PATIENT != null)) {
                    this.tableOUT_PATIENT.InitVars();
                }
            }
            this.tableOUT_PATIENT_MEDICINE = ((OUT_PATIENT_MEDICINEDataTable)(base.Tables["OUT_PATIENT_MEDICINE"]));
            if ((initTable == true)) {
                if ((this.tableOUT_PATIENT_MEDICINE != null)) {
                    this.tableOUT_PATIENT_MEDICINE.InitVars();
                }
            }
            this.tableOUT_PATIENT_REPORT = ((OUT_PATIENT_REPORTDataTable)(base.Tables["OUT_PATIENT_REPORT"]));
            if ((initTable == true)) {
                if ((this.tableOUT_PATIENT_REPORT != null)) {
                    this.tableOUT_PATIENT_REPORT.InitVars();
                }
            }
            this.tableOUT_PATIENT_SCAN = ((OUT_PATIENT_SCANDataTable)(base.Tables["OUT_PATIENT_SCAN"]));
            if ((initTable == true)) {
                if ((this.tableOUT_PATIENT_SCAN != null)) {
                    this.tableOUT_PATIENT_SCAN.InitVars();
                }
            }
            this.tableOUT_PATIENT_XRAY = ((OUT_PATIENT_XRAYDataTable)(base.Tables["OUT_PATIENT_XRAY"]));
            if ((initTable == true)) {
                if ((this.tableOUT_PATIENT_XRAY != null)) {
                    this.tableOUT_PATIENT_XRAY.InitVars();
                }
            }
            this.tableOUT_SAMPLE = ((OUT_SAMPLEDataTable)(base.Tables["OUT_SAMPLE"]));
            if ((initTable == true)) {
                if ((this.tableOUT_SAMPLE != null)) {
                    this.tableOUT_SAMPLE.InitVars();
                }
            }
            this.tablePATIENT_APPOINTMENT_DETAILS = ((PATIENT_APPOINTMENT_DETAILSDataTable)(base.Tables["PATIENT_APPOINTMENT_DETAILS"]));
            if ((initTable == true)) {
                if ((this.tablePATIENT_APPOINTMENT_DETAILS != null)) {
                    this.tablePATIENT_APPOINTMENT_DETAILS.InitVars();
                }
            }
            this.tablePATIENT_PRIVATE_DETAIL = ((PATIENT_PRIVATE_DETAILDataTable)(base.Tables["PATIENT_PRIVATE_DETAIL"]));
            if ((initTable == true)) {
                if ((this.tablePATIENT_PRIVATE_DETAIL != null)) {
                    this.tablePATIENT_PRIVATE_DETAIL.InitVars();
                }
            }
            this.tablePHARMACY_MEDICINES = ((PHARMACY_MEDICINESDataTable)(base.Tables["PHARMACY_MEDICINES"]));
            if ((initTable == true)) {
                if ((this.tablePHARMACY_MEDICINES != null)) {
                    this.tablePHARMACY_MEDICINES.InitVars();
                }
            }
            this.tablePHARMACY_STAFF = ((PHARMACY_STAFFDataTable)(base.Tables["PHARMACY_STAFF"]));
            if ((initTable == true)) {
                if ((this.tablePHARMACY_STAFF != null)) {
                    this.tablePHARMACY_STAFF.InitVars();
                }
            }
            this.tableQUALIFICATION = ((QUALIFICATIONDataTable)(base.Tables["QUALIFICATION"]));
            if ((initTable == true)) {
                if ((this.tableQUALIFICATION != null)) {
                    this.tableQUALIFICATION.InitVars();
                }
            }
            this.tableREPORT_IN_PATIENT = ((REPORT_IN_PATIENTDataTable)(base.Tables["REPORT_IN_PATIENT"]));
            if ((initTable == true)) {
                if ((this.tableREPORT_IN_PATIENT != null)) {
                    this.tableREPORT_IN_PATIENT.InitVars();
                }
            }
            this.tableREPORT_OUT_PATIENT = ((REPORT_OUT_PATIENTDataTable)(base.Tables["REPORT_OUT_PATIENT"]));
            if ((initTable == true)) {
                if ((this.tableREPORT_OUT_PATIENT != null)) {
                    this.tableREPORT_OUT_PATIENT.InitVars();
                }
            }
            this.tableROOM = ((ROOMDataTable)(base.Tables["ROOM"]));
            if ((initTable == true)) {
                if ((this.tableROOM != null)) {
                    this.tableROOM.InitVars();
                }
            }
            this.tableSCAN_ROOM = ((SCAN_ROOMDataTable)(base.Tables["SCAN_ROOM"]));
            if ((initTable == true)) {
                if ((this.tableSCAN_ROOM != null)) {
                    this.tableSCAN_ROOM.InitVars();
                }
            }
            this.tableSPECIALIST_DOCTOR = ((SPECIALIST_DOCTORDataTable)(base.Tables["SPECIALIST_DOCTOR"]));
            if ((initTable == true)) {
                if ((this.tableSPECIALIST_DOCTOR != null)) {
                    this.tableSPECIALIST_DOCTOR.InitVars();
                }
            }
            this.tableWARD = ((WARDDataTable)(base.Tables["WARD"]));
            if ((initTable == true)) {
                if ((this.tableWARD != null)) {
                    this.tableWARD.InitVars();
                }
            }
            this.tableWARD_STAFF = ((WARD_STAFFDataTable)(base.Tables["WARD_STAFF"]));
            if ((initTable == true)) {
                if ((this.tableWARD_STAFF != null)) {
                    this.tableWARD_STAFF.InitVars();
                }
            }
            this.tableX_RAY_ROOM = ((X_RAY_ROOMDataTable)(base.Tables["X_RAY_ROOM"]));
            if ((initTable == true)) {
                if ((this.tableX_RAY_ROOM != null)) {
                    this.tableX_RAY_ROOM.InitVars();
                }
            }
            this.relationfk_ADMISSION_OFFICER = this.Relations["fk_ADMISSION_OFFICER"];
            this.relationFK__BILL__Billing_Of__6477ECF3 = this.Relations["FK__BILL__Billing_Of__6477ECF3"];
            this.relationfk_BILL = this.Relations["fk_BILL"];
            this.relationfk_BILLING_OFFICER = this.Relations["fk_BILLING_OFFICER"];
            this.relationFK__CUSTOMER__Specia__5535A963 = this.Relations["FK__CUSTOMER__Specia__5535A963"];
            this.relationfk_CUSTOMER = this.Relations["fk_CUSTOMER"];
            this.relationFK__DRUG_ORDE__Suppl__73BA3083 = this.Relations["FK__DRUG_ORDE__Suppl__73BA3083"];
            this.relationfk_DRUG_ORDER = this.Relations["fk_DRUG_ORDER"];
            this.relationFK__GUARDIAN__Billin__4CA06362 = this.Relations["FK__GUARDIAN__Billin__4CA06362"];
            this.relationfk_GUARDIAN = this.Relations["fk_GUARDIAN"];
            this.relationFK__HOSPITAL___Pharm__787EE5A0 = this.Relations["FK__HOSPITAL___Pharm__787EE5A0"];
            this.relationFK__HOSPITAL___Speci__778AC167 = this.Relations["FK__HOSPITAL___Speci__778AC167"];
            this.relationfk_HOSPITAL_CUSTOMER = this.Relations["fk_HOSPITAL_CUSTOMER"];
            this.relationFK__IN_PATIEN__Patie__5EBF139D = this.Relations["FK__IN_PATIEN__Patie__5EBF139D"];
            this.relationFK__IN_PATIEN__Room___5DCAEF64 = this.Relations["FK__IN_PATIEN__Room___5DCAEF64"];
            this.relationFK__IN_PATIEN__Ward___5CD6CB2B = this.Relations["FK__IN_PATIEN__Ward___5CD6CB2B"];
            this.relationfk_IN_PATIENT = this.Relations["fk_IN_PATIENT"];
            this.relationFK__IN_PATIEN__Drug___01142BA1 = this.Relations["FK__IN_PATIEN__Drug___01142BA1"];
            this.relationfk_IN_PATIENT_MEDICINE = this.Relations["fk_IN_PATIENT_MEDICINE"];
            this.relationfk_IN_PATIENT_REPORT = this.Relations["fk_IN_PATIENT_REPORT"];
            this.relationFK__IN_PATIEN__Room___2645B050 = this.Relations["FK__IN_PATIEN__Room___2645B050"];
            this.relationFK__IN_PATIEN__Speci__2739D489 = this.Relations["FK__IN_PATIEN__Speci__2739D489"];
            this.relationFK__IN_PATIEN__Ward___25518C17 = this.Relations["FK__IN_PATIEN__Ward___25518C17"];
            this.relationfk_IN_PATIENT_SCAN = this.Relations["fk_IN_PATIENT_SCAN"];
            this.relationFK__IN_PATIEN__Room___1BC821DD = this.Relations["FK__IN_PATIEN__Room___1BC821DD"];
            this.relationFK__IN_PATIEN__Speci__1CBC4616 = this.Relations["FK__IN_PATIEN__Speci__1CBC4616"];
            this.relationFK__IN_PATIEN__Ward___1AD3FDA4 = this.Relations["FK__IN_PATIEN__Ward___1AD3FDA4"];
            this.relationfk_IN_PATIENT_XRAY = this.Relations["fk_IN_PATIENT_XRAY"];
            this.relationFK__IN_SAMPLE__Speci__0B91BA14 = this.Relations["FK__IN_SAMPLE__Speci__0B91BA14"];
            this.relationfk_IN_SAMPLE = this.Relations["fk_IN_SAMPLE"];
            this.relationFK_LOG_IN_DETAIL = this.Relations["FK_LOG_IN_DETAIL"];
            this.relationfk_LOG_IN_USER = this.Relations["fk_LOG_IN_USER"];
            this.relationFK__ORGANIZAT__Billi__693CA210 = this.Relations["FK__ORGANIZAT__Billi__693CA210"];
            this.relationfk_ORGANIZATION = this.Relations["fk_ORGANIZATION"];
            this.relationFK__OUT_PATIE__Drug___04E4BC85 = this.Relations["FK__OUT_PATIE__Drug___04E4BC85"];
            this.relationfk_OUT_PATIENT_MEDICINE = this.Relations["fk_OUT_PATIENT_MEDICINE"];
            this.relationfk_OUT_PATIENT_REPORT = this.Relations["fk_OUT_PATIENT_REPORT"];
            this.relationFK__OUT_PATIE__Speci__2B0A656D = this.Relations["FK__OUT_PATIE__Speci__2B0A656D"];
            this.relationfk_OUT_PATIENT_SCAN = this.Relations["fk_OUT_PATIENT_SCAN"];
            this.relationfk_OUT_PATIENT_XRAY = this.Relations["fk_OUT_PATIENT_XRAY"];
            this.relationFK__OUT_SAMPL__Speci__0F624AF8 = this.Relations["FK__OUT_SAMPL__Speci__0F624AF8"];
            this.relationfk_OUT_SAMPLE = this.Relations["fk_OUT_SAMPLE"];
            this.relationFK__PATIENT_A__Invoi__59063A47 = this.Relations["FK__PATIENT_A__Invoi__59063A47"];
            this.relationfk_PATIENT_APPOINTMENT_DETAILS = this.Relations["fk_PATIENT_APPOINTMENT_DETAILS"];
            this.relationFK__PATIENT_P__Speci__5070F446 = this.Relations["FK__PATIENT_P__Speci__5070F446"];
            this.relationfk_PATIENT_PRIVATE_DETAIL = this.Relations["fk_PATIENT_PRIVATE_DETAIL"];
            this.relationFK__PHARMACY___Drug___7C4F7684 = this.Relations["FK__PHARMACY___Drug___7C4F7684"];
            this.relationfk_PHARMACY_MEDICINES = this.Relations["fk_PHARMACY_MEDICINES"];
            this.relationfk_PHARMACY_STAFF = this.Relations["fk_PHARMACY_STAFF"];
            this.relationfk_QUALIFICATION = this.Relations["fk_QUALIFICATION"];
            this.relationFK__REPORT_IN__In_Pa__2EDAF651 = this.Relations["FK__REPORT_IN__In_Pa__2EDAF651"];
            this.relationFK__REPORT_IN__In_Pa__2FCF1A8A = this.Relations["FK__REPORT_IN__In_Pa__2FCF1A8A"];
            this.relationFK__REPORT_IN__In_Pa__30C33EC3 = this.Relations["FK__REPORT_IN__In_Pa__30C33EC3"];
            this.relationfk_REPORT_IN_PATIENT = this.Relations["fk_REPORT_IN_PATIENT"];
            this.relationFK__REPORT_OU__Out_P__3493CFA7 = this.Relations["FK__REPORT_OU__Out_P__3493CFA7"];
            this.relationFK__REPORT_OU__Out_P__3587F3E0 = this.Relations["FK__REPORT_OU__Out_P__3587F3E0"];
            this.relationFK__REPORT_OU__Out_P__367C1819 = this.Relations["FK__REPORT_OU__Out_P__367C1819"];
            this.relationfk_REPORT_OUT_PATIENT = this.Relations["fk_REPORT_OUT_PATIENT"];
            this.relationfk_ROOM = this.Relations["fk_ROOM"];
            this.relationfk_SPECIALIST_DOCTOR = this.Relations["fk_SPECIALIST_DOCTOR"];
            this.relationFK__WARD_STAF__Roll___47DBAE45 = this.Relations["FK__WARD_STAF__Roll___47DBAE45"];
            this.relationfk_WARD_STAFF = this.Relations["fk_WARD_STAFF"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "GUI_Hospital_Management_SystemDataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/GUI_Hospital_Management_SystemDataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableACCOUNT = new ACCOUNTDataTable();
            base.Tables.Add(this.tableACCOUNT);
            this.tableADMISSION_OFFICER = new ADMISSION_OFFICERDataTable();
            base.Tables.Add(this.tableADMISSION_OFFICER);
            this.tableBILL = new BILLDataTable();
            base.Tables.Add(this.tableBILL);
            this.tableBILLING_OFFICER = new BILLING_OFFICERDataTable();
            base.Tables.Add(this.tableBILLING_OFFICER);
            this.tableCHANNELING_OFFICER = new CHANNELING_OFFICERDataTable();
            base.Tables.Add(this.tableCHANNELING_OFFICER);
            this.tableCUSTOMER = new CUSTOMERDataTable();
            base.Tables.Add(this.tableCUSTOMER);
            this.tableDRUG = new DRUGDataTable();
            base.Tables.Add(this.tableDRUG);
            this.tableDRUG_ORDER = new DRUG_ORDERDataTable();
            base.Tables.Add(this.tableDRUG_ORDER);
            this.tableDRUG_SUPPLIER = new DRUG_SUPPLIERDataTable();
            base.Tables.Add(this.tableDRUG_SUPPLIER);
            this.tableGUARDIAN = new GUARDIANDataTable();
            base.Tables.Add(this.tableGUARDIAN);
            this.tableHOSPITAL_CUSTOMER = new HOSPITAL_CUSTOMERDataTable();
            base.Tables.Add(this.tableHOSPITAL_CUSTOMER);
            this.tableIN_PATIENT = new IN_PATIENTDataTable();
            base.Tables.Add(this.tableIN_PATIENT);
            this.tableIN_PATIENT_MEDICINE = new IN_PATIENT_MEDICINEDataTable();
            base.Tables.Add(this.tableIN_PATIENT_MEDICINE);
            this.tableIN_PATIENT_REPORT = new IN_PATIENT_REPORTDataTable();
            base.Tables.Add(this.tableIN_PATIENT_REPORT);
            this.tableIN_PATIENT_SCAN = new IN_PATIENT_SCANDataTable();
            base.Tables.Add(this.tableIN_PATIENT_SCAN);
            this.tableIN_PATIENT_XRAY = new IN_PATIENT_XRAYDataTable();
            base.Tables.Add(this.tableIN_PATIENT_XRAY);
            this.tableIN_SAMPLE = new IN_SAMPLEDataTable();
            base.Tables.Add(this.tableIN_SAMPLE);
            this.tableLABORATORY_STAFF = new LABORATORY_STAFFDataTable();
            base.Tables.Add(this.tableLABORATORY_STAFF);
            this.tableLOG_IN_DETAIL = new LOG_IN_DETAILDataTable();
            base.Tables.Add(this.tableLOG_IN_DETAIL);
            this.tableLOG_IN_USER = new LOG_IN_USERDataTable();
            base.Tables.Add(this.tableLOG_IN_USER);
            this.tableORGANIZATION = new ORGANIZATIONDataTable();
            base.Tables.Add(this.tableORGANIZATION);
            this.tableOUT_PATIENT = new OUT_PATIENTDataTable();
            base.Tables.Add(this.tableOUT_PATIENT);
            this.tableOUT_PATIENT_MEDICINE = new OUT_PATIENT_MEDICINEDataTable();
            base.Tables.Add(this.tableOUT_PATIENT_MEDICINE);
            this.tableOUT_PATIENT_REPORT = new OUT_PATIENT_REPORTDataTable();
            base.Tables.Add(this.tableOUT_PATIENT_REPORT);
            this.tableOUT_PATIENT_SCAN = new OUT_PATIENT_SCANDataTable();
            base.Tables.Add(this.tableOUT_PATIENT_SCAN);
            this.tableOUT_PATIENT_XRAY = new OUT_PATIENT_XRAYDataTable();
            base.Tables.Add(this.tableOUT_PATIENT_XRAY);
            this.tableOUT_SAMPLE = new OUT_SAMPLEDataTable();
            base.Tables.Add(this.tableOUT_SAMPLE);
            this.tablePATIENT_APPOINTMENT_DETAILS = new PATIENT_APPOINTMENT_DETAILSDataTable();
            base.Tables.Add(this.tablePATIENT_APPOINTMENT_DETAILS);
            this.tablePATIENT_PRIVATE_DETAIL = new PATIENT_PRIVATE_DETAILDataTable();
            base.Tables.Add(this.tablePATIENT_PRIVATE_DETAIL);
            this.tablePHARMACY_MEDICINES = new PHARMACY_MEDICINESDataTable();
            base.Tables.Add(this.tablePHARMACY_MEDICINES);
            this.tablePHARMACY_STAFF = new PHARMACY_STAFFDataTable();
            base.Tables.Add(this.tablePHARMACY_STAFF);
            this.tableQUALIFICATION = new QUALIFICATIONDataTable();
            base.Tables.Add(this.tableQUALIFICATION);
            this.tableREPORT_IN_PATIENT = new REPORT_IN_PATIENTDataTable();
            base.Tables.Add(this.tableREPORT_IN_PATIENT);
            this.tableREPORT_OUT_PATIENT = new REPORT_OUT_PATIENTDataTable();
            base.Tables.Add(this.tableREPORT_OUT_PATIENT);
            this.tableROOM = new ROOMDataTable();
            base.Tables.Add(this.tableROOM);
            this.tableSCAN_ROOM = new SCAN_ROOMDataTable();
            base.Tables.Add(this.tableSCAN_ROOM);
            this.tableSPECIALIST_DOCTOR = new SPECIALIST_DOCTORDataTable();
            base.Tables.Add(this.tableSPECIALIST_DOCTOR);
            this.tableWARD = new WARDDataTable();
            base.Tables.Add(this.tableWARD);
            this.tableWARD_STAFF = new WARD_STAFFDataTable();
            base.Tables.Add(this.tableWARD_STAFF);
            this.tableX_RAY_ROOM = new X_RAY_ROOMDataTable();
            base.Tables.Add(this.tableX_RAY_ROOM);
            this.relationfk_ADMISSION_OFFICER = new global::System.Data.DataRelation("fk_ADMISSION_OFFICER", new global::System.Data.DataColumn[] {
                        this.tableACCOUNT.Roll_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableADMISSION_OFFICER.Roll_IdColumn}, false);
            this.Relations.Add(this.relationfk_ADMISSION_OFFICER);
            this.relationFK__BILL__Billing_Of__6477ECF3 = new global::System.Data.DataRelation("FK__BILL__Billing_Of__6477ECF3", new global::System.Data.DataColumn[] {
                        this.tableBILLING_OFFICER.Billing_Officer_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableBILL.Billing_Officer_IdColumn}, false);
            this.Relations.Add(this.relationFK__BILL__Billing_Of__6477ECF3);
            this.relationfk_BILL = new global::System.Data.DataRelation("fk_BILL", new global::System.Data.DataColumn[] {
                        this.tableGUARDIAN.Guardian_Id_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableBILL.Guardian_Id_NumberColumn}, false);
            this.Relations.Add(this.relationfk_BILL);
            this.relationfk_BILLING_OFFICER = new global::System.Data.DataRelation("fk_BILLING_OFFICER", new global::System.Data.DataColumn[] {
                        this.tableACCOUNT.Roll_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableBILLING_OFFICER.Roll_IdColumn}, false);
            this.Relations.Add(this.relationfk_BILLING_OFFICER);
            this.relationFK__CUSTOMER__Specia__5535A963 = new global::System.Data.DataRelation("FK__CUSTOMER__Specia__5535A963", new global::System.Data.DataColumn[] {
                        this.tableSPECIALIST_DOCTOR.Specialist_Doctor_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCUSTOMER.Specialist_Doctor_IdColumn}, false);
            this.Relations.Add(this.relationFK__CUSTOMER__Specia__5535A963);
            this.relationfk_CUSTOMER = new global::System.Data.DataRelation("fk_CUSTOMER", new global::System.Data.DataColumn[] {
                        this.tableCHANNELING_OFFICER.Channneling_Officer_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCUSTOMER.Channneling_Officer_IdColumn}, false);
            this.Relations.Add(this.relationfk_CUSTOMER);
            this.relationFK__DRUG_ORDE__Suppl__73BA3083 = new global::System.Data.DataRelation("FK__DRUG_ORDE__Suppl__73BA3083", new global::System.Data.DataColumn[] {
                        this.tableDRUG_SUPPLIER.Supplier_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDRUG_ORDER.Supplier_IdColumn}, false);
            this.Relations.Add(this.relationFK__DRUG_ORDE__Suppl__73BA3083);
            this.relationfk_DRUG_ORDER = new global::System.Data.DataRelation("fk_DRUG_ORDER", new global::System.Data.DataColumn[] {
                        this.tableDRUG.Drug_CodeColumn}, new global::System.Data.DataColumn[] {
                        this.tableDRUG_ORDER.Drug_CodeColumn}, false);
            this.Relations.Add(this.relationfk_DRUG_ORDER);
            this.relationFK__GUARDIAN__Billin__4CA06362 = new global::System.Data.DataRelation("FK__GUARDIAN__Billin__4CA06362", new global::System.Data.DataColumn[] {
                        this.tableBILLING_OFFICER.Billing_Officer_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableGUARDIAN.Billing_Officer_IdColumn}, false);
            this.Relations.Add(this.relationFK__GUARDIAN__Billin__4CA06362);
            this.relationfk_GUARDIAN = new global::System.Data.DataRelation("fk_GUARDIAN", new global::System.Data.DataColumn[] {
                        this.tableADMISSION_OFFICER.Admission_Officer_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableGUARDIAN.Admission_Officer_IdColumn}, false);
            this.Relations.Add(this.relationfk_GUARDIAN);
            this.relationFK__HOSPITAL___Pharm__787EE5A0 = new global::System.Data.DataRelation("FK__HOSPITAL___Pharm__787EE5A0", new global::System.Data.DataColumn[] {
                        this.tablePHARMACY_STAFF.Pharmacy_Staff_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableHOSPITAL_CUSTOMER.Pharmacy_Staff_IdColumn}, false);
            this.Relations.Add(this.relationFK__HOSPITAL___Pharm__787EE5A0);
            this.relationFK__HOSPITAL___Speci__778AC167 = new global::System.Data.DataRelation("FK__HOSPITAL___Speci__778AC167", new global::System.Data.DataColumn[] {
                        this.tableSPECIALIST_DOCTOR.Specialist_Doctor_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableHOSPITAL_CUSTOMER.Specialist_Doctor_IdColumn}, false);
            this.Relations.Add(this.relationFK__HOSPITAL___Speci__778AC167);
            this.relationfk_HOSPITAL_CUSTOMER = new global::System.Data.DataRelation("fk_HOSPITAL_CUSTOMER", new global::System.Data.DataColumn[] {
                        this.tablePATIENT_PRIVATE_DETAIL.Patient_Id_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableHOSPITAL_CUSTOMER.Patient_Id_NumberColumn}, false);
            this.Relations.Add(this.relationfk_HOSPITAL_CUSTOMER);
            this.relationFK__IN_PATIEN__Patie__5EBF139D = new global::System.Data.DataRelation("FK__IN_PATIEN__Patie__5EBF139D", new global::System.Data.DataColumn[] {
                        this.tablePATIENT_PRIVATE_DETAIL.Patient_Id_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT.Patient_Id_NumberColumn}, false);
            this.Relations.Add(this.relationFK__IN_PATIEN__Patie__5EBF139D);
            this.relationFK__IN_PATIEN__Room___5DCAEF64 = new global::System.Data.DataRelation("FK__IN_PATIEN__Room___5DCAEF64", new global::System.Data.DataColumn[] {
                        this.tableROOM.Room_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT.Room_NumberColumn}, false);
            this.Relations.Add(this.relationFK__IN_PATIEN__Room___5DCAEF64);
            this.relationFK__IN_PATIEN__Ward___5CD6CB2B = new global::System.Data.DataRelation("FK__IN_PATIEN__Ward___5CD6CB2B", new global::System.Data.DataColumn[] {
                        this.tableWARD.Ward_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT.Ward_NumberColumn}, false);
            this.Relations.Add(this.relationFK__IN_PATIEN__Ward___5CD6CB2B);
            this.relationfk_IN_PATIENT = new global::System.Data.DataRelation("fk_IN_PATIENT", new global::System.Data.DataColumn[] {
                        this.tableSPECIALIST_DOCTOR.Specialist_Doctor_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT.Specialist_Doctor_IdColumn}, false);
            this.Relations.Add(this.relationfk_IN_PATIENT);
            this.relationFK__IN_PATIEN__Drug___01142BA1 = new global::System.Data.DataRelation("FK__IN_PATIEN__Drug___01142BA1", new global::System.Data.DataColumn[] {
                        this.tableDRUG.Drug_CodeColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT_MEDICINE.Drug_CodeColumn}, false);
            this.Relations.Add(this.relationFK__IN_PATIEN__Drug___01142BA1);
            this.relationfk_IN_PATIENT_MEDICINE = new global::System.Data.DataRelation("fk_IN_PATIENT_MEDICINE", new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT.Admission_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT_MEDICINE.Admission_NumberColumn}, false);
            this.Relations.Add(this.relationfk_IN_PATIENT_MEDICINE);
            this.relationfk_IN_PATIENT_REPORT = new global::System.Data.DataRelation("fk_IN_PATIENT_REPORT", new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT.Admission_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT_REPORT.Admission_NumberColumn}, false);
            this.Relations.Add(this.relationfk_IN_PATIENT_REPORT);
            this.relationFK__IN_PATIEN__Room___2645B050 = new global::System.Data.DataRelation("FK__IN_PATIEN__Room___2645B050", new global::System.Data.DataColumn[] {
                        this.tableROOM.Room_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT_SCAN.Room_NumberColumn}, false);
            this.Relations.Add(this.relationFK__IN_PATIEN__Room___2645B050);
            this.relationFK__IN_PATIEN__Speci__2739D489 = new global::System.Data.DataRelation("FK__IN_PATIEN__Speci__2739D489", new global::System.Data.DataColumn[] {
                        this.tableSPECIALIST_DOCTOR.Specialist_Doctor_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT_SCAN.Specialist_Doctor_IdColumn}, false);
            this.Relations.Add(this.relationFK__IN_PATIEN__Speci__2739D489);
            this.relationFK__IN_PATIEN__Ward___25518C17 = new global::System.Data.DataRelation("FK__IN_PATIEN__Ward___25518C17", new global::System.Data.DataColumn[] {
                        this.tableWARD.Ward_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT_SCAN.Ward_NumberColumn}, false);
            this.Relations.Add(this.relationFK__IN_PATIEN__Ward___25518C17);
            this.relationfk_IN_PATIENT_SCAN = new global::System.Data.DataRelation("fk_IN_PATIENT_SCAN", new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT.Admission_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT_SCAN.Admission_NumberColumn}, false);
            this.Relations.Add(this.relationfk_IN_PATIENT_SCAN);
            this.relationFK__IN_PATIEN__Room___1BC821DD = new global::System.Data.DataRelation("FK__IN_PATIEN__Room___1BC821DD", new global::System.Data.DataColumn[] {
                        this.tableROOM.Room_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT_XRAY.Room_NumberColumn}, false);
            this.Relations.Add(this.relationFK__IN_PATIEN__Room___1BC821DD);
            this.relationFK__IN_PATIEN__Speci__1CBC4616 = new global::System.Data.DataRelation("FK__IN_PATIEN__Speci__1CBC4616", new global::System.Data.DataColumn[] {
                        this.tableSPECIALIST_DOCTOR.Specialist_Doctor_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT_XRAY.Specialist_Doctor_IdColumn}, false);
            this.Relations.Add(this.relationFK__IN_PATIEN__Speci__1CBC4616);
            this.relationFK__IN_PATIEN__Ward___1AD3FDA4 = new global::System.Data.DataRelation("FK__IN_PATIEN__Ward___1AD3FDA4", new global::System.Data.DataColumn[] {
                        this.tableWARD.Ward_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT_XRAY.Ward_NumberColumn}, false);
            this.Relations.Add(this.relationFK__IN_PATIEN__Ward___1AD3FDA4);
            this.relationfk_IN_PATIENT_XRAY = new global::System.Data.DataRelation("fk_IN_PATIENT_XRAY", new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT.Admission_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT_XRAY.Admission_NumberColumn}, false);
            this.Relations.Add(this.relationfk_IN_PATIENT_XRAY);
            this.relationFK__IN_SAMPLE__Speci__0B91BA14 = new global::System.Data.DataRelation("FK__IN_SAMPLE__Speci__0B91BA14", new global::System.Data.DataColumn[] {
                        this.tableSPECIALIST_DOCTOR.Specialist_Doctor_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_SAMPLE.Specialist_Doctor_IdColumn}, false);
            this.Relations.Add(this.relationFK__IN_SAMPLE__Speci__0B91BA14);
            this.relationfk_IN_SAMPLE = new global::System.Data.DataRelation("fk_IN_SAMPLE", new global::System.Data.DataColumn[] {
                        this.tablePATIENT_PRIVATE_DETAIL.Patient_Id_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableIN_SAMPLE.Patient_Id_NumberColumn}, false);
            this.Relations.Add(this.relationfk_IN_SAMPLE);
            this.relationFK_LOG_IN_DETAIL = new global::System.Data.DataRelation("FK_LOG_IN_DETAIL", new global::System.Data.DataColumn[] {
                        this.tableACCOUNT.Roll_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableLOG_IN_DETAIL.Roll_IdColumn}, false);
            this.Relations.Add(this.relationFK_LOG_IN_DETAIL);
            this.relationfk_LOG_IN_USER = new global::System.Data.DataRelation("fk_LOG_IN_USER", new global::System.Data.DataColumn[] {
                        this.tableACCOUNT.Roll_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableLOG_IN_USER.Roll_IdColumn}, false);
            this.Relations.Add(this.relationfk_LOG_IN_USER);
            this.relationFK__ORGANIZAT__Billi__693CA210 = new global::System.Data.DataRelation("FK__ORGANIZAT__Billi__693CA210", new global::System.Data.DataColumn[] {
                        this.tableBILLING_OFFICER.Billing_Officer_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableORGANIZATION.Billing_Officer_IdColumn}, false);
            this.Relations.Add(this.relationFK__ORGANIZAT__Billi__693CA210);
            this.relationfk_ORGANIZATION = new global::System.Data.DataRelation("fk_ORGANIZATION", new global::System.Data.DataColumn[] {
                        this.tableBILL.Bill_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableORGANIZATION.Bill_NumberColumn}, false);
            this.Relations.Add(this.relationfk_ORGANIZATION);
            this.relationFK__OUT_PATIE__Drug___04E4BC85 = new global::System.Data.DataRelation("FK__OUT_PATIE__Drug___04E4BC85", new global::System.Data.DataColumn[] {
                        this.tableDRUG.Drug_CodeColumn}, new global::System.Data.DataColumn[] {
                        this.tableOUT_PATIENT_MEDICINE.Drug_CodeColumn}, false);
            this.Relations.Add(this.relationFK__OUT_PATIE__Drug___04E4BC85);
            this.relationfk_OUT_PATIENT_MEDICINE = new global::System.Data.DataRelation("fk_OUT_PATIENT_MEDICINE", new global::System.Data.DataColumn[] {
                        this.tableOUT_PATIENT.Out_Patient_Id_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableOUT_PATIENT_MEDICINE.Out_Patient_Id_NumberColumn}, false);
            this.Relations.Add(this.relationfk_OUT_PATIENT_MEDICINE);
            this.relationfk_OUT_PATIENT_REPORT = new global::System.Data.DataRelation("fk_OUT_PATIENT_REPORT", new global::System.Data.DataColumn[] {
                        this.tablePATIENT_PRIVATE_DETAIL.Patient_Id_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableOUT_PATIENT_REPORT.Patient_Id_NumberColumn}, false);
            this.Relations.Add(this.relationfk_OUT_PATIENT_REPORT);
            this.relationFK__OUT_PATIE__Speci__2B0A656D = new global::System.Data.DataRelation("FK__OUT_PATIE__Speci__2B0A656D", new global::System.Data.DataColumn[] {
                        this.tableSPECIALIST_DOCTOR.Specialist_Doctor_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableOUT_PATIENT_SCAN.Specialist_Doctor_IdColumn}, false);
            this.Relations.Add(this.relationFK__OUT_PATIE__Speci__2B0A656D);
            this.relationfk_OUT_PATIENT_SCAN = new global::System.Data.DataRelation("fk_OUT_PATIENT_SCAN", new global::System.Data.DataColumn[] {
                        this.tablePATIENT_PRIVATE_DETAIL.Patient_Id_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableOUT_PATIENT_SCAN.Patient_Id_NumberColumn}, false);
            this.Relations.Add(this.relationfk_OUT_PATIENT_SCAN);
            this.relationfk_OUT_PATIENT_XRAY = new global::System.Data.DataRelation("fk_OUT_PATIENT_XRAY", new global::System.Data.DataColumn[] {
                        this.tablePATIENT_PRIVATE_DETAIL.Patient_Id_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableOUT_PATIENT_XRAY.Patient_Id_NumberColumn}, false);
            this.Relations.Add(this.relationfk_OUT_PATIENT_XRAY);
            this.relationFK__OUT_SAMPL__Speci__0F624AF8 = new global::System.Data.DataRelation("FK__OUT_SAMPL__Speci__0F624AF8", new global::System.Data.DataColumn[] {
                        this.tableSPECIALIST_DOCTOR.Specialist_Doctor_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableOUT_SAMPLE.Specialist_Doctor_IdColumn}, false);
            this.Relations.Add(this.relationFK__OUT_SAMPL__Speci__0F624AF8);
            this.relationfk_OUT_SAMPLE = new global::System.Data.DataRelation("fk_OUT_SAMPLE", new global::System.Data.DataColumn[] {
                        this.tablePATIENT_PRIVATE_DETAIL.Patient_Id_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableOUT_SAMPLE.Patient_Id_NumberColumn}, false);
            this.Relations.Add(this.relationfk_OUT_SAMPLE);
            this.relationFK__PATIENT_A__Invoi__59063A47 = new global::System.Data.DataRelation("FK__PATIENT_A__Invoi__59063A47", new global::System.Data.DataColumn[] {
                        this.tableCUSTOMER.Invoice_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tablePATIENT_APPOINTMENT_DETAILS.Invoice_NumberColumn}, false);
            this.Relations.Add(this.relationFK__PATIENT_A__Invoi__59063A47);
            this.relationfk_PATIENT_APPOINTMENT_DETAILS = new global::System.Data.DataRelation("fk_PATIENT_APPOINTMENT_DETAILS", new global::System.Data.DataColumn[] {
                        this.tablePATIENT_PRIVATE_DETAIL.Patient_Id_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tablePATIENT_APPOINTMENT_DETAILS.Patient_Id_NumberColumn}, false);
            this.Relations.Add(this.relationfk_PATIENT_APPOINTMENT_DETAILS);
            this.relationFK__PATIENT_P__Speci__5070F446 = new global::System.Data.DataRelation("FK__PATIENT_P__Speci__5070F446", new global::System.Data.DataColumn[] {
                        this.tableSPECIALIST_DOCTOR.Specialist_Doctor_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablePATIENT_PRIVATE_DETAIL.Specialist_Doctor_IdColumn}, false);
            this.Relations.Add(this.relationFK__PATIENT_P__Speci__5070F446);
            this.relationfk_PATIENT_PRIVATE_DETAIL = new global::System.Data.DataRelation("fk_PATIENT_PRIVATE_DETAIL", new global::System.Data.DataColumn[] {
                        this.tableGUARDIAN.Guardian_Id_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tablePATIENT_PRIVATE_DETAIL.Guardian_Id_NumberColumn}, false);
            this.Relations.Add(this.relationfk_PATIENT_PRIVATE_DETAIL);
            this.relationFK__PHARMACY___Drug___7C4F7684 = new global::System.Data.DataRelation("FK__PHARMACY___Drug___7C4F7684", new global::System.Data.DataColumn[] {
                        this.tableDRUG.Drug_CodeColumn}, new global::System.Data.DataColumn[] {
                        this.tablePHARMACY_MEDICINES.Drug_CodeColumn}, false);
            this.Relations.Add(this.relationFK__PHARMACY___Drug___7C4F7684);
            this.relationfk_PHARMACY_MEDICINES = new global::System.Data.DataRelation("fk_PHARMACY_MEDICINES", new global::System.Data.DataColumn[] {
                        this.tableHOSPITAL_CUSTOMER.Pharmacy_Invoice_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tablePHARMACY_MEDICINES.Pharmacy_Invoice_NumberColumn}, false);
            this.Relations.Add(this.relationfk_PHARMACY_MEDICINES);
            this.relationfk_PHARMACY_STAFF = new global::System.Data.DataRelation("fk_PHARMACY_STAFF", new global::System.Data.DataColumn[] {
                        this.tableACCOUNT.Roll_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablePHARMACY_STAFF.Roll_IdColumn}, false);
            this.Relations.Add(this.relationfk_PHARMACY_STAFF);
            this.relationfk_QUALIFICATION = new global::System.Data.DataRelation("fk_QUALIFICATION", new global::System.Data.DataColumn[] {
                        this.tableSPECIALIST_DOCTOR.Specialist_Doctor_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableQUALIFICATION.Specialist_Doctor_IdColumn}, false);
            this.Relations.Add(this.relationfk_QUALIFICATION);
            this.relationFK__REPORT_IN__In_Pa__2EDAF651 = new global::System.Data.DataRelation("FK__REPORT_IN__In_Pa__2EDAF651", new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT_REPORT.In_Patient_Report_NoColumn}, new global::System.Data.DataColumn[] {
                        this.tableREPORT_IN_PATIENT.In_Patient_Report_NoColumn}, false);
            this.Relations.Add(this.relationFK__REPORT_IN__In_Pa__2EDAF651);
            this.relationFK__REPORT_IN__In_Pa__2FCF1A8A = new global::System.Data.DataRelation("FK__REPORT_IN__In_Pa__2FCF1A8A", new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT_XRAY.In_Patient_X_Ray_NoColumn}, new global::System.Data.DataColumn[] {
                        this.tableREPORT_IN_PATIENT.In_Patient_Xray_NoColumn}, false);
            this.Relations.Add(this.relationFK__REPORT_IN__In_Pa__2FCF1A8A);
            this.relationFK__REPORT_IN__In_Pa__30C33EC3 = new global::System.Data.DataRelation("FK__REPORT_IN__In_Pa__30C33EC3", new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT_SCAN.In_Patient_Scan_NoColumn}, new global::System.Data.DataColumn[] {
                        this.tableREPORT_IN_PATIENT.In_Patient_Scan_NoColumn}, false);
            this.Relations.Add(this.relationFK__REPORT_IN__In_Pa__30C33EC3);
            this.relationfk_REPORT_IN_PATIENT = new global::System.Data.DataRelation("fk_REPORT_IN_PATIENT", new global::System.Data.DataColumn[] {
                        this.tableIN_PATIENT.Admission_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableREPORT_IN_PATIENT.Admission_NumberColumn}, false);
            this.Relations.Add(this.relationfk_REPORT_IN_PATIENT);
            this.relationFK__REPORT_OU__Out_P__3493CFA7 = new global::System.Data.DataRelation("FK__REPORT_OU__Out_P__3493CFA7", new global::System.Data.DataColumn[] {
                        this.tableOUT_PATIENT_REPORT.Out_Patient_Report_NoColumn}, new global::System.Data.DataColumn[] {
                        this.tableREPORT_OUT_PATIENT.Out_Patient_Report_NoColumn}, false);
            this.Relations.Add(this.relationFK__REPORT_OU__Out_P__3493CFA7);
            this.relationFK__REPORT_OU__Out_P__3587F3E0 = new global::System.Data.DataRelation("FK__REPORT_OU__Out_P__3587F3E0", new global::System.Data.DataColumn[] {
                        this.tableOUT_PATIENT_XRAY.Out_Patient_Xray_NoColumn}, new global::System.Data.DataColumn[] {
                        this.tableREPORT_OUT_PATIENT.Out_Patient_Xray_NoColumn}, false);
            this.Relations.Add(this.relationFK__REPORT_OU__Out_P__3587F3E0);
            this.relationFK__REPORT_OU__Out_P__367C1819 = new global::System.Data.DataRelation("FK__REPORT_OU__Out_P__367C1819", new global::System.Data.DataColumn[] {
                        this.tableOUT_PATIENT_SCAN.Out_Patient_Scan_NoColumn}, new global::System.Data.DataColumn[] {
                        this.tableREPORT_OUT_PATIENT.Out_Patient_Scan_NoColumn}, false);
            this.Relations.Add(this.relationFK__REPORT_OU__Out_P__367C1819);
            this.relationfk_REPORT_OUT_PATIENT = new global::System.Data.DataRelation("fk_REPORT_OUT_PATIENT", new global::System.Data.DataColumn[] {
                        this.tableOUT_PATIENT.Out_Patient_Id_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableREPORT_OUT_PATIENT.Out_Patient_Id_NumberColumn}, false);
            this.Relations.Add(this.relationfk_REPORT_OUT_PATIENT);
            this.relationfk_ROOM = new global::System.Data.DataRelation("fk_ROOM", new global::System.Data.DataColumn[] {
                        this.tableWARD.Ward_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableROOM.Ward_NumberColumn}, false);
            this.Relations.Add(this.relationfk_ROOM);
            this.relationfk_SPECIALIST_DOCTOR = new global::System.Data.DataRelation("fk_SPECIALIST_DOCTOR", new global::System.Data.DataColumn[] {
                        this.tableWARD.Ward_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableSPECIALIST_DOCTOR.Ward_NumberColumn}, false);
            this.Relations.Add(this.relationfk_SPECIALIST_DOCTOR);
            this.relationFK__WARD_STAF__Roll___47DBAE45 = new global::System.Data.DataRelation("FK__WARD_STAF__Roll___47DBAE45", new global::System.Data.DataColumn[] {
                        this.tableACCOUNT.Roll_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableWARD_STAFF.Roll_IdColumn}, false);
            this.Relations.Add(this.relationFK__WARD_STAF__Roll___47DBAE45);
            this.relationfk_WARD_STAFF = new global::System.Data.DataRelation("fk_WARD_STAFF", new global::System.Data.DataColumn[] {
                        this.tableWARD.Ward_NumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableWARD_STAFF.Ward_NumberColumn}, false);
            this.Relations.Add(this.relationfk_WARD_STAFF);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeACCOUNT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeADMISSION_OFFICER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBILL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBILLING_OFFICER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCHANNELING_OFFICER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCUSTOMER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeDRUG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeDRUG_ORDER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeDRUG_SUPPLIER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeGUARDIAN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeHOSPITAL_CUSTOMER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeIN_PATIENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeIN_PATIENT_MEDICINE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeIN_PATIENT_REPORT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeIN_PATIENT_SCAN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeIN_PATIENT_XRAY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeIN_SAMPLE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeLABORATORY_STAFF() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeLOG_IN_DETAIL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeLOG_IN_USER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeORGANIZATION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeOUT_PATIENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeOUT_PATIENT_MEDICINE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeOUT_PATIENT_REPORT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeOUT_PATIENT_SCAN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeOUT_PATIENT_XRAY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeOUT_SAMPLE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePATIENT_APPOINTMENT_DETAILS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePATIENT_PRIVATE_DETAIL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePHARMACY_MEDICINES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePHARMACY_STAFF() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeQUALIFICATION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeREPORT_IN_PATIENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeREPORT_OUT_PATIENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeROOM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSCAN_ROOM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSPECIALIST_DOCTOR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeWARD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeWARD_STAFF() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeX_RAY_ROOM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ACCOUNTRowChangeEventHandler(object sender, ACCOUNTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ADMISSION_OFFICERRowChangeEventHandler(object sender, ADMISSION_OFFICERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BILLRowChangeEventHandler(object sender, BILLRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BILLING_OFFICERRowChangeEventHandler(object sender, BILLING_OFFICERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CHANNELING_OFFICERRowChangeEventHandler(object sender, CHANNELING_OFFICERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CUSTOMERRowChangeEventHandler(object sender, CUSTOMERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void DRUGRowChangeEventHandler(object sender, DRUGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void DRUG_ORDERRowChangeEventHandler(object sender, DRUG_ORDERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void DRUG_SUPPLIERRowChangeEventHandler(object sender, DRUG_SUPPLIERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void GUARDIANRowChangeEventHandler(object sender, GUARDIANRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void HOSPITAL_CUSTOMERRowChangeEventHandler(object sender, HOSPITAL_CUSTOMERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void IN_PATIENTRowChangeEventHandler(object sender, IN_PATIENTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void IN_PATIENT_MEDICINERowChangeEventHandler(object sender, IN_PATIENT_MEDICINERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void IN_PATIENT_REPORTRowChangeEventHandler(object sender, IN_PATIENT_REPORTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void IN_PATIENT_SCANRowChangeEventHandler(object sender, IN_PATIENT_SCANRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void IN_PATIENT_XRAYRowChangeEventHandler(object sender, IN_PATIENT_XRAYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void IN_SAMPLERowChangeEventHandler(object sender, IN_SAMPLERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void LABORATORY_STAFFRowChangeEventHandler(object sender, LABORATORY_STAFFRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void LOG_IN_DETAILRowChangeEventHandler(object sender, LOG_IN_DETAILRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void LOG_IN_USERRowChangeEventHandler(object sender, LOG_IN_USERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ORGANIZATIONRowChangeEventHandler(object sender, ORGANIZATIONRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void OUT_PATIENTRowChangeEventHandler(object sender, OUT_PATIENTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void OUT_PATIENT_MEDICINERowChangeEventHandler(object sender, OUT_PATIENT_MEDICINERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void OUT_PATIENT_REPORTRowChangeEventHandler(object sender, OUT_PATIENT_REPORTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void OUT_PATIENT_SCANRowChangeEventHandler(object sender, OUT_PATIENT_SCANRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void OUT_PATIENT_XRAYRowChangeEventHandler(object sender, OUT_PATIENT_XRAYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void OUT_SAMPLERowChangeEventHandler(object sender, OUT_SAMPLERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PATIENT_APPOINTMENT_DETAILSRowChangeEventHandler(object sender, PATIENT_APPOINTMENT_DETAILSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PATIENT_PRIVATE_DETAILRowChangeEventHandler(object sender, PATIENT_PRIVATE_DETAILRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PHARMACY_MEDICINESRowChangeEventHandler(object sender, PHARMACY_MEDICINESRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PHARMACY_STAFFRowChangeEventHandler(object sender, PHARMACY_STAFFRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void QUALIFICATIONRowChangeEventHandler(object sender, QUALIFICATIONRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void REPORT_IN_PATIENTRowChangeEventHandler(object sender, REPORT_IN_PATIENTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void REPORT_OUT_PATIENTRowChangeEventHandler(object sender, REPORT_OUT_PATIENTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ROOMRowChangeEventHandler(object sender, ROOMRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SCAN_ROOMRowChangeEventHandler(object sender, SCAN_ROOMRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SPECIALIST_DOCTORRowChangeEventHandler(object sender, SPECIALIST_DOCTORRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void WARDRowChangeEventHandler(object sender, WARDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void WARD_STAFFRowChangeEventHandler(object sender, WARD_STAFFRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void X_RAY_ROOMRowChangeEventHandler(object sender, X_RAY_ROOMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ACCOUNTDataTable : global::System.Data.TypedTableBase<ACCOUNTRow> {
            
            private global::System.Data.DataColumn columnNum;
            
            private global::System.Data.DataColumn columnRoll_Id;
            
            private global::System.Data.DataColumn columnRoll_Name;
            
            private global::System.Data.DataColumn columnLogin_Username;
            
            private global::System.Data.DataColumn columnLogin_Password;
            
            private global::System.Data.DataColumn columnE_mail;
            
            private global::System.Data.DataColumn columnA_Create_Date;
            
            private global::System.Data.DataColumn columnA_Create_Time;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCOUNTDataTable() {
                this.TableName = "ACCOUNT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ACCOUNTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ACCOUNTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumColumn {
                get {
                    return this.columnNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Roll_IdColumn {
                get {
                    return this.columnRoll_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Roll_NameColumn {
                get {
                    return this.columnRoll_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Login_UsernameColumn {
                get {
                    return this.columnLogin_Username;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Login_PasswordColumn {
                get {
                    return this.columnLogin_Password;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn E_mailColumn {
                get {
                    return this.columnE_mail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A_Create_DateColumn {
                get {
                    return this.columnA_Create_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A_Create_TimeColumn {
                get {
                    return this.columnA_Create_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCOUNTRow this[int index] {
                get {
                    return ((ACCOUNTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ACCOUNTRowChangeEventHandler ACCOUNTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ACCOUNTRowChangeEventHandler ACCOUNTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ACCOUNTRowChangeEventHandler ACCOUNTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ACCOUNTRowChangeEventHandler ACCOUNTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddACCOUNTRow(ACCOUNTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCOUNTRow AddACCOUNTRow(string Roll_Id, string Roll_Name, string Login_Username, string Login_Password, string E_mail, System.DateTime A_Create_Date, System.TimeSpan A_Create_Time) {
                ACCOUNTRow rowACCOUNTRow = ((ACCOUNTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Roll_Id,
                        Roll_Name,
                        Login_Username,
                        Login_Password,
                        E_mail,
                        A_Create_Date,
                        A_Create_Time};
                rowACCOUNTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowACCOUNTRow);
                return rowACCOUNTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ACCOUNTDataTable cln = ((ACCOUNTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ACCOUNTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNum = base.Columns["Num"];
                this.columnRoll_Id = base.Columns["Roll_Id"];
                this.columnRoll_Name = base.Columns["Roll_Name"];
                this.columnLogin_Username = base.Columns["Login_Username"];
                this.columnLogin_Password = base.Columns["Login_Password"];
                this.columnE_mail = base.Columns["E_mail"];
                this.columnA_Create_Date = base.Columns["A_Create_Date"];
                this.columnA_Create_Time = base.Columns["A_Create_Time"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNum = new global::System.Data.DataColumn("Num", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNum);
                this.columnRoll_Id = new global::System.Data.DataColumn("Roll_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll_Id);
                this.columnRoll_Name = new global::System.Data.DataColumn("Roll_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll_Name);
                this.columnLogin_Username = new global::System.Data.DataColumn("Login_Username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogin_Username);
                this.columnLogin_Password = new global::System.Data.DataColumn("Login_Password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogin_Password);
                this.columnE_mail = new global::System.Data.DataColumn("E_mail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_mail);
                this.columnA_Create_Date = new global::System.Data.DataColumn("A_Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA_Create_Date);
                this.columnA_Create_Time = new global::System.Data.DataColumn("A_Create_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA_Create_Time);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRoll_Id}, false));
                this.columnNum.AutoIncrement = true;
                this.columnNum.AutoIncrementSeed = -1;
                this.columnNum.AutoIncrementStep = -1;
                this.columnNum.AllowDBNull = false;
                this.columnNum.ReadOnly = true;
                this.columnRoll_Id.ReadOnly = true;
                this.columnRoll_Id.Unique = true;
                this.columnRoll_Id.MaxLength = 8;
                this.columnRoll_Name.AllowDBNull = false;
                this.columnRoll_Name.MaxLength = 80;
                this.columnLogin_Username.AllowDBNull = false;
                this.columnLogin_Username.MaxLength = 50;
                this.columnLogin_Password.AllowDBNull = false;
                this.columnLogin_Password.MaxLength = 20;
                this.columnE_mail.MaxLength = 90;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCOUNTRow NewACCOUNTRow() {
                return ((ACCOUNTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ACCOUNTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ACCOUNTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ACCOUNTRowChanged != null)) {
                    this.ACCOUNTRowChanged(this, new ACCOUNTRowChangeEvent(((ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ACCOUNTRowChanging != null)) {
                    this.ACCOUNTRowChanging(this, new ACCOUNTRowChangeEvent(((ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ACCOUNTRowDeleted != null)) {
                    this.ACCOUNTRowDeleted(this, new ACCOUNTRowChangeEvent(((ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ACCOUNTRowDeleting != null)) {
                    this.ACCOUNTRowDeleting(this, new ACCOUNTRowChangeEvent(((ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveACCOUNTRow(ACCOUNTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ACCOUNTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ADMISSION_OFFICERDataTable : global::System.Data.TypedTableBase<ADMISSION_OFFICERRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnAdmission_Officer_Id;
            
            private global::System.Data.DataColumn columnA_Officer_First_Name;
            
            private global::System.Data.DataColumn columnA_Officer_Middle_Name;
            
            private global::System.Data.DataColumn columnA_Officer_Last_Name;
            
            private global::System.Data.DataColumn columnA_Officer_Address;
            
            private global::System.Data.DataColumn columnA_Officer_Tele_Number;
            
            private global::System.Data.DataColumn columnA_Officer_DOB;
            
            private global::System.Data.DataColumn columnA_Officer_Salary;
            
            private global::System.Data.DataColumn columnA_Job_Start_Date;
            
            private global::System.Data.DataColumn columnRoll_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMISSION_OFFICERDataTable() {
                this.TableName = "ADMISSION_OFFICER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ADMISSION_OFFICERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ADMISSION_OFFICERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Admission_Officer_IdColumn {
                get {
                    return this.columnAdmission_Officer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A_Officer_First_NameColumn {
                get {
                    return this.columnA_Officer_First_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A_Officer_Middle_NameColumn {
                get {
                    return this.columnA_Officer_Middle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A_Officer_Last_NameColumn {
                get {
                    return this.columnA_Officer_Last_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A_Officer_AddressColumn {
                get {
                    return this.columnA_Officer_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A_Officer_Tele_NumberColumn {
                get {
                    return this.columnA_Officer_Tele_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A_Officer_DOBColumn {
                get {
                    return this.columnA_Officer_DOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A_Officer_SalaryColumn {
                get {
                    return this.columnA_Officer_Salary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A_Job_Start_DateColumn {
                get {
                    return this.columnA_Job_Start_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Roll_IdColumn {
                get {
                    return this.columnRoll_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMISSION_OFFICERRow this[int index] {
                get {
                    return ((ADMISSION_OFFICERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ADMISSION_OFFICERRowChangeEventHandler ADMISSION_OFFICERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ADMISSION_OFFICERRowChangeEventHandler ADMISSION_OFFICERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ADMISSION_OFFICERRowChangeEventHandler ADMISSION_OFFICERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ADMISSION_OFFICERRowChangeEventHandler ADMISSION_OFFICERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddADMISSION_OFFICERRow(ADMISSION_OFFICERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMISSION_OFFICERRow AddADMISSION_OFFICERRow(string Admission_Officer_Id, string A_Officer_First_Name, string A_Officer_Middle_Name, string A_Officer_Last_Name, string A_Officer_Address, int A_Officer_Tele_Number, System.DateTime A_Officer_DOB, decimal A_Officer_Salary, System.DateTime A_Job_Start_Date, ACCOUNTRow parentACCOUNTRowByfk_ADMISSION_OFFICER) {
                ADMISSION_OFFICERRow rowADMISSION_OFFICERRow = ((ADMISSION_OFFICERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Admission_Officer_Id,
                        A_Officer_First_Name,
                        A_Officer_Middle_Name,
                        A_Officer_Last_Name,
                        A_Officer_Address,
                        A_Officer_Tele_Number,
                        A_Officer_DOB,
                        A_Officer_Salary,
                        A_Job_Start_Date,
                        null};
                if ((parentACCOUNTRowByfk_ADMISSION_OFFICER != null)) {
                    columnValuesArray[10] = parentACCOUNTRowByfk_ADMISSION_OFFICER[1];
                }
                rowADMISSION_OFFICERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowADMISSION_OFFICERRow);
                return rowADMISSION_OFFICERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ADMISSION_OFFICERDataTable cln = ((ADMISSION_OFFICERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ADMISSION_OFFICERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnAdmission_Officer_Id = base.Columns["Admission_Officer_Id"];
                this.columnA_Officer_First_Name = base.Columns["A_Officer_First_Name"];
                this.columnA_Officer_Middle_Name = base.Columns["A_Officer_Middle_Name"];
                this.columnA_Officer_Last_Name = base.Columns["A_Officer_Last_Name"];
                this.columnA_Officer_Address = base.Columns["A_Officer_Address"];
                this.columnA_Officer_Tele_Number = base.Columns["A_Officer_Tele_Number"];
                this.columnA_Officer_DOB = base.Columns["A_Officer_DOB"];
                this.columnA_Officer_Salary = base.Columns["A_Officer_Salary"];
                this.columnA_Job_Start_Date = base.Columns["A_Job_Start_Date"];
                this.columnRoll_Id = base.Columns["Roll_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnAdmission_Officer_Id = new global::System.Data.DataColumn("Admission_Officer_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_Officer_Id);
                this.columnA_Officer_First_Name = new global::System.Data.DataColumn("A_Officer_First_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA_Officer_First_Name);
                this.columnA_Officer_Middle_Name = new global::System.Data.DataColumn("A_Officer_Middle_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA_Officer_Middle_Name);
                this.columnA_Officer_Last_Name = new global::System.Data.DataColumn("A_Officer_Last_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA_Officer_Last_Name);
                this.columnA_Officer_Address = new global::System.Data.DataColumn("A_Officer_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA_Officer_Address);
                this.columnA_Officer_Tele_Number = new global::System.Data.DataColumn("A_Officer_Tele_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA_Officer_Tele_Number);
                this.columnA_Officer_DOB = new global::System.Data.DataColumn("A_Officer_DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA_Officer_DOB);
                this.columnA_Officer_Salary = new global::System.Data.DataColumn("A_Officer_Salary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA_Officer_Salary);
                this.columnA_Job_Start_Date = new global::System.Data.DataColumn("A_Job_Start_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA_Job_Start_Date);
                this.columnRoll_Id = new global::System.Data.DataColumn("Roll_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAdmission_Officer_Id}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnAdmission_Officer_Id.ReadOnly = true;
                this.columnAdmission_Officer_Id.Unique = true;
                this.columnAdmission_Officer_Id.MaxLength = 8;
                this.columnA_Officer_First_Name.AllowDBNull = false;
                this.columnA_Officer_First_Name.MaxLength = 200;
                this.columnA_Officer_Middle_Name.MaxLength = 200;
                this.columnA_Officer_Last_Name.AllowDBNull = false;
                this.columnA_Officer_Last_Name.MaxLength = 200;
                this.columnA_Officer_Address.AllowDBNull = false;
                this.columnA_Officer_Address.MaxLength = 150;
                this.columnA_Officer_Tele_Number.AllowDBNull = false;
                this.columnA_Officer_DOB.AllowDBNull = false;
                this.columnA_Officer_Salary.AllowDBNull = false;
                this.columnA_Job_Start_Date.AllowDBNull = false;
                this.columnRoll_Id.AllowDBNull = false;
                this.columnRoll_Id.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMISSION_OFFICERRow NewADMISSION_OFFICERRow() {
                return ((ADMISSION_OFFICERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ADMISSION_OFFICERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ADMISSION_OFFICERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ADMISSION_OFFICERRowChanged != null)) {
                    this.ADMISSION_OFFICERRowChanged(this, new ADMISSION_OFFICERRowChangeEvent(((ADMISSION_OFFICERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ADMISSION_OFFICERRowChanging != null)) {
                    this.ADMISSION_OFFICERRowChanging(this, new ADMISSION_OFFICERRowChangeEvent(((ADMISSION_OFFICERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ADMISSION_OFFICERRowDeleted != null)) {
                    this.ADMISSION_OFFICERRowDeleted(this, new ADMISSION_OFFICERRowChangeEvent(((ADMISSION_OFFICERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ADMISSION_OFFICERRowDeleting != null)) {
                    this.ADMISSION_OFFICERRowDeleting(this, new ADMISSION_OFFICERRowChangeEvent(((ADMISSION_OFFICERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveADMISSION_OFFICERRow(ADMISSION_OFFICERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ADMISSION_OFFICERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BILLDataTable : global::System.Data.TypedTableBase<BILLRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnBill_Number;
            
            private global::System.Data.DataColumn columnBill_Amount;
            
            private global::System.Data.DataColumn columnPayment_Date;
            
            private global::System.Data.DataColumn columnPayment_Time;
            
            private global::System.Data.DataColumn columnPayment_Type;
            
            private global::System.Data.DataColumn columnBilling_Officer_Id;
            
            private global::System.Data.DataColumn columnGuardian_Id_Number;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLDataTable() {
                this.TableName = "BILL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BILLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BILLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Bill_NumberColumn {
                get {
                    return this.columnBill_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Bill_AmountColumn {
                get {
                    return this.columnBill_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Payment_DateColumn {
                get {
                    return this.columnPayment_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Payment_TimeColumn {
                get {
                    return this.columnPayment_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Payment_TypeColumn {
                get {
                    return this.columnPayment_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Billing_Officer_IdColumn {
                get {
                    return this.columnBilling_Officer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Guardian_Id_NumberColumn {
                get {
                    return this.columnGuardian_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLRow this[int index] {
                get {
                    return ((BILLRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BILLRowChangeEventHandler BILLRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BILLRowChangeEventHandler BILLRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BILLRowChangeEventHandler BILLRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BILLRowChangeEventHandler BILLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBILLRow(BILLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLRow AddBILLRow(string Bill_Number, double Bill_Amount, System.DateTime Payment_Date, System.TimeSpan Payment_Time, string Payment_Type, BILLING_OFFICERRow parentBILLING_OFFICERRowByFK__BILL__Billing_Of__6477ECF3, GUARDIANRow parentGUARDIANRowByfk_BILL) {
                BILLRow rowBILLRow = ((BILLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Bill_Number,
                        Bill_Amount,
                        Payment_Date,
                        Payment_Time,
                        Payment_Type,
                        null,
                        null};
                if ((parentBILLING_OFFICERRowByFK__BILL__Billing_Of__6477ECF3 != null)) {
                    columnValuesArray[6] = parentBILLING_OFFICERRowByFK__BILL__Billing_Of__6477ECF3[1];
                }
                if ((parentGUARDIANRowByfk_BILL != null)) {
                    columnValuesArray[7] = parentGUARDIANRowByfk_BILL[1];
                }
                rowBILLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBILLRow);
                return rowBILLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BILLDataTable cln = ((BILLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BILLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnBill_Number = base.Columns["Bill_Number"];
                this.columnBill_Amount = base.Columns["Bill_Amount"];
                this.columnPayment_Date = base.Columns["Payment_Date"];
                this.columnPayment_Time = base.Columns["Payment_Time"];
                this.columnPayment_Type = base.Columns["Payment_Type"];
                this.columnBilling_Officer_Id = base.Columns["Billing_Officer_Id"];
                this.columnGuardian_Id_Number = base.Columns["Guardian_Id_Number"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnBill_Number = new global::System.Data.DataColumn("Bill_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Number);
                this.columnBill_Amount = new global::System.Data.DataColumn("Bill_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Amount);
                this.columnPayment_Date = new global::System.Data.DataColumn("Payment_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment_Date);
                this.columnPayment_Time = new global::System.Data.DataColumn("Payment_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment_Time);
                this.columnPayment_Type = new global::System.Data.DataColumn("Payment_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment_Type);
                this.columnBilling_Officer_Id = new global::System.Data.DataColumn("Billing_Officer_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBilling_Officer_Id);
                this.columnGuardian_Id_Number = new global::System.Data.DataColumn("Guardian_Id_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardian_Id_Number);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBill_Number}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnBill_Number.ReadOnly = true;
                this.columnBill_Number.Unique = true;
                this.columnBill_Number.MaxLength = 11;
                this.columnBill_Amount.AllowDBNull = false;
                this.columnPayment_Date.AllowDBNull = false;
                this.columnPayment_Time.AllowDBNull = false;
                this.columnPayment_Type.AllowDBNull = false;
                this.columnPayment_Type.MaxLength = 20;
                this.columnBilling_Officer_Id.AllowDBNull = false;
                this.columnBilling_Officer_Id.MaxLength = 8;
                this.columnGuardian_Id_Number.AllowDBNull = false;
                this.columnGuardian_Id_Number.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLRow NewBILLRow() {
                return ((BILLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BILLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BILLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BILLRowChanged != null)) {
                    this.BILLRowChanged(this, new BILLRowChangeEvent(((BILLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BILLRowChanging != null)) {
                    this.BILLRowChanging(this, new BILLRowChangeEvent(((BILLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BILLRowDeleted != null)) {
                    this.BILLRowDeleted(this, new BILLRowChangeEvent(((BILLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BILLRowDeleting != null)) {
                    this.BILLRowDeleting(this, new BILLRowChangeEvent(((BILLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBILLRow(BILLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BILLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BILLING_OFFICERDataTable : global::System.Data.TypedTableBase<BILLING_OFFICERRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnBilling_Officer_Id;
            
            private global::System.Data.DataColumn columnB_Officer_First_Name;
            
            private global::System.Data.DataColumn columnB_Officer_Middle_Name;
            
            private global::System.Data.DataColumn columnB_Officer_Last_Name;
            
            private global::System.Data.DataColumn columnB_Officer_Address;
            
            private global::System.Data.DataColumn columnB_Officer_Tele_Number;
            
            private global::System.Data.DataColumn columnB_Officer_DOB;
            
            private global::System.Data.DataColumn columnB_Officer_Salary;
            
            private global::System.Data.DataColumn columnRoll_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLING_OFFICERDataTable() {
                this.TableName = "BILLING_OFFICER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BILLING_OFFICERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BILLING_OFFICERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Billing_Officer_IdColumn {
                get {
                    return this.columnBilling_Officer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn B_Officer_First_NameColumn {
                get {
                    return this.columnB_Officer_First_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn B_Officer_Middle_NameColumn {
                get {
                    return this.columnB_Officer_Middle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn B_Officer_Last_NameColumn {
                get {
                    return this.columnB_Officer_Last_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn B_Officer_AddressColumn {
                get {
                    return this.columnB_Officer_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn B_Officer_Tele_NumberColumn {
                get {
                    return this.columnB_Officer_Tele_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn B_Officer_DOBColumn {
                get {
                    return this.columnB_Officer_DOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn B_Officer_SalaryColumn {
                get {
                    return this.columnB_Officer_Salary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Roll_IdColumn {
                get {
                    return this.columnRoll_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLING_OFFICERRow this[int index] {
                get {
                    return ((BILLING_OFFICERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BILLING_OFFICERRowChangeEventHandler BILLING_OFFICERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BILLING_OFFICERRowChangeEventHandler BILLING_OFFICERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BILLING_OFFICERRowChangeEventHandler BILLING_OFFICERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BILLING_OFFICERRowChangeEventHandler BILLING_OFFICERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBILLING_OFFICERRow(BILLING_OFFICERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLING_OFFICERRow AddBILLING_OFFICERRow(string Billing_Officer_Id, string B_Officer_First_Name, string B_Officer_Middle_Name, string B_Officer_Last_Name, string B_Officer_Address, int B_Officer_Tele_Number, System.DateTime B_Officer_DOB, decimal B_Officer_Salary, ACCOUNTRow parentACCOUNTRowByfk_BILLING_OFFICER) {
                BILLING_OFFICERRow rowBILLING_OFFICERRow = ((BILLING_OFFICERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Billing_Officer_Id,
                        B_Officer_First_Name,
                        B_Officer_Middle_Name,
                        B_Officer_Last_Name,
                        B_Officer_Address,
                        B_Officer_Tele_Number,
                        B_Officer_DOB,
                        B_Officer_Salary,
                        null};
                if ((parentACCOUNTRowByfk_BILLING_OFFICER != null)) {
                    columnValuesArray[9] = parentACCOUNTRowByfk_BILLING_OFFICER[1];
                }
                rowBILLING_OFFICERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBILLING_OFFICERRow);
                return rowBILLING_OFFICERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BILLING_OFFICERDataTable cln = ((BILLING_OFFICERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BILLING_OFFICERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnBilling_Officer_Id = base.Columns["Billing_Officer_Id"];
                this.columnB_Officer_First_Name = base.Columns["B_Officer_First_Name"];
                this.columnB_Officer_Middle_Name = base.Columns["B_Officer_Middle_Name"];
                this.columnB_Officer_Last_Name = base.Columns["B_Officer_Last_Name"];
                this.columnB_Officer_Address = base.Columns["B_Officer_Address"];
                this.columnB_Officer_Tele_Number = base.Columns["B_Officer_Tele_Number"];
                this.columnB_Officer_DOB = base.Columns["B_Officer_DOB"];
                this.columnB_Officer_Salary = base.Columns["B_Officer_Salary"];
                this.columnRoll_Id = base.Columns["Roll_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnBilling_Officer_Id = new global::System.Data.DataColumn("Billing_Officer_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBilling_Officer_Id);
                this.columnB_Officer_First_Name = new global::System.Data.DataColumn("B_Officer_First_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_Officer_First_Name);
                this.columnB_Officer_Middle_Name = new global::System.Data.DataColumn("B_Officer_Middle_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_Officer_Middle_Name);
                this.columnB_Officer_Last_Name = new global::System.Data.DataColumn("B_Officer_Last_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_Officer_Last_Name);
                this.columnB_Officer_Address = new global::System.Data.DataColumn("B_Officer_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_Officer_Address);
                this.columnB_Officer_Tele_Number = new global::System.Data.DataColumn("B_Officer_Tele_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_Officer_Tele_Number);
                this.columnB_Officer_DOB = new global::System.Data.DataColumn("B_Officer_DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_Officer_DOB);
                this.columnB_Officer_Salary = new global::System.Data.DataColumn("B_Officer_Salary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_Officer_Salary);
                this.columnRoll_Id = new global::System.Data.DataColumn("Roll_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBilling_Officer_Id}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnBilling_Officer_Id.ReadOnly = true;
                this.columnBilling_Officer_Id.Unique = true;
                this.columnBilling_Officer_Id.MaxLength = 8;
                this.columnB_Officer_First_Name.AllowDBNull = false;
                this.columnB_Officer_First_Name.MaxLength = 200;
                this.columnB_Officer_Middle_Name.MaxLength = 200;
                this.columnB_Officer_Last_Name.AllowDBNull = false;
                this.columnB_Officer_Last_Name.MaxLength = 200;
                this.columnB_Officer_Address.AllowDBNull = false;
                this.columnB_Officer_Address.MaxLength = 150;
                this.columnB_Officer_Tele_Number.AllowDBNull = false;
                this.columnB_Officer_DOB.AllowDBNull = false;
                this.columnB_Officer_Salary.AllowDBNull = false;
                this.columnRoll_Id.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLING_OFFICERRow NewBILLING_OFFICERRow() {
                return ((BILLING_OFFICERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BILLING_OFFICERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BILLING_OFFICERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BILLING_OFFICERRowChanged != null)) {
                    this.BILLING_OFFICERRowChanged(this, new BILLING_OFFICERRowChangeEvent(((BILLING_OFFICERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BILLING_OFFICERRowChanging != null)) {
                    this.BILLING_OFFICERRowChanging(this, new BILLING_OFFICERRowChangeEvent(((BILLING_OFFICERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BILLING_OFFICERRowDeleted != null)) {
                    this.BILLING_OFFICERRowDeleted(this, new BILLING_OFFICERRowChangeEvent(((BILLING_OFFICERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BILLING_OFFICERRowDeleting != null)) {
                    this.BILLING_OFFICERRowDeleting(this, new BILLING_OFFICERRowChangeEvent(((BILLING_OFFICERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBILLING_OFFICERRow(BILLING_OFFICERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BILLING_OFFICERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHANNELING_OFFICERDataTable : global::System.Data.TypedTableBase<CHANNELING_OFFICERRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnChannneling_Officer_Id;
            
            private global::System.Data.DataColumn columnOfficer_First_Name;
            
            private global::System.Data.DataColumn columnOfficer_Middle_Name;
            
            private global::System.Data.DataColumn columnOfficer_Last_Name;
            
            private global::System.Data.DataColumn columnOfficer_Address;
            
            private global::System.Data.DataColumn columnOfficer_Tele_Number;
            
            private global::System.Data.DataColumn columnOfficer_DOB;
            
            private global::System.Data.DataColumn columnOfficer_Salary;
            
            private global::System.Data.DataColumn columnRoll_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CHANNELING_OFFICERDataTable() {
                this.TableName = "CHANNELING_OFFICER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CHANNELING_OFFICERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CHANNELING_OFFICERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Channneling_Officer_IdColumn {
                get {
                    return this.columnChannneling_Officer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Officer_First_NameColumn {
                get {
                    return this.columnOfficer_First_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Officer_Middle_NameColumn {
                get {
                    return this.columnOfficer_Middle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Officer_Last_NameColumn {
                get {
                    return this.columnOfficer_Last_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Officer_AddressColumn {
                get {
                    return this.columnOfficer_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Officer_Tele_NumberColumn {
                get {
                    return this.columnOfficer_Tele_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Officer_DOBColumn {
                get {
                    return this.columnOfficer_DOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Officer_SalaryColumn {
                get {
                    return this.columnOfficer_Salary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Roll_IdColumn {
                get {
                    return this.columnRoll_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CHANNELING_OFFICERRow this[int index] {
                get {
                    return ((CHANNELING_OFFICERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CHANNELING_OFFICERRowChangeEventHandler CHANNELING_OFFICERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CHANNELING_OFFICERRowChangeEventHandler CHANNELING_OFFICERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CHANNELING_OFFICERRowChangeEventHandler CHANNELING_OFFICERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CHANNELING_OFFICERRowChangeEventHandler CHANNELING_OFFICERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCHANNELING_OFFICERRow(CHANNELING_OFFICERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CHANNELING_OFFICERRow AddCHANNELING_OFFICERRow(string Channneling_Officer_Id, string Officer_First_Name, string Officer_Middle_Name, string Officer_Last_Name, string Officer_Address, int Officer_Tele_Number, System.DateTime Officer_DOB, decimal Officer_Salary, string Roll_Id) {
                CHANNELING_OFFICERRow rowCHANNELING_OFFICERRow = ((CHANNELING_OFFICERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Channneling_Officer_Id,
                        Officer_First_Name,
                        Officer_Middle_Name,
                        Officer_Last_Name,
                        Officer_Address,
                        Officer_Tele_Number,
                        Officer_DOB,
                        Officer_Salary,
                        Roll_Id};
                rowCHANNELING_OFFICERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCHANNELING_OFFICERRow);
                return rowCHANNELING_OFFICERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CHANNELING_OFFICERDataTable cln = ((CHANNELING_OFFICERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CHANNELING_OFFICERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnChannneling_Officer_Id = base.Columns["Channneling_Officer_Id"];
                this.columnOfficer_First_Name = base.Columns["Officer_First_Name"];
                this.columnOfficer_Middle_Name = base.Columns["Officer_Middle_Name"];
                this.columnOfficer_Last_Name = base.Columns["Officer_Last_Name"];
                this.columnOfficer_Address = base.Columns["Officer_Address"];
                this.columnOfficer_Tele_Number = base.Columns["Officer_Tele_Number"];
                this.columnOfficer_DOB = base.Columns["Officer_DOB"];
                this.columnOfficer_Salary = base.Columns["Officer_Salary"];
                this.columnRoll_Id = base.Columns["Roll_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnChannneling_Officer_Id = new global::System.Data.DataColumn("Channneling_Officer_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChannneling_Officer_Id);
                this.columnOfficer_First_Name = new global::System.Data.DataColumn("Officer_First_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficer_First_Name);
                this.columnOfficer_Middle_Name = new global::System.Data.DataColumn("Officer_Middle_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficer_Middle_Name);
                this.columnOfficer_Last_Name = new global::System.Data.DataColumn("Officer_Last_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficer_Last_Name);
                this.columnOfficer_Address = new global::System.Data.DataColumn("Officer_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficer_Address);
                this.columnOfficer_Tele_Number = new global::System.Data.DataColumn("Officer_Tele_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficer_Tele_Number);
                this.columnOfficer_DOB = new global::System.Data.DataColumn("Officer_DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficer_DOB);
                this.columnOfficer_Salary = new global::System.Data.DataColumn("Officer_Salary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficer_Salary);
                this.columnRoll_Id = new global::System.Data.DataColumn("Roll_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnChannneling_Officer_Id}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnChannneling_Officer_Id.ReadOnly = true;
                this.columnChannneling_Officer_Id.Unique = true;
                this.columnChannneling_Officer_Id.MaxLength = 8;
                this.columnOfficer_First_Name.AllowDBNull = false;
                this.columnOfficer_First_Name.MaxLength = 200;
                this.columnOfficer_Middle_Name.MaxLength = 200;
                this.columnOfficer_Last_Name.AllowDBNull = false;
                this.columnOfficer_Last_Name.MaxLength = 200;
                this.columnOfficer_Address.AllowDBNull = false;
                this.columnOfficer_Address.MaxLength = 150;
                this.columnOfficer_Tele_Number.AllowDBNull = false;
                this.columnOfficer_DOB.AllowDBNull = false;
                this.columnOfficer_Salary.AllowDBNull = false;
                this.columnRoll_Id.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CHANNELING_OFFICERRow NewCHANNELING_OFFICERRow() {
                return ((CHANNELING_OFFICERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CHANNELING_OFFICERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CHANNELING_OFFICERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHANNELING_OFFICERRowChanged != null)) {
                    this.CHANNELING_OFFICERRowChanged(this, new CHANNELING_OFFICERRowChangeEvent(((CHANNELING_OFFICERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHANNELING_OFFICERRowChanging != null)) {
                    this.CHANNELING_OFFICERRowChanging(this, new CHANNELING_OFFICERRowChangeEvent(((CHANNELING_OFFICERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHANNELING_OFFICERRowDeleted != null)) {
                    this.CHANNELING_OFFICERRowDeleted(this, new CHANNELING_OFFICERRowChangeEvent(((CHANNELING_OFFICERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHANNELING_OFFICERRowDeleting != null)) {
                    this.CHANNELING_OFFICERRowDeleting(this, new CHANNELING_OFFICERRowChangeEvent(((CHANNELING_OFFICERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCHANNELING_OFFICERRow(CHANNELING_OFFICERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHANNELING_OFFICERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CUSTOMERDataTable : global::System.Data.TypedTableBase<CUSTOMERRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnInvoice_Number;
            
            private global::System.Data.DataColumn columnAppointment_Number;
            
            private global::System.Data.DataColumn columnConsultant_Name;
            
            private global::System.Data.DataColumn columnSpecialist_Doctor_Id;
            
            private global::System.Data.DataColumn columnSession_Date;
            
            private global::System.Data.DataColumn columnPatient_Name;
            
            private global::System.Data.DataColumn columnContact_Number;
            
            private global::System.Data.DataColumn columnHospital_Fee;
            
            private global::System.Data.DataColumn columnDoctor_Fee;
            
            private global::System.Data.DataColumn columnIssue_Time;
            
            private global::System.Data.DataColumn columnIssue_Date;
            
            private global::System.Data.DataColumn columnChannneling_Officer_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CUSTOMERDataTable() {
                this.TableName = "CUSTOMER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CUSTOMERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CUSTOMERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Invoice_NumberColumn {
                get {
                    return this.columnInvoice_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Appointment_NumberColumn {
                get {
                    return this.columnAppointment_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Consultant_NameColumn {
                get {
                    return this.columnConsultant_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Specialist_Doctor_IdColumn {
                get {
                    return this.columnSpecialist_Doctor_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Session_DateColumn {
                get {
                    return this.columnSession_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Patient_NameColumn {
                get {
                    return this.columnPatient_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Contact_NumberColumn {
                get {
                    return this.columnContact_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Hospital_FeeColumn {
                get {
                    return this.columnHospital_Fee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Doctor_FeeColumn {
                get {
                    return this.columnDoctor_Fee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_TimeColumn {
                get {
                    return this.columnIssue_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_DateColumn {
                get {
                    return this.columnIssue_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Channneling_Officer_IdColumn {
                get {
                    return this.columnChannneling_Officer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CUSTOMERRow this[int index] {
                get {
                    return ((CUSTOMERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CUSTOMERRowChangeEventHandler CUSTOMERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CUSTOMERRowChangeEventHandler CUSTOMERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CUSTOMERRowChangeEventHandler CUSTOMERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CUSTOMERRowChangeEventHandler CUSTOMERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCUSTOMERRow(CUSTOMERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CUSTOMERRow AddCUSTOMERRow(string Invoice_Number, int Appointment_Number, string Consultant_Name, SPECIALIST_DOCTORRow parentSPECIALIST_DOCTORRowByFK__CUSTOMER__Specia__5535A963, string Session_Date, string Patient_Name, int Contact_Number, int Hospital_Fee, int Doctor_Fee, System.TimeSpan Issue_Time, System.DateTime Issue_Date, CHANNELING_OFFICERRow parentCHANNELING_OFFICERRowByfk_CUSTOMER) {
                CUSTOMERRow rowCUSTOMERRow = ((CUSTOMERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Invoice_Number,
                        Appointment_Number,
                        Consultant_Name,
                        null,
                        Session_Date,
                        Patient_Name,
                        Contact_Number,
                        Hospital_Fee,
                        Doctor_Fee,
                        Issue_Time,
                        Issue_Date,
                        null};
                if ((parentSPECIALIST_DOCTORRowByFK__CUSTOMER__Specia__5535A963 != null)) {
                    columnValuesArray[4] = parentSPECIALIST_DOCTORRowByFK__CUSTOMER__Specia__5535A963[1];
                }
                if ((parentCHANNELING_OFFICERRowByfk_CUSTOMER != null)) {
                    columnValuesArray[12] = parentCHANNELING_OFFICERRowByfk_CUSTOMER[1];
                }
                rowCUSTOMERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCUSTOMERRow);
                return rowCUSTOMERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CUSTOMERDataTable cln = ((CUSTOMERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CUSTOMERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnInvoice_Number = base.Columns["Invoice_Number"];
                this.columnAppointment_Number = base.Columns["Appointment_Number"];
                this.columnConsultant_Name = base.Columns["Consultant_Name"];
                this.columnSpecialist_Doctor_Id = base.Columns["Specialist_Doctor_Id"];
                this.columnSession_Date = base.Columns["Session_Date"];
                this.columnPatient_Name = base.Columns["Patient_Name"];
                this.columnContact_Number = base.Columns["Contact_Number"];
                this.columnHospital_Fee = base.Columns["Hospital_Fee"];
                this.columnDoctor_Fee = base.Columns["Doctor_Fee"];
                this.columnIssue_Time = base.Columns["Issue_Time"];
                this.columnIssue_Date = base.Columns["Issue_Date"];
                this.columnChannneling_Officer_Id = base.Columns["Channneling_Officer_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnInvoice_Number = new global::System.Data.DataColumn("Invoice_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoice_Number);
                this.columnAppointment_Number = new global::System.Data.DataColumn("Appointment_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppointment_Number);
                this.columnConsultant_Name = new global::System.Data.DataColumn("Consultant_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultant_Name);
                this.columnSpecialist_Doctor_Id = new global::System.Data.DataColumn("Specialist_Doctor_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialist_Doctor_Id);
                this.columnSession_Date = new global::System.Data.DataColumn("Session_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSession_Date);
                this.columnPatient_Name = new global::System.Data.DataColumn("Patient_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatient_Name);
                this.columnContact_Number = new global::System.Data.DataColumn("Contact_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact_Number);
                this.columnHospital_Fee = new global::System.Data.DataColumn("Hospital_Fee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHospital_Fee);
                this.columnDoctor_Fee = new global::System.Data.DataColumn("Doctor_Fee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoctor_Fee);
                this.columnIssue_Time = new global::System.Data.DataColumn("Issue_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Time);
                this.columnIssue_Date = new global::System.Data.DataColumn("Issue_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Date);
                this.columnChannneling_Officer_Id = new global::System.Data.DataColumn("Channneling_Officer_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChannneling_Officer_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnInvoice_Number}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnInvoice_Number.ReadOnly = true;
                this.columnInvoice_Number.Unique = true;
                this.columnInvoice_Number.MaxLength = 8;
                this.columnAppointment_Number.AllowDBNull = false;
                this.columnConsultant_Name.AllowDBNull = false;
                this.columnConsultant_Name.MaxLength = 50;
                this.columnSpecialist_Doctor_Id.AllowDBNull = false;
                this.columnSpecialist_Doctor_Id.MaxLength = 9;
                this.columnSession_Date.AllowDBNull = false;
                this.columnSession_Date.MaxLength = 10;
                this.columnPatient_Name.AllowDBNull = false;
                this.columnPatient_Name.MaxLength = 90;
                this.columnContact_Number.AllowDBNull = false;
                this.columnHospital_Fee.AllowDBNull = false;
                this.columnDoctor_Fee.AllowDBNull = false;
                this.columnIssue_Time.AllowDBNull = false;
                this.columnIssue_Date.AllowDBNull = false;
                this.columnChannneling_Officer_Id.AllowDBNull = false;
                this.columnChannneling_Officer_Id.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CUSTOMERRow NewCUSTOMERRow() {
                return ((CUSTOMERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CUSTOMERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CUSTOMERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CUSTOMERRowChanged != null)) {
                    this.CUSTOMERRowChanged(this, new CUSTOMERRowChangeEvent(((CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CUSTOMERRowChanging != null)) {
                    this.CUSTOMERRowChanging(this, new CUSTOMERRowChangeEvent(((CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CUSTOMERRowDeleted != null)) {
                    this.CUSTOMERRowDeleted(this, new CUSTOMERRowChangeEvent(((CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CUSTOMERRowDeleting != null)) {
                    this.CUSTOMERRowDeleting(this, new CUSTOMERRowChangeEvent(((CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCUSTOMERRow(CUSTOMERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CUSTOMERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DRUGDataTable : global::System.Data.TypedTableBase<DRUGRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnDrug_Code;
            
            private global::System.Data.DataColumn columnDrug_Name;
            
            private global::System.Data.DataColumn columnTrade_Number;
            
            private global::System.Data.DataColumn columnStore_Place;
            
            private global::System.Data.DataColumn columnDrug_Price;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUGDataTable() {
                this.TableName = "DRUG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DRUGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected DRUGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Drug_CodeColumn {
                get {
                    return this.columnDrug_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Drug_NameColumn {
                get {
                    return this.columnDrug_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Trade_NumberColumn {
                get {
                    return this.columnTrade_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Store_PlaceColumn {
                get {
                    return this.columnStore_Place;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Drug_PriceColumn {
                get {
                    return this.columnDrug_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUGRow this[int index] {
                get {
                    return ((DRUGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DRUGRowChangeEventHandler DRUGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DRUGRowChangeEventHandler DRUGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DRUGRowChangeEventHandler DRUGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DRUGRowChangeEventHandler DRUGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddDRUGRow(DRUGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUGRow AddDRUGRow(string Drug_Code, string Drug_Name, string Trade_Number, string Store_Place, double Drug_Price) {
                DRUGRow rowDRUGRow = ((DRUGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Drug_Code,
                        Drug_Name,
                        Trade_Number,
                        Store_Place,
                        Drug_Price};
                rowDRUGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDRUGRow);
                return rowDRUGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DRUGDataTable cln = ((DRUGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DRUGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnDrug_Code = base.Columns["Drug_Code"];
                this.columnDrug_Name = base.Columns["Drug_Name"];
                this.columnTrade_Number = base.Columns["Trade_Number"];
                this.columnStore_Place = base.Columns["Store_Place"];
                this.columnDrug_Price = base.Columns["Drug_Price"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnDrug_Code = new global::System.Data.DataColumn("Drug_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrug_Code);
                this.columnDrug_Name = new global::System.Data.DataColumn("Drug_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrug_Name);
                this.columnTrade_Number = new global::System.Data.DataColumn("Trade_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrade_Number);
                this.columnStore_Place = new global::System.Data.DataColumn("Store_Place", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStore_Place);
                this.columnDrug_Price = new global::System.Data.DataColumn("Drug_Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrug_Price);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDrug_Code}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnDrug_Code.ReadOnly = true;
                this.columnDrug_Code.Unique = true;
                this.columnDrug_Code.MaxLength = 11;
                this.columnDrug_Name.AllowDBNull = false;
                this.columnDrug_Name.MaxLength = 30;
                this.columnTrade_Number.AllowDBNull = false;
                this.columnTrade_Number.MaxLength = 10;
                this.columnStore_Place.AllowDBNull = false;
                this.columnStore_Place.MaxLength = 30;
                this.columnDrug_Price.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUGRow NewDRUGRow() {
                return ((DRUGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DRUGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DRUGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DRUGRowChanged != null)) {
                    this.DRUGRowChanged(this, new DRUGRowChangeEvent(((DRUGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DRUGRowChanging != null)) {
                    this.DRUGRowChanging(this, new DRUGRowChangeEvent(((DRUGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DRUGRowDeleted != null)) {
                    this.DRUGRowDeleted(this, new DRUGRowChangeEvent(((DRUGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DRUGRowDeleting != null)) {
                    this.DRUGRowDeleting(this, new DRUGRowChangeEvent(((DRUGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveDRUGRow(DRUGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DRUGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DRUG_ORDERDataTable : global::System.Data.TypedTableBase<DRUG_ORDERRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnOrder_Number;
            
            private global::System.Data.DataColumn columnDrug_Code;
            
            private global::System.Data.DataColumn columnDrug_Name;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnOrder_Date;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnSupply_Date;
            
            private global::System.Data.DataColumn columnSupply_Time;
            
            private global::System.Data.DataColumn columnSupply_Quantity;
            
            private global::System.Data.DataColumn columnManufacture_Date;
            
            private global::System.Data.DataColumn columnExpire_Date;
            
            private global::System.Data.DataColumn columnTotal_Bill_Amount;
            
            private global::System.Data.DataColumn columnPharmacy_Staff_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_ORDERDataTable() {
                this.TableName = "DRUG_ORDER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DRUG_ORDERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected DRUG_ORDERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Order_NumberColumn {
                get {
                    return this.columnOrder_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Drug_CodeColumn {
                get {
                    return this.columnDrug_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Drug_NameColumn {
                get {
                    return this.columnDrug_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Order_DateColumn {
                get {
                    return this.columnOrder_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Supply_DateColumn {
                get {
                    return this.columnSupply_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Supply_TimeColumn {
                get {
                    return this.columnSupply_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Supply_QuantityColumn {
                get {
                    return this.columnSupply_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Manufacture_DateColumn {
                get {
                    return this.columnManufacture_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Expire_DateColumn {
                get {
                    return this.columnExpire_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Total_Bill_AmountColumn {
                get {
                    return this.columnTotal_Bill_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Pharmacy_Staff_IdColumn {
                get {
                    return this.columnPharmacy_Staff_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_ORDERRow this[int index] {
                get {
                    return ((DRUG_ORDERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DRUG_ORDERRowChangeEventHandler DRUG_ORDERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DRUG_ORDERRowChangeEventHandler DRUG_ORDERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DRUG_ORDERRowChangeEventHandler DRUG_ORDERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DRUG_ORDERRowChangeEventHandler DRUG_ORDERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddDRUG_ORDERRow(DRUG_ORDERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_ORDERRow AddDRUG_ORDERRow(string Order_Number, DRUGRow parentDRUGRowByfk_DRUG_ORDER, string Drug_Name, int Quantity, System.DateTime Order_Date, DRUG_SUPPLIERRow parentDRUG_SUPPLIERRowByFK__DRUG_ORDE__Suppl__73BA3083, System.DateTime Supply_Date, System.TimeSpan Supply_Time, int Supply_Quantity, System.DateTime Manufacture_Date, System.DateTime Expire_Date, double Total_Bill_Amount, string Pharmacy_Staff_Id) {
                DRUG_ORDERRow rowDRUG_ORDERRow = ((DRUG_ORDERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Order_Number,
                        null,
                        Drug_Name,
                        Quantity,
                        Order_Date,
                        null,
                        Supply_Date,
                        Supply_Time,
                        Supply_Quantity,
                        Manufacture_Date,
                        Expire_Date,
                        Total_Bill_Amount,
                        Pharmacy_Staff_Id};
                if ((parentDRUGRowByfk_DRUG_ORDER != null)) {
                    columnValuesArray[2] = parentDRUGRowByfk_DRUG_ORDER[1];
                }
                if ((parentDRUG_SUPPLIERRowByFK__DRUG_ORDE__Suppl__73BA3083 != null)) {
                    columnValuesArray[6] = parentDRUG_SUPPLIERRowByFK__DRUG_ORDE__Suppl__73BA3083[1];
                }
                rowDRUG_ORDERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDRUG_ORDERRow);
                return rowDRUG_ORDERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DRUG_ORDERDataTable cln = ((DRUG_ORDERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DRUG_ORDERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnOrder_Number = base.Columns["Order_Number"];
                this.columnDrug_Code = base.Columns["Drug_Code"];
                this.columnDrug_Name = base.Columns["Drug_Name"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnOrder_Date = base.Columns["Order_Date"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupply_Date = base.Columns["Supply_Date"];
                this.columnSupply_Time = base.Columns["Supply_Time"];
                this.columnSupply_Quantity = base.Columns["Supply_Quantity"];
                this.columnManufacture_Date = base.Columns["Manufacture_Date"];
                this.columnExpire_Date = base.Columns["Expire_Date"];
                this.columnTotal_Bill_Amount = base.Columns["Total_Bill_Amount"];
                this.columnPharmacy_Staff_Id = base.Columns["Pharmacy_Staff_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnOrder_Number = new global::System.Data.DataColumn("Order_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder_Number);
                this.columnDrug_Code = new global::System.Data.DataColumn("Drug_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrug_Code);
                this.columnDrug_Name = new global::System.Data.DataColumn("Drug_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrug_Name);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnOrder_Date = new global::System.Data.DataColumn("Order_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder_Date);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupply_Date = new global::System.Data.DataColumn("Supply_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupply_Date);
                this.columnSupply_Time = new global::System.Data.DataColumn("Supply_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupply_Time);
                this.columnSupply_Quantity = new global::System.Data.DataColumn("Supply_Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupply_Quantity);
                this.columnManufacture_Date = new global::System.Data.DataColumn("Manufacture_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacture_Date);
                this.columnExpire_Date = new global::System.Data.DataColumn("Expire_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpire_Date);
                this.columnTotal_Bill_Amount = new global::System.Data.DataColumn("Total_Bill_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Bill_Amount);
                this.columnPharmacy_Staff_Id = new global::System.Data.DataColumn("Pharmacy_Staff_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPharmacy_Staff_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOrder_Number}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnOrder_Number.ReadOnly = true;
                this.columnOrder_Number.Unique = true;
                this.columnOrder_Number.MaxLength = 8;
                this.columnDrug_Code.AllowDBNull = false;
                this.columnDrug_Code.MaxLength = 11;
                this.columnDrug_Name.AllowDBNull = false;
                this.columnDrug_Name.MaxLength = 30;
                this.columnQuantity.AllowDBNull = false;
                this.columnOrder_Date.AllowDBNull = false;
                this.columnSupplier_Id.AllowDBNull = false;
                this.columnSupplier_Id.MaxLength = 8;
                this.columnSupply_Date.AllowDBNull = false;
                this.columnSupply_Time.AllowDBNull = false;
                this.columnSupply_Quantity.AllowDBNull = false;
                this.columnManufacture_Date.AllowDBNull = false;
                this.columnExpire_Date.AllowDBNull = false;
                this.columnTotal_Bill_Amount.AllowDBNull = false;
                this.columnPharmacy_Staff_Id.AllowDBNull = false;
                this.columnPharmacy_Staff_Id.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_ORDERRow NewDRUG_ORDERRow() {
                return ((DRUG_ORDERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DRUG_ORDERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DRUG_ORDERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DRUG_ORDERRowChanged != null)) {
                    this.DRUG_ORDERRowChanged(this, new DRUG_ORDERRowChangeEvent(((DRUG_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DRUG_ORDERRowChanging != null)) {
                    this.DRUG_ORDERRowChanging(this, new DRUG_ORDERRowChangeEvent(((DRUG_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DRUG_ORDERRowDeleted != null)) {
                    this.DRUG_ORDERRowDeleted(this, new DRUG_ORDERRowChangeEvent(((DRUG_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DRUG_ORDERRowDeleting != null)) {
                    this.DRUG_ORDERRowDeleting(this, new DRUG_ORDERRowChangeEvent(((DRUG_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveDRUG_ORDERRow(DRUG_ORDERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DRUG_ORDERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DRUG_SUPPLIERDataTable : global::System.Data.TypedTableBase<DRUG_SUPPLIERRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnSupplier_Id;
            
            private global::System.Data.DataColumn columnSupplier_Name;
            
            private global::System.Data.DataColumn columnManufacture_Company;
            
            private global::System.Data.DataColumn columnManufacture_Country;
            
            private global::System.Data.DataColumn columnManufacture_Reg_Number;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_SUPPLIERDataTable() {
                this.TableName = "DRUG_SUPPLIER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DRUG_SUPPLIERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected DRUG_SUPPLIERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Supplier_IdColumn {
                get {
                    return this.columnSupplier_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Supplier_NameColumn {
                get {
                    return this.columnSupplier_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Manufacture_CompanyColumn {
                get {
                    return this.columnManufacture_Company;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Manufacture_CountryColumn {
                get {
                    return this.columnManufacture_Country;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Manufacture_Reg_NumberColumn {
                get {
                    return this.columnManufacture_Reg_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_SUPPLIERRow this[int index] {
                get {
                    return ((DRUG_SUPPLIERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DRUG_SUPPLIERRowChangeEventHandler DRUG_SUPPLIERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DRUG_SUPPLIERRowChangeEventHandler DRUG_SUPPLIERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DRUG_SUPPLIERRowChangeEventHandler DRUG_SUPPLIERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DRUG_SUPPLIERRowChangeEventHandler DRUG_SUPPLIERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddDRUG_SUPPLIERRow(DRUG_SUPPLIERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_SUPPLIERRow AddDRUG_SUPPLIERRow(string Supplier_Id, string Supplier_Name, string Manufacture_Company, string Manufacture_Country, string Manufacture_Reg_Number) {
                DRUG_SUPPLIERRow rowDRUG_SUPPLIERRow = ((DRUG_SUPPLIERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Supplier_Id,
                        Supplier_Name,
                        Manufacture_Company,
                        Manufacture_Country,
                        Manufacture_Reg_Number};
                rowDRUG_SUPPLIERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDRUG_SUPPLIERRow);
                return rowDRUG_SUPPLIERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DRUG_SUPPLIERDataTable cln = ((DRUG_SUPPLIERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DRUG_SUPPLIERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnSupplier_Id = base.Columns["Supplier_Id"];
                this.columnSupplier_Name = base.Columns["Supplier_Name"];
                this.columnManufacture_Company = base.Columns["Manufacture_Company"];
                this.columnManufacture_Country = base.Columns["Manufacture_Country"];
                this.columnManufacture_Reg_Number = base.Columns["Manufacture_Reg_Number"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnSupplier_Id = new global::System.Data.DataColumn("Supplier_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Id);
                this.columnSupplier_Name = new global::System.Data.DataColumn("Supplier_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier_Name);
                this.columnManufacture_Company = new global::System.Data.DataColumn("Manufacture_Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacture_Company);
                this.columnManufacture_Country = new global::System.Data.DataColumn("Manufacture_Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacture_Country);
                this.columnManufacture_Reg_Number = new global::System.Data.DataColumn("Manufacture_Reg_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacture_Reg_Number);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSupplier_Id}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnSupplier_Id.ReadOnly = true;
                this.columnSupplier_Id.Unique = true;
                this.columnSupplier_Id.MaxLength = 8;
                this.columnSupplier_Name.AllowDBNull = false;
                this.columnSupplier_Name.MaxLength = 90;
                this.columnManufacture_Company.AllowDBNull = false;
                this.columnManufacture_Company.MaxLength = 100;
                this.columnManufacture_Country.AllowDBNull = false;
                this.columnManufacture_Country.MaxLength = 20;
                this.columnManufacture_Reg_Number.AllowDBNull = false;
                this.columnManufacture_Reg_Number.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_SUPPLIERRow NewDRUG_SUPPLIERRow() {
                return ((DRUG_SUPPLIERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DRUG_SUPPLIERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DRUG_SUPPLIERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DRUG_SUPPLIERRowChanged != null)) {
                    this.DRUG_SUPPLIERRowChanged(this, new DRUG_SUPPLIERRowChangeEvent(((DRUG_SUPPLIERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DRUG_SUPPLIERRowChanging != null)) {
                    this.DRUG_SUPPLIERRowChanging(this, new DRUG_SUPPLIERRowChangeEvent(((DRUG_SUPPLIERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DRUG_SUPPLIERRowDeleted != null)) {
                    this.DRUG_SUPPLIERRowDeleted(this, new DRUG_SUPPLIERRowChangeEvent(((DRUG_SUPPLIERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DRUG_SUPPLIERRowDeleting != null)) {
                    this.DRUG_SUPPLIERRowDeleting(this, new DRUG_SUPPLIERRowChangeEvent(((DRUG_SUPPLIERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveDRUG_SUPPLIERRow(DRUG_SUPPLIERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DRUG_SUPPLIERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GUARDIANDataTable : global::System.Data.TypedTableBase<GUARDIANRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnGuardian_Id_Number;
            
            private global::System.Data.DataColumn columnGuardian_NIC;
            
            private global::System.Data.DataColumn columnGuardian_Name;
            
            private global::System.Data.DataColumn columnGuardian_Address;
            
            private global::System.Data.DataColumn columnGurdian_Tele_No;
            
            private global::System.Data.DataColumn columnRelationship;
            
            private global::System.Data.DataColumn columnAdmission_Officer_Id;
            
            private global::System.Data.DataColumn columnBilling_Officer_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GUARDIANDataTable() {
                this.TableName = "GUARDIAN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal GUARDIANDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected GUARDIANDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Guardian_Id_NumberColumn {
                get {
                    return this.columnGuardian_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Guardian_NICColumn {
                get {
                    return this.columnGuardian_NIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Guardian_NameColumn {
                get {
                    return this.columnGuardian_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Guardian_AddressColumn {
                get {
                    return this.columnGuardian_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Gurdian_Tele_NoColumn {
                get {
                    return this.columnGurdian_Tele_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RelationshipColumn {
                get {
                    return this.columnRelationship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Admission_Officer_IdColumn {
                get {
                    return this.columnAdmission_Officer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Billing_Officer_IdColumn {
                get {
                    return this.columnBilling_Officer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GUARDIANRow this[int index] {
                get {
                    return ((GUARDIANRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GUARDIANRowChangeEventHandler GUARDIANRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GUARDIANRowChangeEventHandler GUARDIANRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GUARDIANRowChangeEventHandler GUARDIANRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GUARDIANRowChangeEventHandler GUARDIANRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddGUARDIANRow(GUARDIANRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GUARDIANRow AddGUARDIANRow(string Guardian_Id_Number, string Guardian_NIC, string Guardian_Name, string Guardian_Address, int Gurdian_Tele_No, string Relationship, ADMISSION_OFFICERRow parentADMISSION_OFFICERRowByfk_GUARDIAN, BILLING_OFFICERRow parentBILLING_OFFICERRowByFK__GUARDIAN__Billin__4CA06362) {
                GUARDIANRow rowGUARDIANRow = ((GUARDIANRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Guardian_Id_Number,
                        Guardian_NIC,
                        Guardian_Name,
                        Guardian_Address,
                        Gurdian_Tele_No,
                        Relationship,
                        null,
                        null};
                if ((parentADMISSION_OFFICERRowByfk_GUARDIAN != null)) {
                    columnValuesArray[7] = parentADMISSION_OFFICERRowByfk_GUARDIAN[1];
                }
                if ((parentBILLING_OFFICERRowByFK__GUARDIAN__Billin__4CA06362 != null)) {
                    columnValuesArray[8] = parentBILLING_OFFICERRowByFK__GUARDIAN__Billin__4CA06362[1];
                }
                rowGUARDIANRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGUARDIANRow);
                return rowGUARDIANRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GUARDIANDataTable cln = ((GUARDIANDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GUARDIANDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnGuardian_Id_Number = base.Columns["Guardian_Id_Number"];
                this.columnGuardian_NIC = base.Columns["Guardian_NIC"];
                this.columnGuardian_Name = base.Columns["Guardian_Name"];
                this.columnGuardian_Address = base.Columns["Guardian_Address"];
                this.columnGurdian_Tele_No = base.Columns["Gurdian_Tele_No"];
                this.columnRelationship = base.Columns["Relationship"];
                this.columnAdmission_Officer_Id = base.Columns["Admission_Officer_Id"];
                this.columnBilling_Officer_Id = base.Columns["Billing_Officer_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnGuardian_Id_Number = new global::System.Data.DataColumn("Guardian_Id_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardian_Id_Number);
                this.columnGuardian_NIC = new global::System.Data.DataColumn("Guardian_NIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardian_NIC);
                this.columnGuardian_Name = new global::System.Data.DataColumn("Guardian_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardian_Name);
                this.columnGuardian_Address = new global::System.Data.DataColumn("Guardian_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardian_Address);
                this.columnGurdian_Tele_No = new global::System.Data.DataColumn("Gurdian_Tele_No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGurdian_Tele_No);
                this.columnRelationship = new global::System.Data.DataColumn("Relationship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationship);
                this.columnAdmission_Officer_Id = new global::System.Data.DataColumn("Admission_Officer_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_Officer_Id);
                this.columnBilling_Officer_Id = new global::System.Data.DataColumn("Billing_Officer_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBilling_Officer_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnGuardian_Id_Number}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnGuardian_Id_Number.ReadOnly = true;
                this.columnGuardian_Id_Number.Unique = true;
                this.columnGuardian_Id_Number.MaxLength = 8;
                this.columnGuardian_NIC.AllowDBNull = false;
                this.columnGuardian_NIC.MaxLength = 10;
                this.columnGuardian_Name.AllowDBNull = false;
                this.columnGuardian_Name.MaxLength = 90;
                this.columnGuardian_Address.AllowDBNull = false;
                this.columnGuardian_Address.MaxLength = 150;
                this.columnGurdian_Tele_No.AllowDBNull = false;
                this.columnRelationship.AllowDBNull = false;
                this.columnRelationship.MaxLength = 50;
                this.columnAdmission_Officer_Id.AllowDBNull = false;
                this.columnAdmission_Officer_Id.MaxLength = 8;
                this.columnBilling_Officer_Id.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GUARDIANRow NewGUARDIANRow() {
                return ((GUARDIANRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GUARDIANRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GUARDIANRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GUARDIANRowChanged != null)) {
                    this.GUARDIANRowChanged(this, new GUARDIANRowChangeEvent(((GUARDIANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GUARDIANRowChanging != null)) {
                    this.GUARDIANRowChanging(this, new GUARDIANRowChangeEvent(((GUARDIANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GUARDIANRowDeleted != null)) {
                    this.GUARDIANRowDeleted(this, new GUARDIANRowChangeEvent(((GUARDIANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GUARDIANRowDeleting != null)) {
                    this.GUARDIANRowDeleting(this, new GUARDIANRowChangeEvent(((GUARDIANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveGUARDIANRow(GUARDIANRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GUARDIANDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HOSPITAL_CUSTOMERDataTable : global::System.Data.TypedTableBase<HOSPITAL_CUSTOMERRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnPharmacy_Invoice_Number;
            
            private global::System.Data.DataColumn columnPatient_Id_Number;
            
            private global::System.Data.DataColumn columnSpecialist_Doctor_Id;
            
            private global::System.Data.DataColumn columnTotal_Bill;
            
            private global::System.Data.DataColumn columnIssue_Date;
            
            private global::System.Data.DataColumn columnIssue_Time;
            
            private global::System.Data.DataColumn columnPharmacy_Staff_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HOSPITAL_CUSTOMERDataTable() {
                this.TableName = "HOSPITAL_CUSTOMER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal HOSPITAL_CUSTOMERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected HOSPITAL_CUSTOMERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Pharmacy_Invoice_NumberColumn {
                get {
                    return this.columnPharmacy_Invoice_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Patient_Id_NumberColumn {
                get {
                    return this.columnPatient_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Specialist_Doctor_IdColumn {
                get {
                    return this.columnSpecialist_Doctor_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Total_BillColumn {
                get {
                    return this.columnTotal_Bill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_DateColumn {
                get {
                    return this.columnIssue_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_TimeColumn {
                get {
                    return this.columnIssue_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Pharmacy_Staff_IdColumn {
                get {
                    return this.columnPharmacy_Staff_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HOSPITAL_CUSTOMERRow this[int index] {
                get {
                    return ((HOSPITAL_CUSTOMERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HOSPITAL_CUSTOMERRowChangeEventHandler HOSPITAL_CUSTOMERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HOSPITAL_CUSTOMERRowChangeEventHandler HOSPITAL_CUSTOMERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HOSPITAL_CUSTOMERRowChangeEventHandler HOSPITAL_CUSTOMERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HOSPITAL_CUSTOMERRowChangeEventHandler HOSPITAL_CUSTOMERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddHOSPITAL_CUSTOMERRow(HOSPITAL_CUSTOMERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HOSPITAL_CUSTOMERRow AddHOSPITAL_CUSTOMERRow(string Pharmacy_Invoice_Number, PATIENT_PRIVATE_DETAILRow parentPATIENT_PRIVATE_DETAILRowByfk_HOSPITAL_CUSTOMER, SPECIALIST_DOCTORRow parentSPECIALIST_DOCTORRowByFK__HOSPITAL___Speci__778AC167, decimal Total_Bill, System.DateTime Issue_Date, System.TimeSpan Issue_Time, PHARMACY_STAFFRow parentPHARMACY_STAFFRowByFK__HOSPITAL___Pharm__787EE5A0) {
                HOSPITAL_CUSTOMERRow rowHOSPITAL_CUSTOMERRow = ((HOSPITAL_CUSTOMERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Pharmacy_Invoice_Number,
                        null,
                        null,
                        Total_Bill,
                        Issue_Date,
                        Issue_Time,
                        null};
                if ((parentPATIENT_PRIVATE_DETAILRowByfk_HOSPITAL_CUSTOMER != null)) {
                    columnValuesArray[2] = parentPATIENT_PRIVATE_DETAILRowByfk_HOSPITAL_CUSTOMER[0];
                }
                if ((parentSPECIALIST_DOCTORRowByFK__HOSPITAL___Speci__778AC167 != null)) {
                    columnValuesArray[3] = parentSPECIALIST_DOCTORRowByFK__HOSPITAL___Speci__778AC167[1];
                }
                if ((parentPHARMACY_STAFFRowByFK__HOSPITAL___Pharm__787EE5A0 != null)) {
                    columnValuesArray[7] = parentPHARMACY_STAFFRowByFK__HOSPITAL___Pharm__787EE5A0[1];
                }
                rowHOSPITAL_CUSTOMERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHOSPITAL_CUSTOMERRow);
                return rowHOSPITAL_CUSTOMERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                HOSPITAL_CUSTOMERDataTable cln = ((HOSPITAL_CUSTOMERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HOSPITAL_CUSTOMERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnPharmacy_Invoice_Number = base.Columns["Pharmacy_Invoice_Number"];
                this.columnPatient_Id_Number = base.Columns["Patient_Id_Number"];
                this.columnSpecialist_Doctor_Id = base.Columns["Specialist_Doctor_Id"];
                this.columnTotal_Bill = base.Columns["Total_Bill"];
                this.columnIssue_Date = base.Columns["Issue_Date"];
                this.columnIssue_Time = base.Columns["Issue_Time"];
                this.columnPharmacy_Staff_Id = base.Columns["Pharmacy_Staff_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnPharmacy_Invoice_Number = new global::System.Data.DataColumn("Pharmacy_Invoice_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPharmacy_Invoice_Number);
                this.columnPatient_Id_Number = new global::System.Data.DataColumn("Patient_Id_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatient_Id_Number);
                this.columnSpecialist_Doctor_Id = new global::System.Data.DataColumn("Specialist_Doctor_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialist_Doctor_Id);
                this.columnTotal_Bill = new global::System.Data.DataColumn("Total_Bill", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Bill);
                this.columnIssue_Date = new global::System.Data.DataColumn("Issue_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Date);
                this.columnIssue_Time = new global::System.Data.DataColumn("Issue_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Time);
                this.columnPharmacy_Staff_Id = new global::System.Data.DataColumn("Pharmacy_Staff_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPharmacy_Staff_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPharmacy_Invoice_Number}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnPharmacy_Invoice_Number.ReadOnly = true;
                this.columnPharmacy_Invoice_Number.Unique = true;
                this.columnPharmacy_Invoice_Number.MaxLength = 9;
                this.columnPatient_Id_Number.AllowDBNull = false;
                this.columnSpecialist_Doctor_Id.AllowDBNull = false;
                this.columnSpecialist_Doctor_Id.MaxLength = 9;
                this.columnTotal_Bill.AllowDBNull = false;
                this.columnIssue_Date.AllowDBNull = false;
                this.columnIssue_Time.AllowDBNull = false;
                this.columnPharmacy_Staff_Id.AllowDBNull = false;
                this.columnPharmacy_Staff_Id.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HOSPITAL_CUSTOMERRow NewHOSPITAL_CUSTOMERRow() {
                return ((HOSPITAL_CUSTOMERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HOSPITAL_CUSTOMERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(HOSPITAL_CUSTOMERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HOSPITAL_CUSTOMERRowChanged != null)) {
                    this.HOSPITAL_CUSTOMERRowChanged(this, new HOSPITAL_CUSTOMERRowChangeEvent(((HOSPITAL_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HOSPITAL_CUSTOMERRowChanging != null)) {
                    this.HOSPITAL_CUSTOMERRowChanging(this, new HOSPITAL_CUSTOMERRowChangeEvent(((HOSPITAL_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HOSPITAL_CUSTOMERRowDeleted != null)) {
                    this.HOSPITAL_CUSTOMERRowDeleted(this, new HOSPITAL_CUSTOMERRowChangeEvent(((HOSPITAL_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HOSPITAL_CUSTOMERRowDeleting != null)) {
                    this.HOSPITAL_CUSTOMERRowDeleting(this, new HOSPITAL_CUSTOMERRowChangeEvent(((HOSPITAL_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveHOSPITAL_CUSTOMERRow(HOSPITAL_CUSTOMERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HOSPITAL_CUSTOMERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IN_PATIENTDataTable : global::System.Data.TypedTableBase<IN_PATIENTRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnAdmission_Number;
            
            private global::System.Data.DataColumn columnPatient_Id_Number;
            
            private global::System.Data.DataColumn columnReason;
            
            private global::System.Data.DataColumn columnAdmit_Time;
            
            private global::System.Data.DataColumn columnAdmit_Date;
            
            private global::System.Data.DataColumn columnDischarge_Time;
            
            private global::System.Data.DataColumn columnDischarge_Date;
            
            private global::System.Data.DataColumn columnSpecialist_Doctor_Id;
            
            private global::System.Data.DataColumn columnWard_Number;
            
            private global::System.Data.DataColumn columnRoom_Number;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTDataTable() {
                this.TableName = "IN_PATIENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal IN_PATIENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected IN_PATIENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Admission_NumberColumn {
                get {
                    return this.columnAdmission_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Patient_Id_NumberColumn {
                get {
                    return this.columnPatient_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReasonColumn {
                get {
                    return this.columnReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Admit_TimeColumn {
                get {
                    return this.columnAdmit_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Admit_DateColumn {
                get {
                    return this.columnAdmit_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Discharge_TimeColumn {
                get {
                    return this.columnDischarge_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Discharge_DateColumn {
                get {
                    return this.columnDischarge_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Specialist_Doctor_IdColumn {
                get {
                    return this.columnSpecialist_Doctor_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ward_NumberColumn {
                get {
                    return this.columnWard_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Room_NumberColumn {
                get {
                    return this.columnRoom_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTRow this[int index] {
                get {
                    return ((IN_PATIENTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENTRowChangeEventHandler IN_PATIENTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENTRowChangeEventHandler IN_PATIENTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENTRowChangeEventHandler IN_PATIENTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENTRowChangeEventHandler IN_PATIENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddIN_PATIENTRow(IN_PATIENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTRow AddIN_PATIENTRow(string Admission_Number, PATIENT_PRIVATE_DETAILRow parentPATIENT_PRIVATE_DETAILRowByFK__IN_PATIEN__Patie__5EBF139D, string Reason, System.TimeSpan Admit_Time, System.DateTime Admit_Date, System.TimeSpan Discharge_Time, System.DateTime Discharge_Date, SPECIALIST_DOCTORRow parentSPECIALIST_DOCTORRowByfk_IN_PATIENT, WARDRow parentWARDRowByFK__IN_PATIEN__Ward___5CD6CB2B, ROOMRow parentROOMRowByFK__IN_PATIEN__Room___5DCAEF64) {
                IN_PATIENTRow rowIN_PATIENTRow = ((IN_PATIENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Admission_Number,
                        null,
                        Reason,
                        Admit_Time,
                        Admit_Date,
                        Discharge_Time,
                        Discharge_Date,
                        null,
                        null,
                        null};
                if ((parentPATIENT_PRIVATE_DETAILRowByFK__IN_PATIEN__Patie__5EBF139D != null)) {
                    columnValuesArray[2] = parentPATIENT_PRIVATE_DETAILRowByFK__IN_PATIEN__Patie__5EBF139D[0];
                }
                if ((parentSPECIALIST_DOCTORRowByfk_IN_PATIENT != null)) {
                    columnValuesArray[8] = parentSPECIALIST_DOCTORRowByfk_IN_PATIENT[1];
                }
                if ((parentWARDRowByFK__IN_PATIEN__Ward___5CD6CB2B != null)) {
                    columnValuesArray[9] = parentWARDRowByFK__IN_PATIEN__Ward___5CD6CB2B[0];
                }
                if ((parentROOMRowByFK__IN_PATIEN__Room___5DCAEF64 != null)) {
                    columnValuesArray[10] = parentROOMRowByFK__IN_PATIEN__Room___5DCAEF64[0];
                }
                rowIN_PATIENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIN_PATIENTRow);
                return rowIN_PATIENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IN_PATIENTDataTable cln = ((IN_PATIENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IN_PATIENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnAdmission_Number = base.Columns["Admission_Number"];
                this.columnPatient_Id_Number = base.Columns["Patient_Id_Number"];
                this.columnReason = base.Columns["Reason"];
                this.columnAdmit_Time = base.Columns["Admit_Time"];
                this.columnAdmit_Date = base.Columns["Admit_Date"];
                this.columnDischarge_Time = base.Columns["Discharge_Time"];
                this.columnDischarge_Date = base.Columns["Discharge_Date"];
                this.columnSpecialist_Doctor_Id = base.Columns["Specialist_Doctor_Id"];
                this.columnWard_Number = base.Columns["Ward_Number"];
                this.columnRoom_Number = base.Columns["Room_Number"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnAdmission_Number = new global::System.Data.DataColumn("Admission_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_Number);
                this.columnPatient_Id_Number = new global::System.Data.DataColumn("Patient_Id_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatient_Id_Number);
                this.columnReason = new global::System.Data.DataColumn("Reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReason);
                this.columnAdmit_Time = new global::System.Data.DataColumn("Admit_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmit_Time);
                this.columnAdmit_Date = new global::System.Data.DataColumn("Admit_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmit_Date);
                this.columnDischarge_Time = new global::System.Data.DataColumn("Discharge_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischarge_Time);
                this.columnDischarge_Date = new global::System.Data.DataColumn("Discharge_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischarge_Date);
                this.columnSpecialist_Doctor_Id = new global::System.Data.DataColumn("Specialist_Doctor_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialist_Doctor_Id);
                this.columnWard_Number = new global::System.Data.DataColumn("Ward_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWard_Number);
                this.columnRoom_Number = new global::System.Data.DataColumn("Room_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoom_Number);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAdmission_Number}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnAdmission_Number.ReadOnly = true;
                this.columnAdmission_Number.Unique = true;
                this.columnAdmission_Number.MaxLength = 9;
                this.columnPatient_Id_Number.AllowDBNull = false;
                this.columnReason.AllowDBNull = false;
                this.columnReason.MaxLength = 200;
                this.columnSpecialist_Doctor_Id.AllowDBNull = false;
                this.columnSpecialist_Doctor_Id.MaxLength = 9;
                this.columnWard_Number.AllowDBNull = false;
                this.columnWard_Number.MaxLength = 10;
                this.columnRoom_Number.AllowDBNull = false;
                this.columnRoom_Number.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTRow NewIN_PATIENTRow() {
                return ((IN_PATIENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IN_PATIENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IN_PATIENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IN_PATIENTRowChanged != null)) {
                    this.IN_PATIENTRowChanged(this, new IN_PATIENTRowChangeEvent(((IN_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IN_PATIENTRowChanging != null)) {
                    this.IN_PATIENTRowChanging(this, new IN_PATIENTRowChangeEvent(((IN_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IN_PATIENTRowDeleted != null)) {
                    this.IN_PATIENTRowDeleted(this, new IN_PATIENTRowChangeEvent(((IN_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IN_PATIENTRowDeleting != null)) {
                    this.IN_PATIENTRowDeleting(this, new IN_PATIENTRowChangeEvent(((IN_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveIN_PATIENTRow(IN_PATIENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IN_PATIENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IN_PATIENT_MEDICINEDataTable : global::System.Data.TypedTableBase<IN_PATIENT_MEDICINERow> {
            
            private global::System.Data.DataColumn columnAdmission_Number;
            
            private global::System.Data.DataColumn columnDrug_Code;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnGiven_Time;
            
            private global::System.Data.DataColumn columnGiven_Date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_MEDICINEDataTable() {
                this.TableName = "IN_PATIENT_MEDICINE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal IN_PATIENT_MEDICINEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected IN_PATIENT_MEDICINEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Admission_NumberColumn {
                get {
                    return this.columnAdmission_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Drug_CodeColumn {
                get {
                    return this.columnDrug_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Given_TimeColumn {
                get {
                    return this.columnGiven_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Given_DateColumn {
                get {
                    return this.columnGiven_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_MEDICINERow this[int index] {
                get {
                    return ((IN_PATIENT_MEDICINERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_MEDICINERowChangeEventHandler IN_PATIENT_MEDICINERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_MEDICINERowChangeEventHandler IN_PATIENT_MEDICINERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_MEDICINERowChangeEventHandler IN_PATIENT_MEDICINERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_MEDICINERowChangeEventHandler IN_PATIENT_MEDICINERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddIN_PATIENT_MEDICINERow(IN_PATIENT_MEDICINERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_MEDICINERow AddIN_PATIENT_MEDICINERow(IN_PATIENTRow parentIN_PATIENTRowByfk_IN_PATIENT_MEDICINE, DRUGRow parentDRUGRowByFK__IN_PATIEN__Drug___01142BA1, string Quantity, System.TimeSpan Given_Time, System.DateTime Given_Date) {
                IN_PATIENT_MEDICINERow rowIN_PATIENT_MEDICINERow = ((IN_PATIENT_MEDICINERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Quantity,
                        Given_Time,
                        Given_Date};
                if ((parentIN_PATIENTRowByfk_IN_PATIENT_MEDICINE != null)) {
                    columnValuesArray[0] = parentIN_PATIENTRowByfk_IN_PATIENT_MEDICINE[1];
                }
                if ((parentDRUGRowByFK__IN_PATIEN__Drug___01142BA1 != null)) {
                    columnValuesArray[1] = parentDRUGRowByFK__IN_PATIEN__Drug___01142BA1[1];
                }
                rowIN_PATIENT_MEDICINERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIN_PATIENT_MEDICINERow);
                return rowIN_PATIENT_MEDICINERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_MEDICINERow FindByAdmission_NumberDrug_Code(string Admission_Number, string Drug_Code) {
                return ((IN_PATIENT_MEDICINERow)(this.Rows.Find(new object[] {
                            Admission_Number,
                            Drug_Code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IN_PATIENT_MEDICINEDataTable cln = ((IN_PATIENT_MEDICINEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IN_PATIENT_MEDICINEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnAdmission_Number = base.Columns["Admission_Number"];
                this.columnDrug_Code = base.Columns["Drug_Code"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnGiven_Time = base.Columns["Given_Time"];
                this.columnGiven_Date = base.Columns["Given_Date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnAdmission_Number = new global::System.Data.DataColumn("Admission_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_Number);
                this.columnDrug_Code = new global::System.Data.DataColumn("Drug_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrug_Code);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnGiven_Time = new global::System.Data.DataColumn("Given_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGiven_Time);
                this.columnGiven_Date = new global::System.Data.DataColumn("Given_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGiven_Date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAdmission_Number,
                                this.columnDrug_Code}, true));
                this.columnAdmission_Number.AllowDBNull = false;
                this.columnAdmission_Number.MaxLength = 9;
                this.columnDrug_Code.AllowDBNull = false;
                this.columnDrug_Code.MaxLength = 11;
                this.columnQuantity.AllowDBNull = false;
                this.columnQuantity.MaxLength = 10;
                this.columnGiven_Time.AllowDBNull = false;
                this.columnGiven_Date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_MEDICINERow NewIN_PATIENT_MEDICINERow() {
                return ((IN_PATIENT_MEDICINERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IN_PATIENT_MEDICINERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IN_PATIENT_MEDICINERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IN_PATIENT_MEDICINERowChanged != null)) {
                    this.IN_PATIENT_MEDICINERowChanged(this, new IN_PATIENT_MEDICINERowChangeEvent(((IN_PATIENT_MEDICINERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IN_PATIENT_MEDICINERowChanging != null)) {
                    this.IN_PATIENT_MEDICINERowChanging(this, new IN_PATIENT_MEDICINERowChangeEvent(((IN_PATIENT_MEDICINERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IN_PATIENT_MEDICINERowDeleted != null)) {
                    this.IN_PATIENT_MEDICINERowDeleted(this, new IN_PATIENT_MEDICINERowChangeEvent(((IN_PATIENT_MEDICINERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IN_PATIENT_MEDICINERowDeleting != null)) {
                    this.IN_PATIENT_MEDICINERowDeleting(this, new IN_PATIENT_MEDICINERowChangeEvent(((IN_PATIENT_MEDICINERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveIN_PATIENT_MEDICINERow(IN_PATIENT_MEDICINERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IN_PATIENT_MEDICINEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IN_PATIENT_REPORTDataTable : global::System.Data.TypedTableBase<IN_PATIENT_REPORTRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnIn_Patient_Report_No;
            
            private global::System.Data.DataColumn columnAdmission_Number;
            
            private global::System.Data.DataColumn columnReport;
            
            private global::System.Data.DataColumn columnIssue_Date;
            
            private global::System.Data.DataColumn columnIssue_Time;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_REPORTDataTable() {
                this.TableName = "IN_PATIENT_REPORT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal IN_PATIENT_REPORTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected IN_PATIENT_REPORTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn In_Patient_Report_NoColumn {
                get {
                    return this.columnIn_Patient_Report_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Admission_NumberColumn {
                get {
                    return this.columnAdmission_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReportColumn {
                get {
                    return this.columnReport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_DateColumn {
                get {
                    return this.columnIssue_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_TimeColumn {
                get {
                    return this.columnIssue_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_REPORTRow this[int index] {
                get {
                    return ((IN_PATIENT_REPORTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_REPORTRowChangeEventHandler IN_PATIENT_REPORTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_REPORTRowChangeEventHandler IN_PATIENT_REPORTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_REPORTRowChangeEventHandler IN_PATIENT_REPORTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_REPORTRowChangeEventHandler IN_PATIENT_REPORTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddIN_PATIENT_REPORTRow(IN_PATIENT_REPORTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_REPORTRow AddIN_PATIENT_REPORTRow(string In_Patient_Report_No, IN_PATIENTRow parentIN_PATIENTRowByfk_IN_PATIENT_REPORT, byte[] Report, System.DateTime Issue_Date, System.TimeSpan Issue_Time) {
                IN_PATIENT_REPORTRow rowIN_PATIENT_REPORTRow = ((IN_PATIENT_REPORTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        In_Patient_Report_No,
                        null,
                        Report,
                        Issue_Date,
                        Issue_Time};
                if ((parentIN_PATIENTRowByfk_IN_PATIENT_REPORT != null)) {
                    columnValuesArray[2] = parentIN_PATIENTRowByfk_IN_PATIENT_REPORT[1];
                }
                rowIN_PATIENT_REPORTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIN_PATIENT_REPORTRow);
                return rowIN_PATIENT_REPORTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IN_PATIENT_REPORTDataTable cln = ((IN_PATIENT_REPORTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IN_PATIENT_REPORTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnIn_Patient_Report_No = base.Columns["In_Patient_Report_No"];
                this.columnAdmission_Number = base.Columns["Admission_Number"];
                this.columnReport = base.Columns["Report"];
                this.columnIssue_Date = base.Columns["Issue_Date"];
                this.columnIssue_Time = base.Columns["Issue_Time"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnIn_Patient_Report_No = new global::System.Data.DataColumn("In_Patient_Report_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIn_Patient_Report_No);
                this.columnAdmission_Number = new global::System.Data.DataColumn("Admission_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_Number);
                this.columnReport = new global::System.Data.DataColumn("Report", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReport);
                this.columnIssue_Date = new global::System.Data.DataColumn("Issue_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Date);
                this.columnIssue_Time = new global::System.Data.DataColumn("Issue_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Time);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIn_Patient_Report_No}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnIn_Patient_Report_No.ReadOnly = true;
                this.columnIn_Patient_Report_No.Unique = true;
                this.columnIn_Patient_Report_No.MaxLength = 9;
                this.columnAdmission_Number.AllowDBNull = false;
                this.columnAdmission_Number.MaxLength = 9;
                this.columnReport.AllowDBNull = false;
                this.columnIssue_Date.AllowDBNull = false;
                this.columnIssue_Time.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_REPORTRow NewIN_PATIENT_REPORTRow() {
                return ((IN_PATIENT_REPORTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IN_PATIENT_REPORTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IN_PATIENT_REPORTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IN_PATIENT_REPORTRowChanged != null)) {
                    this.IN_PATIENT_REPORTRowChanged(this, new IN_PATIENT_REPORTRowChangeEvent(((IN_PATIENT_REPORTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IN_PATIENT_REPORTRowChanging != null)) {
                    this.IN_PATIENT_REPORTRowChanging(this, new IN_PATIENT_REPORTRowChangeEvent(((IN_PATIENT_REPORTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IN_PATIENT_REPORTRowDeleted != null)) {
                    this.IN_PATIENT_REPORTRowDeleted(this, new IN_PATIENT_REPORTRowChangeEvent(((IN_PATIENT_REPORTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IN_PATIENT_REPORTRowDeleting != null)) {
                    this.IN_PATIENT_REPORTRowDeleting(this, new IN_PATIENT_REPORTRowChangeEvent(((IN_PATIENT_REPORTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveIN_PATIENT_REPORTRow(IN_PATIENT_REPORTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IN_PATIENT_REPORTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IN_PATIENT_SCANDataTable : global::System.Data.TypedTableBase<IN_PATIENT_SCANRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnIn_Patient_Scan_No;
            
            private global::System.Data.DataColumn columnAdmission_Number;
            
            private global::System.Data.DataColumn columnScan_Report;
            
            private global::System.Data.DataColumn columnIssue_Date;
            
            private global::System.Data.DataColumn columnIssue_Time;
            
            private global::System.Data.DataColumn columnWard_Number;
            
            private global::System.Data.DataColumn columnRoom_Number;
            
            private global::System.Data.DataColumn columnSpecialist_Doctor_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_SCANDataTable() {
                this.TableName = "IN_PATIENT_SCAN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal IN_PATIENT_SCANDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected IN_PATIENT_SCANDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn In_Patient_Scan_NoColumn {
                get {
                    return this.columnIn_Patient_Scan_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Admission_NumberColumn {
                get {
                    return this.columnAdmission_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Scan_ReportColumn {
                get {
                    return this.columnScan_Report;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_DateColumn {
                get {
                    return this.columnIssue_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_TimeColumn {
                get {
                    return this.columnIssue_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ward_NumberColumn {
                get {
                    return this.columnWard_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Room_NumberColumn {
                get {
                    return this.columnRoom_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Specialist_Doctor_IdColumn {
                get {
                    return this.columnSpecialist_Doctor_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_SCANRow this[int index] {
                get {
                    return ((IN_PATIENT_SCANRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_SCANRowChangeEventHandler IN_PATIENT_SCANRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_SCANRowChangeEventHandler IN_PATIENT_SCANRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_SCANRowChangeEventHandler IN_PATIENT_SCANRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_SCANRowChangeEventHandler IN_PATIENT_SCANRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddIN_PATIENT_SCANRow(IN_PATIENT_SCANRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_SCANRow AddIN_PATIENT_SCANRow(string In_Patient_Scan_No, IN_PATIENTRow parentIN_PATIENTRowByfk_IN_PATIENT_SCAN, byte[] Scan_Report, System.DateTime Issue_Date, System.TimeSpan Issue_Time, WARDRow parentWARDRowByFK__IN_PATIEN__Ward___25518C17, ROOMRow parentROOMRowByFK__IN_PATIEN__Room___2645B050, SPECIALIST_DOCTORRow parentSPECIALIST_DOCTORRowByFK__IN_PATIEN__Speci__2739D489) {
                IN_PATIENT_SCANRow rowIN_PATIENT_SCANRow = ((IN_PATIENT_SCANRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        In_Patient_Scan_No,
                        null,
                        Scan_Report,
                        Issue_Date,
                        Issue_Time,
                        null,
                        null,
                        null};
                if ((parentIN_PATIENTRowByfk_IN_PATIENT_SCAN != null)) {
                    columnValuesArray[2] = parentIN_PATIENTRowByfk_IN_PATIENT_SCAN[1];
                }
                if ((parentWARDRowByFK__IN_PATIEN__Ward___25518C17 != null)) {
                    columnValuesArray[6] = parentWARDRowByFK__IN_PATIEN__Ward___25518C17[0];
                }
                if ((parentROOMRowByFK__IN_PATIEN__Room___2645B050 != null)) {
                    columnValuesArray[7] = parentROOMRowByFK__IN_PATIEN__Room___2645B050[0];
                }
                if ((parentSPECIALIST_DOCTORRowByFK__IN_PATIEN__Speci__2739D489 != null)) {
                    columnValuesArray[8] = parentSPECIALIST_DOCTORRowByFK__IN_PATIEN__Speci__2739D489[1];
                }
                rowIN_PATIENT_SCANRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIN_PATIENT_SCANRow);
                return rowIN_PATIENT_SCANRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IN_PATIENT_SCANDataTable cln = ((IN_PATIENT_SCANDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IN_PATIENT_SCANDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnIn_Patient_Scan_No = base.Columns["In_Patient_Scan_No"];
                this.columnAdmission_Number = base.Columns["Admission_Number"];
                this.columnScan_Report = base.Columns["Scan_Report"];
                this.columnIssue_Date = base.Columns["Issue_Date"];
                this.columnIssue_Time = base.Columns["Issue_Time"];
                this.columnWard_Number = base.Columns["Ward_Number"];
                this.columnRoom_Number = base.Columns["Room_Number"];
                this.columnSpecialist_Doctor_Id = base.Columns["Specialist_Doctor_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnIn_Patient_Scan_No = new global::System.Data.DataColumn("In_Patient_Scan_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIn_Patient_Scan_No);
                this.columnAdmission_Number = new global::System.Data.DataColumn("Admission_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_Number);
                this.columnScan_Report = new global::System.Data.DataColumn("Scan_Report", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScan_Report);
                this.columnIssue_Date = new global::System.Data.DataColumn("Issue_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Date);
                this.columnIssue_Time = new global::System.Data.DataColumn("Issue_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Time);
                this.columnWard_Number = new global::System.Data.DataColumn("Ward_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWard_Number);
                this.columnRoom_Number = new global::System.Data.DataColumn("Room_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoom_Number);
                this.columnSpecialist_Doctor_Id = new global::System.Data.DataColumn("Specialist_Doctor_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialist_Doctor_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIn_Patient_Scan_No}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnIn_Patient_Scan_No.ReadOnly = true;
                this.columnIn_Patient_Scan_No.Unique = true;
                this.columnIn_Patient_Scan_No.MaxLength = 9;
                this.columnAdmission_Number.AllowDBNull = false;
                this.columnAdmission_Number.MaxLength = 9;
                this.columnScan_Report.AllowDBNull = false;
                this.columnIssue_Date.AllowDBNull = false;
                this.columnIssue_Time.AllowDBNull = false;
                this.columnWard_Number.AllowDBNull = false;
                this.columnWard_Number.MaxLength = 10;
                this.columnRoom_Number.AllowDBNull = false;
                this.columnRoom_Number.MaxLength = 10;
                this.columnSpecialist_Doctor_Id.AllowDBNull = false;
                this.columnSpecialist_Doctor_Id.MaxLength = 9;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_SCANRow NewIN_PATIENT_SCANRow() {
                return ((IN_PATIENT_SCANRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IN_PATIENT_SCANRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IN_PATIENT_SCANRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IN_PATIENT_SCANRowChanged != null)) {
                    this.IN_PATIENT_SCANRowChanged(this, new IN_PATIENT_SCANRowChangeEvent(((IN_PATIENT_SCANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IN_PATIENT_SCANRowChanging != null)) {
                    this.IN_PATIENT_SCANRowChanging(this, new IN_PATIENT_SCANRowChangeEvent(((IN_PATIENT_SCANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IN_PATIENT_SCANRowDeleted != null)) {
                    this.IN_PATIENT_SCANRowDeleted(this, new IN_PATIENT_SCANRowChangeEvent(((IN_PATIENT_SCANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IN_PATIENT_SCANRowDeleting != null)) {
                    this.IN_PATIENT_SCANRowDeleting(this, new IN_PATIENT_SCANRowChangeEvent(((IN_PATIENT_SCANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveIN_PATIENT_SCANRow(IN_PATIENT_SCANRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IN_PATIENT_SCANDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IN_PATIENT_XRAYDataTable : global::System.Data.TypedTableBase<IN_PATIENT_XRAYRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnIn_Patient_X_Ray_No;
            
            private global::System.Data.DataColumn columnAdmission_Number;
            
            private global::System.Data.DataColumn columnX_Ray;
            
            private global::System.Data.DataColumn columnIssue_Date;
            
            private global::System.Data.DataColumn columnIssue_Time;
            
            private global::System.Data.DataColumn columnWard_Number;
            
            private global::System.Data.DataColumn columnRoom_Number;
            
            private global::System.Data.DataColumn columnSpecialist_Doctor_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_XRAYDataTable() {
                this.TableName = "IN_PATIENT_XRAY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal IN_PATIENT_XRAYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected IN_PATIENT_XRAYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn In_Patient_X_Ray_NoColumn {
                get {
                    return this.columnIn_Patient_X_Ray_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Admission_NumberColumn {
                get {
                    return this.columnAdmission_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn X_RayColumn {
                get {
                    return this.columnX_Ray;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_DateColumn {
                get {
                    return this.columnIssue_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_TimeColumn {
                get {
                    return this.columnIssue_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ward_NumberColumn {
                get {
                    return this.columnWard_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Room_NumberColumn {
                get {
                    return this.columnRoom_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Specialist_Doctor_IdColumn {
                get {
                    return this.columnSpecialist_Doctor_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_XRAYRow this[int index] {
                get {
                    return ((IN_PATIENT_XRAYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_XRAYRowChangeEventHandler IN_PATIENT_XRAYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_XRAYRowChangeEventHandler IN_PATIENT_XRAYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_XRAYRowChangeEventHandler IN_PATIENT_XRAYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_PATIENT_XRAYRowChangeEventHandler IN_PATIENT_XRAYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddIN_PATIENT_XRAYRow(IN_PATIENT_XRAYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_XRAYRow AddIN_PATIENT_XRAYRow(string In_Patient_X_Ray_No, IN_PATIENTRow parentIN_PATIENTRowByfk_IN_PATIENT_XRAY, byte[] X_Ray, System.DateTime Issue_Date, System.TimeSpan Issue_Time, WARDRow parentWARDRowByFK__IN_PATIEN__Ward___1AD3FDA4, ROOMRow parentROOMRowByFK__IN_PATIEN__Room___1BC821DD, SPECIALIST_DOCTORRow parentSPECIALIST_DOCTORRowByFK__IN_PATIEN__Speci__1CBC4616) {
                IN_PATIENT_XRAYRow rowIN_PATIENT_XRAYRow = ((IN_PATIENT_XRAYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        In_Patient_X_Ray_No,
                        null,
                        X_Ray,
                        Issue_Date,
                        Issue_Time,
                        null,
                        null,
                        null};
                if ((parentIN_PATIENTRowByfk_IN_PATIENT_XRAY != null)) {
                    columnValuesArray[2] = parentIN_PATIENTRowByfk_IN_PATIENT_XRAY[1];
                }
                if ((parentWARDRowByFK__IN_PATIEN__Ward___1AD3FDA4 != null)) {
                    columnValuesArray[6] = parentWARDRowByFK__IN_PATIEN__Ward___1AD3FDA4[0];
                }
                if ((parentROOMRowByFK__IN_PATIEN__Room___1BC821DD != null)) {
                    columnValuesArray[7] = parentROOMRowByFK__IN_PATIEN__Room___1BC821DD[0];
                }
                if ((parentSPECIALIST_DOCTORRowByFK__IN_PATIEN__Speci__1CBC4616 != null)) {
                    columnValuesArray[8] = parentSPECIALIST_DOCTORRowByFK__IN_PATIEN__Speci__1CBC4616[1];
                }
                rowIN_PATIENT_XRAYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIN_PATIENT_XRAYRow);
                return rowIN_PATIENT_XRAYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IN_PATIENT_XRAYDataTable cln = ((IN_PATIENT_XRAYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IN_PATIENT_XRAYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnIn_Patient_X_Ray_No = base.Columns["In_Patient_X_Ray_No"];
                this.columnAdmission_Number = base.Columns["Admission_Number"];
                this.columnX_Ray = base.Columns["X_Ray"];
                this.columnIssue_Date = base.Columns["Issue_Date"];
                this.columnIssue_Time = base.Columns["Issue_Time"];
                this.columnWard_Number = base.Columns["Ward_Number"];
                this.columnRoom_Number = base.Columns["Room_Number"];
                this.columnSpecialist_Doctor_Id = base.Columns["Specialist_Doctor_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnIn_Patient_X_Ray_No = new global::System.Data.DataColumn("In_Patient_X_Ray_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIn_Patient_X_Ray_No);
                this.columnAdmission_Number = new global::System.Data.DataColumn("Admission_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_Number);
                this.columnX_Ray = new global::System.Data.DataColumn("X_Ray", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnX_Ray);
                this.columnIssue_Date = new global::System.Data.DataColumn("Issue_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Date);
                this.columnIssue_Time = new global::System.Data.DataColumn("Issue_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Time);
                this.columnWard_Number = new global::System.Data.DataColumn("Ward_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWard_Number);
                this.columnRoom_Number = new global::System.Data.DataColumn("Room_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoom_Number);
                this.columnSpecialist_Doctor_Id = new global::System.Data.DataColumn("Specialist_Doctor_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialist_Doctor_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIn_Patient_X_Ray_No}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnIn_Patient_X_Ray_No.ReadOnly = true;
                this.columnIn_Patient_X_Ray_No.Unique = true;
                this.columnIn_Patient_X_Ray_No.MaxLength = 9;
                this.columnAdmission_Number.AllowDBNull = false;
                this.columnAdmission_Number.MaxLength = 9;
                this.columnX_Ray.AllowDBNull = false;
                this.columnIssue_Date.AllowDBNull = false;
                this.columnIssue_Time.AllowDBNull = false;
                this.columnWard_Number.AllowDBNull = false;
                this.columnWard_Number.MaxLength = 10;
                this.columnRoom_Number.AllowDBNull = false;
                this.columnRoom_Number.MaxLength = 10;
                this.columnSpecialist_Doctor_Id.AllowDBNull = false;
                this.columnSpecialist_Doctor_Id.MaxLength = 9;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_XRAYRow NewIN_PATIENT_XRAYRow() {
                return ((IN_PATIENT_XRAYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IN_PATIENT_XRAYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IN_PATIENT_XRAYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IN_PATIENT_XRAYRowChanged != null)) {
                    this.IN_PATIENT_XRAYRowChanged(this, new IN_PATIENT_XRAYRowChangeEvent(((IN_PATIENT_XRAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IN_PATIENT_XRAYRowChanging != null)) {
                    this.IN_PATIENT_XRAYRowChanging(this, new IN_PATIENT_XRAYRowChangeEvent(((IN_PATIENT_XRAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IN_PATIENT_XRAYRowDeleted != null)) {
                    this.IN_PATIENT_XRAYRowDeleted(this, new IN_PATIENT_XRAYRowChangeEvent(((IN_PATIENT_XRAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IN_PATIENT_XRAYRowDeleting != null)) {
                    this.IN_PATIENT_XRAYRowDeleting(this, new IN_PATIENT_XRAYRowChangeEvent(((IN_PATIENT_XRAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveIN_PATIENT_XRAYRow(IN_PATIENT_XRAYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IN_PATIENT_XRAYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IN_SAMPLEDataTable : global::System.Data.TypedTableBase<IN_SAMPLERow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnSample_In_Number;
            
            private global::System.Data.DataColumn columnPatient_Id_Number;
            
            private global::System.Data.DataColumn columnSample_Type;
            
            private global::System.Data.DataColumn columnWard_Number;
            
            private global::System.Data.DataColumn columnRoom_Number;
            
            private global::System.Data.DataColumn columnSpecialist_Doctor_Id;
            
            private global::System.Data.DataColumn columnLaboratory_Staff_Id;
            
            private global::System.Data.DataColumn columnReceived_Date;
            
            private global::System.Data.DataColumn columnReceived_Time;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_SAMPLEDataTable() {
                this.TableName = "IN_SAMPLE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal IN_SAMPLEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected IN_SAMPLEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Sample_In_NumberColumn {
                get {
                    return this.columnSample_In_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Patient_Id_NumberColumn {
                get {
                    return this.columnPatient_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Sample_TypeColumn {
                get {
                    return this.columnSample_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ward_NumberColumn {
                get {
                    return this.columnWard_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Room_NumberColumn {
                get {
                    return this.columnRoom_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Specialist_Doctor_IdColumn {
                get {
                    return this.columnSpecialist_Doctor_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Laboratory_Staff_IdColumn {
                get {
                    return this.columnLaboratory_Staff_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Received_DateColumn {
                get {
                    return this.columnReceived_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Received_TimeColumn {
                get {
                    return this.columnReceived_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_SAMPLERow this[int index] {
                get {
                    return ((IN_SAMPLERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_SAMPLERowChangeEventHandler IN_SAMPLERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_SAMPLERowChangeEventHandler IN_SAMPLERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_SAMPLERowChangeEventHandler IN_SAMPLERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event IN_SAMPLERowChangeEventHandler IN_SAMPLERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddIN_SAMPLERow(IN_SAMPLERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_SAMPLERow AddIN_SAMPLERow(string Sample_In_Number, PATIENT_PRIVATE_DETAILRow parentPATIENT_PRIVATE_DETAILRowByfk_IN_SAMPLE, string Sample_Type, string Ward_Number, string Room_Number, SPECIALIST_DOCTORRow parentSPECIALIST_DOCTORRowByFK__IN_SAMPLE__Speci__0B91BA14, string Laboratory_Staff_Id, System.DateTime Received_Date, System.TimeSpan Received_Time) {
                IN_SAMPLERow rowIN_SAMPLERow = ((IN_SAMPLERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Sample_In_Number,
                        null,
                        Sample_Type,
                        Ward_Number,
                        Room_Number,
                        null,
                        Laboratory_Staff_Id,
                        Received_Date,
                        Received_Time};
                if ((parentPATIENT_PRIVATE_DETAILRowByfk_IN_SAMPLE != null)) {
                    columnValuesArray[2] = parentPATIENT_PRIVATE_DETAILRowByfk_IN_SAMPLE[0];
                }
                if ((parentSPECIALIST_DOCTORRowByFK__IN_SAMPLE__Speci__0B91BA14 != null)) {
                    columnValuesArray[6] = parentSPECIALIST_DOCTORRowByFK__IN_SAMPLE__Speci__0B91BA14[1];
                }
                rowIN_SAMPLERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIN_SAMPLERow);
                return rowIN_SAMPLERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IN_SAMPLEDataTable cln = ((IN_SAMPLEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IN_SAMPLEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnSample_In_Number = base.Columns["Sample_In_Number"];
                this.columnPatient_Id_Number = base.Columns["Patient_Id_Number"];
                this.columnSample_Type = base.Columns["Sample_Type"];
                this.columnWard_Number = base.Columns["Ward_Number"];
                this.columnRoom_Number = base.Columns["Room_Number"];
                this.columnSpecialist_Doctor_Id = base.Columns["Specialist_Doctor_Id"];
                this.columnLaboratory_Staff_Id = base.Columns["Laboratory_Staff_Id"];
                this.columnReceived_Date = base.Columns["Received_Date"];
                this.columnReceived_Time = base.Columns["Received_Time"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnSample_In_Number = new global::System.Data.DataColumn("Sample_In_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSample_In_Number);
                this.columnPatient_Id_Number = new global::System.Data.DataColumn("Patient_Id_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatient_Id_Number);
                this.columnSample_Type = new global::System.Data.DataColumn("Sample_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSample_Type);
                this.columnWard_Number = new global::System.Data.DataColumn("Ward_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWard_Number);
                this.columnRoom_Number = new global::System.Data.DataColumn("Room_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoom_Number);
                this.columnSpecialist_Doctor_Id = new global::System.Data.DataColumn("Specialist_Doctor_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialist_Doctor_Id);
                this.columnLaboratory_Staff_Id = new global::System.Data.DataColumn("Laboratory_Staff_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaboratory_Staff_Id);
                this.columnReceived_Date = new global::System.Data.DataColumn("Received_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceived_Date);
                this.columnReceived_Time = new global::System.Data.DataColumn("Received_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceived_Time);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSample_In_Number}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnSample_In_Number.ReadOnly = true;
                this.columnSample_In_Number.Unique = true;
                this.columnSample_In_Number.MaxLength = 9;
                this.columnPatient_Id_Number.AllowDBNull = false;
                this.columnSample_Type.AllowDBNull = false;
                this.columnSample_Type.MaxLength = 10;
                this.columnWard_Number.AllowDBNull = false;
                this.columnWard_Number.MaxLength = 10;
                this.columnRoom_Number.AllowDBNull = false;
                this.columnRoom_Number.MaxLength = 10;
                this.columnSpecialist_Doctor_Id.AllowDBNull = false;
                this.columnSpecialist_Doctor_Id.MaxLength = 9;
                this.columnLaboratory_Staff_Id.AllowDBNull = false;
                this.columnLaboratory_Staff_Id.MaxLength = 8;
                this.columnReceived_Date.AllowDBNull = false;
                this.columnReceived_Time.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_SAMPLERow NewIN_SAMPLERow() {
                return ((IN_SAMPLERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IN_SAMPLERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IN_SAMPLERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IN_SAMPLERowChanged != null)) {
                    this.IN_SAMPLERowChanged(this, new IN_SAMPLERowChangeEvent(((IN_SAMPLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IN_SAMPLERowChanging != null)) {
                    this.IN_SAMPLERowChanging(this, new IN_SAMPLERowChangeEvent(((IN_SAMPLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IN_SAMPLERowDeleted != null)) {
                    this.IN_SAMPLERowDeleted(this, new IN_SAMPLERowChangeEvent(((IN_SAMPLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IN_SAMPLERowDeleting != null)) {
                    this.IN_SAMPLERowDeleting(this, new IN_SAMPLERowChangeEvent(((IN_SAMPLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveIN_SAMPLERow(IN_SAMPLERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IN_SAMPLEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LABORATORY_STAFFDataTable : global::System.Data.TypedTableBase<LABORATORY_STAFFRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnLaboratory_Staff_Id;
            
            private global::System.Data.DataColumn columnL_Officer_First_Name;
            
            private global::System.Data.DataColumn columnL_Officer_Middle_Name;
            
            private global::System.Data.DataColumn columnL_Officer_Last_Name;
            
            private global::System.Data.DataColumn columnL_Officer_Address;
            
            private global::System.Data.DataColumn columnL_Officer_Tele_Number;
            
            private global::System.Data.DataColumn columnL_Officer_DOB;
            
            private global::System.Data.DataColumn columnL_Officer_Salary;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnL_Job_Start_Date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LABORATORY_STAFFDataTable() {
                this.TableName = "LABORATORY_STAFF";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LABORATORY_STAFFDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected LABORATORY_STAFFDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Laboratory_Staff_IdColumn {
                get {
                    return this.columnLaboratory_Staff_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn L_Officer_First_NameColumn {
                get {
                    return this.columnL_Officer_First_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn L_Officer_Middle_NameColumn {
                get {
                    return this.columnL_Officer_Middle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn L_Officer_Last_NameColumn {
                get {
                    return this.columnL_Officer_Last_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn L_Officer_AddressColumn {
                get {
                    return this.columnL_Officer_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn L_Officer_Tele_NumberColumn {
                get {
                    return this.columnL_Officer_Tele_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn L_Officer_DOBColumn {
                get {
                    return this.columnL_Officer_DOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn L_Officer_SalaryColumn {
                get {
                    return this.columnL_Officer_Salary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn L_Job_Start_DateColumn {
                get {
                    return this.columnL_Job_Start_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LABORATORY_STAFFRow this[int index] {
                get {
                    return ((LABORATORY_STAFFRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LABORATORY_STAFFRowChangeEventHandler LABORATORY_STAFFRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LABORATORY_STAFFRowChangeEventHandler LABORATORY_STAFFRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LABORATORY_STAFFRowChangeEventHandler LABORATORY_STAFFRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LABORATORY_STAFFRowChangeEventHandler LABORATORY_STAFFRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddLABORATORY_STAFFRow(LABORATORY_STAFFRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LABORATORY_STAFFRow AddLABORATORY_STAFFRow(string Laboratory_Staff_Id, string L_Officer_First_Name, string L_Officer_Middle_Name, string L_Officer_Last_Name, string L_Officer_Address, int L_Officer_Tele_Number, System.DateTime L_Officer_DOB, decimal L_Officer_Salary, string Designation, System.DateTime L_Job_Start_Date) {
                LABORATORY_STAFFRow rowLABORATORY_STAFFRow = ((LABORATORY_STAFFRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Laboratory_Staff_Id,
                        L_Officer_First_Name,
                        L_Officer_Middle_Name,
                        L_Officer_Last_Name,
                        L_Officer_Address,
                        L_Officer_Tele_Number,
                        L_Officer_DOB,
                        L_Officer_Salary,
                        Designation,
                        L_Job_Start_Date};
                rowLABORATORY_STAFFRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLABORATORY_STAFFRow);
                return rowLABORATORY_STAFFRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LABORATORY_STAFFDataTable cln = ((LABORATORY_STAFFDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LABORATORY_STAFFDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnLaboratory_Staff_Id = base.Columns["Laboratory_Staff_Id"];
                this.columnL_Officer_First_Name = base.Columns["L_Officer_First_Name"];
                this.columnL_Officer_Middle_Name = base.Columns["L_Officer_Middle_Name"];
                this.columnL_Officer_Last_Name = base.Columns["L_Officer_Last_Name"];
                this.columnL_Officer_Address = base.Columns["L_Officer_Address"];
                this.columnL_Officer_Tele_Number = base.Columns["L_Officer_Tele_Number"];
                this.columnL_Officer_DOB = base.Columns["L_Officer_DOB"];
                this.columnL_Officer_Salary = base.Columns["L_Officer_Salary"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnL_Job_Start_Date = base.Columns["L_Job_Start_Date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnLaboratory_Staff_Id = new global::System.Data.DataColumn("Laboratory_Staff_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaboratory_Staff_Id);
                this.columnL_Officer_First_Name = new global::System.Data.DataColumn("L_Officer_First_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL_Officer_First_Name);
                this.columnL_Officer_Middle_Name = new global::System.Data.DataColumn("L_Officer_Middle_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL_Officer_Middle_Name);
                this.columnL_Officer_Last_Name = new global::System.Data.DataColumn("L_Officer_Last_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL_Officer_Last_Name);
                this.columnL_Officer_Address = new global::System.Data.DataColumn("L_Officer_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL_Officer_Address);
                this.columnL_Officer_Tele_Number = new global::System.Data.DataColumn("L_Officer_Tele_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL_Officer_Tele_Number);
                this.columnL_Officer_DOB = new global::System.Data.DataColumn("L_Officer_DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL_Officer_DOB);
                this.columnL_Officer_Salary = new global::System.Data.DataColumn("L_Officer_Salary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL_Officer_Salary);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnL_Job_Start_Date = new global::System.Data.DataColumn("L_Job_Start_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL_Job_Start_Date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLaboratory_Staff_Id}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnLaboratory_Staff_Id.ReadOnly = true;
                this.columnLaboratory_Staff_Id.Unique = true;
                this.columnLaboratory_Staff_Id.MaxLength = 8;
                this.columnL_Officer_First_Name.AllowDBNull = false;
                this.columnL_Officer_First_Name.MaxLength = 200;
                this.columnL_Officer_Middle_Name.MaxLength = 200;
                this.columnL_Officer_Last_Name.AllowDBNull = false;
                this.columnL_Officer_Last_Name.MaxLength = 200;
                this.columnL_Officer_Address.AllowDBNull = false;
                this.columnL_Officer_Address.MaxLength = 150;
                this.columnL_Officer_Tele_Number.AllowDBNull = false;
                this.columnL_Officer_DOB.AllowDBNull = false;
                this.columnL_Officer_Salary.AllowDBNull = false;
                this.columnDesignation.AllowDBNull = false;
                this.columnDesignation.MaxLength = 30;
                this.columnL_Job_Start_Date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LABORATORY_STAFFRow NewLABORATORY_STAFFRow() {
                return ((LABORATORY_STAFFRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LABORATORY_STAFFRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LABORATORY_STAFFRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LABORATORY_STAFFRowChanged != null)) {
                    this.LABORATORY_STAFFRowChanged(this, new LABORATORY_STAFFRowChangeEvent(((LABORATORY_STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LABORATORY_STAFFRowChanging != null)) {
                    this.LABORATORY_STAFFRowChanging(this, new LABORATORY_STAFFRowChangeEvent(((LABORATORY_STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LABORATORY_STAFFRowDeleted != null)) {
                    this.LABORATORY_STAFFRowDeleted(this, new LABORATORY_STAFFRowChangeEvent(((LABORATORY_STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LABORATORY_STAFFRowDeleting != null)) {
                    this.LABORATORY_STAFFRowDeleting(this, new LABORATORY_STAFFRowChangeEvent(((LABORATORY_STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveLABORATORY_STAFFRow(LABORATORY_STAFFRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LABORATORY_STAFFDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LOG_IN_DETAILDataTable : global::System.Data.TypedTableBase<LOG_IN_DETAILRow> {
            
            private global::System.Data.DataColumn columnRoll_Id;
            
            private global::System.Data.DataColumn columnLog_In_Date;
            
            private global::System.Data.DataColumn columnLog_In_Time;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_DETAILDataTable() {
                this.TableName = "LOG_IN_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LOG_IN_DETAILDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected LOG_IN_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Roll_IdColumn {
                get {
                    return this.columnRoll_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Log_In_DateColumn {
                get {
                    return this.columnLog_In_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Log_In_TimeColumn {
                get {
                    return this.columnLog_In_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_DETAILRow this[int index] {
                get {
                    return ((LOG_IN_DETAILRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LOG_IN_DETAILRowChangeEventHandler LOG_IN_DETAILRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LOG_IN_DETAILRowChangeEventHandler LOG_IN_DETAILRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LOG_IN_DETAILRowChangeEventHandler LOG_IN_DETAILRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LOG_IN_DETAILRowChangeEventHandler LOG_IN_DETAILRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddLOG_IN_DETAILRow(LOG_IN_DETAILRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_DETAILRow AddLOG_IN_DETAILRow(ACCOUNTRow parentACCOUNTRowByFK_LOG_IN_DETAIL, System.DateTime Log_In_Date, System.TimeSpan Log_In_Time) {
                LOG_IN_DETAILRow rowLOG_IN_DETAILRow = ((LOG_IN_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Log_In_Date,
                        Log_In_Time};
                if ((parentACCOUNTRowByFK_LOG_IN_DETAIL != null)) {
                    columnValuesArray[0] = parentACCOUNTRowByFK_LOG_IN_DETAIL[1];
                }
                rowLOG_IN_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLOG_IN_DETAILRow);
                return rowLOG_IN_DETAILRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_DETAILRow FindByRoll_Id(string Roll_Id) {
                return ((LOG_IN_DETAILRow)(this.Rows.Find(new object[] {
                            Roll_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LOG_IN_DETAILDataTable cln = ((LOG_IN_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LOG_IN_DETAILDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnRoll_Id = base.Columns["Roll_Id"];
                this.columnLog_In_Date = base.Columns["Log_In_Date"];
                this.columnLog_In_Time = base.Columns["Log_In_Time"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnRoll_Id = new global::System.Data.DataColumn("Roll_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll_Id);
                this.columnLog_In_Date = new global::System.Data.DataColumn("Log_In_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_In_Date);
                this.columnLog_In_Time = new global::System.Data.DataColumn("Log_In_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_In_Time);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRoll_Id}, true));
                this.columnRoll_Id.AllowDBNull = false;
                this.columnRoll_Id.Unique = true;
                this.columnRoll_Id.MaxLength = 8;
                this.columnLog_In_Date.AllowDBNull = false;
                this.columnLog_In_Time.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_DETAILRow NewLOG_IN_DETAILRow() {
                return ((LOG_IN_DETAILRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LOG_IN_DETAILRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LOG_IN_DETAILRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LOG_IN_DETAILRowChanged != null)) {
                    this.LOG_IN_DETAILRowChanged(this, new LOG_IN_DETAILRowChangeEvent(((LOG_IN_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LOG_IN_DETAILRowChanging != null)) {
                    this.LOG_IN_DETAILRowChanging(this, new LOG_IN_DETAILRowChangeEvent(((LOG_IN_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LOG_IN_DETAILRowDeleted != null)) {
                    this.LOG_IN_DETAILRowDeleted(this, new LOG_IN_DETAILRowChangeEvent(((LOG_IN_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LOG_IN_DETAILRowDeleting != null)) {
                    this.LOG_IN_DETAILRowDeleting(this, new LOG_IN_DETAILRowChangeEvent(((LOG_IN_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveLOG_IN_DETAILRow(LOG_IN_DETAILRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LOG_IN_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LOG_IN_USERDataTable : global::System.Data.TypedTableBase<LOG_IN_USERRow> {
            
            private global::System.Data.DataColumn columnRoll_Id;
            
            private global::System.Data.DataColumn columnRoll_name;
            
            private global::System.Data.DataColumn columnFirst_Name;
            
            private global::System.Data.DataColumn columnMiddle_Name;
            
            private global::System.Data.DataColumn columnSurname;
            
            private global::System.Data.DataColumn columnUser_Address;
            
            private global::System.Data.DataColumn columnImg;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnUser_Tele_No;
            
            private global::System.Data.DataColumn columnDate_Of_Birth;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnSalary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_USERDataTable() {
                this.TableName = "LOG_IN_USER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LOG_IN_USERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected LOG_IN_USERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Roll_IdColumn {
                get {
                    return this.columnRoll_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Roll_nameColumn {
                get {
                    return this.columnRoll_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn First_NameColumn {
                get {
                    return this.columnFirst_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Middle_NameColumn {
                get {
                    return this.columnMiddle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SurnameColumn {
                get {
                    return this.columnSurname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn User_AddressColumn {
                get {
                    return this.columnUser_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImgColumn {
                get {
                    return this.columnImg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn User_Tele_NoColumn {
                get {
                    return this.columnUser_Tele_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Date_Of_BirthColumn {
                get {
                    return this.columnDate_Of_Birth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SalaryColumn {
                get {
                    return this.columnSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_USERRow this[int index] {
                get {
                    return ((LOG_IN_USERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LOG_IN_USERRowChangeEventHandler LOG_IN_USERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LOG_IN_USERRowChangeEventHandler LOG_IN_USERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LOG_IN_USERRowChangeEventHandler LOG_IN_USERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LOG_IN_USERRowChangeEventHandler LOG_IN_USERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddLOG_IN_USERRow(LOG_IN_USERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_USERRow AddLOG_IN_USERRow(ACCOUNTRow parentACCOUNTRowByfk_LOG_IN_USER, string Roll_name, string First_Name, string Middle_Name, string Surname, string User_Address, byte[] Img, string Gender, int User_Tele_No, System.DateTime Date_Of_Birth, string Designation, decimal Salary) {
                LOG_IN_USERRow rowLOG_IN_USERRow = ((LOG_IN_USERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Roll_name,
                        First_Name,
                        Middle_Name,
                        Surname,
                        User_Address,
                        Img,
                        Gender,
                        User_Tele_No,
                        Date_Of_Birth,
                        Designation,
                        Salary};
                if ((parentACCOUNTRowByfk_LOG_IN_USER != null)) {
                    columnValuesArray[0] = parentACCOUNTRowByfk_LOG_IN_USER[1];
                }
                rowLOG_IN_USERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLOG_IN_USERRow);
                return rowLOG_IN_USERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_USERRow FindByRoll_Id(string Roll_Id) {
                return ((LOG_IN_USERRow)(this.Rows.Find(new object[] {
                            Roll_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LOG_IN_USERDataTable cln = ((LOG_IN_USERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LOG_IN_USERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnRoll_Id = base.Columns["Roll_Id"];
                this.columnRoll_name = base.Columns["Roll_name"];
                this.columnFirst_Name = base.Columns["First_Name"];
                this.columnMiddle_Name = base.Columns["Middle_Name"];
                this.columnSurname = base.Columns["Surname"];
                this.columnUser_Address = base.Columns["User_Address"];
                this.columnImg = base.Columns["Img"];
                this.columnGender = base.Columns["Gender"];
                this.columnUser_Tele_No = base.Columns["User_Tele_No"];
                this.columnDate_Of_Birth = base.Columns["Date_Of_Birth"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnSalary = base.Columns["Salary"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnRoll_Id = new global::System.Data.DataColumn("Roll_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll_Id);
                this.columnRoll_name = new global::System.Data.DataColumn("Roll_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll_name);
                this.columnFirst_Name = new global::System.Data.DataColumn("First_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirst_Name);
                this.columnMiddle_Name = new global::System.Data.DataColumn("Middle_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiddle_Name);
                this.columnSurname = new global::System.Data.DataColumn("Surname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurname);
                this.columnUser_Address = new global::System.Data.DataColumn("User_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_Address);
                this.columnImg = new global::System.Data.DataColumn("Img", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnUser_Tele_No = new global::System.Data.DataColumn("User_Tele_No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_Tele_No);
                this.columnDate_Of_Birth = new global::System.Data.DataColumn("Date_Of_Birth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_Of_Birth);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnSalary = new global::System.Data.DataColumn("Salary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalary);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRoll_Id}, true));
                this.columnRoll_Id.AllowDBNull = false;
                this.columnRoll_Id.Unique = true;
                this.columnRoll_Id.MaxLength = 8;
                this.columnRoll_name.MaxLength = 80;
                this.columnFirst_Name.AllowDBNull = false;
                this.columnFirst_Name.MaxLength = 100;
                this.columnMiddle_Name.MaxLength = 100;
                this.columnSurname.AllowDBNull = false;
                this.columnSurname.MaxLength = 100;
                this.columnUser_Address.MaxLength = 100;
                this.columnGender.MaxLength = 10;
                this.columnDesignation.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_USERRow NewLOG_IN_USERRow() {
                return ((LOG_IN_USERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LOG_IN_USERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LOG_IN_USERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LOG_IN_USERRowChanged != null)) {
                    this.LOG_IN_USERRowChanged(this, new LOG_IN_USERRowChangeEvent(((LOG_IN_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LOG_IN_USERRowChanging != null)) {
                    this.LOG_IN_USERRowChanging(this, new LOG_IN_USERRowChangeEvent(((LOG_IN_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LOG_IN_USERRowDeleted != null)) {
                    this.LOG_IN_USERRowDeleted(this, new LOG_IN_USERRowChangeEvent(((LOG_IN_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LOG_IN_USERRowDeleting != null)) {
                    this.LOG_IN_USERRowDeleting(this, new LOG_IN_USERRowChangeEvent(((LOG_IN_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveLOG_IN_USERRow(LOG_IN_USERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LOG_IN_USERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ORGANIZATIONDataTable : global::System.Data.TypedTableBase<ORGANIZATIONRow> {
            
            private global::System.Data.DataColumn columnGoverment_Reg_Number;
            
            private global::System.Data.DataColumn columnOrganization_Name;
            
            private global::System.Data.DataColumn columnOrganization_Address;
            
            private global::System.Data.DataColumn columnBill_Number;
            
            private global::System.Data.DataColumn columnBilling_Officer_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORGANIZATIONDataTable() {
                this.TableName = "ORGANIZATION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ORGANIZATIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ORGANIZATIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Goverment_Reg_NumberColumn {
                get {
                    return this.columnGoverment_Reg_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Organization_NameColumn {
                get {
                    return this.columnOrganization_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Organization_AddressColumn {
                get {
                    return this.columnOrganization_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Bill_NumberColumn {
                get {
                    return this.columnBill_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Billing_Officer_IdColumn {
                get {
                    return this.columnBilling_Officer_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORGANIZATIONRow this[int index] {
                get {
                    return ((ORGANIZATIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ORGANIZATIONRowChangeEventHandler ORGANIZATIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ORGANIZATIONRowChangeEventHandler ORGANIZATIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ORGANIZATIONRowChangeEventHandler ORGANIZATIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ORGANIZATIONRowChangeEventHandler ORGANIZATIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddORGANIZATIONRow(ORGANIZATIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORGANIZATIONRow AddORGANIZATIONRow(string Goverment_Reg_Number, string Organization_Name, string Organization_Address, BILLRow parentBILLRowByfk_ORGANIZATION, BILLING_OFFICERRow parentBILLING_OFFICERRowByFK__ORGANIZAT__Billi__693CA210) {
                ORGANIZATIONRow rowORGANIZATIONRow = ((ORGANIZATIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Goverment_Reg_Number,
                        Organization_Name,
                        Organization_Address,
                        null,
                        null};
                if ((parentBILLRowByfk_ORGANIZATION != null)) {
                    columnValuesArray[3] = parentBILLRowByfk_ORGANIZATION[1];
                }
                if ((parentBILLING_OFFICERRowByFK__ORGANIZAT__Billi__693CA210 != null)) {
                    columnValuesArray[4] = parentBILLING_OFFICERRowByFK__ORGANIZAT__Billi__693CA210[1];
                }
                rowORGANIZATIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowORGANIZATIONRow);
                return rowORGANIZATIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORGANIZATIONRow FindByGoverment_Reg_Number(string Goverment_Reg_Number) {
                return ((ORGANIZATIONRow)(this.Rows.Find(new object[] {
                            Goverment_Reg_Number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ORGANIZATIONDataTable cln = ((ORGANIZATIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ORGANIZATIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnGoverment_Reg_Number = base.Columns["Goverment_Reg_Number"];
                this.columnOrganization_Name = base.Columns["Organization_Name"];
                this.columnOrganization_Address = base.Columns["Organization_Address"];
                this.columnBill_Number = base.Columns["Bill_Number"];
                this.columnBilling_Officer_Id = base.Columns["Billing_Officer_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnGoverment_Reg_Number = new global::System.Data.DataColumn("Goverment_Reg_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoverment_Reg_Number);
                this.columnOrganization_Name = new global::System.Data.DataColumn("Organization_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganization_Name);
                this.columnOrganization_Address = new global::System.Data.DataColumn("Organization_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganization_Address);
                this.columnBill_Number = new global::System.Data.DataColumn("Bill_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Number);
                this.columnBilling_Officer_Id = new global::System.Data.DataColumn("Billing_Officer_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBilling_Officer_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnGoverment_Reg_Number}, true));
                this.columnGoverment_Reg_Number.AllowDBNull = false;
                this.columnGoverment_Reg_Number.Unique = true;
                this.columnGoverment_Reg_Number.MaxLength = 20;
                this.columnOrganization_Name.AllowDBNull = false;
                this.columnOrganization_Name.MaxLength = 150;
                this.columnOrganization_Address.AllowDBNull = false;
                this.columnOrganization_Address.MaxLength = 150;
                this.columnBill_Number.AllowDBNull = false;
                this.columnBill_Number.MaxLength = 11;
                this.columnBilling_Officer_Id.AllowDBNull = false;
                this.columnBilling_Officer_Id.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORGANIZATIONRow NewORGANIZATIONRow() {
                return ((ORGANIZATIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ORGANIZATIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ORGANIZATIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ORGANIZATIONRowChanged != null)) {
                    this.ORGANIZATIONRowChanged(this, new ORGANIZATIONRowChangeEvent(((ORGANIZATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ORGANIZATIONRowChanging != null)) {
                    this.ORGANIZATIONRowChanging(this, new ORGANIZATIONRowChangeEvent(((ORGANIZATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ORGANIZATIONRowDeleted != null)) {
                    this.ORGANIZATIONRowDeleted(this, new ORGANIZATIONRowChangeEvent(((ORGANIZATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ORGANIZATIONRowDeleting != null)) {
                    this.ORGANIZATIONRowDeleting(this, new ORGANIZATIONRowChangeEvent(((ORGANIZATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveORGANIZATIONRow(ORGANIZATIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ORGANIZATIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OUT_PATIENTDataTable : global::System.Data.TypedTableBase<OUT_PATIENTRow> {
            
            private global::System.Data.DataColumn columnOut_Patient_Id_Number;
            
            private global::System.Data.DataColumn columnPatient_Name;
            
            private global::System.Data.DataColumn columnGuardian_NIC;
            
            private global::System.Data.DataColumn columnGuardian_Tele_No;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnReason;
            
            private global::System.Data.DataColumn columnC_Date;
            
            private global::System.Data.DataColumn columnC_Time;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENTDataTable() {
                this.TableName = "OUT_PATIENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal OUT_PATIENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected OUT_PATIENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Out_Patient_Id_NumberColumn {
                get {
                    return this.columnOut_Patient_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Patient_NameColumn {
                get {
                    return this.columnPatient_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Guardian_NICColumn {
                get {
                    return this.columnGuardian_NIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Guardian_Tele_NoColumn {
                get {
                    return this.columnGuardian_Tele_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReasonColumn {
                get {
                    return this.columnReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn C_DateColumn {
                get {
                    return this.columnC_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn C_TimeColumn {
                get {
                    return this.columnC_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENTRow this[int index] {
                get {
                    return ((OUT_PATIENTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENTRowChangeEventHandler OUT_PATIENTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENTRowChangeEventHandler OUT_PATIENTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENTRowChangeEventHandler OUT_PATIENTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENTRowChangeEventHandler OUT_PATIENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddOUT_PATIENTRow(OUT_PATIENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENTRow AddOUT_PATIENTRow(string Patient_Name, string Guardian_NIC, int Guardian_Tele_No, int Age, string Reason, System.DateTime C_Date, System.TimeSpan C_Time) {
                OUT_PATIENTRow rowOUT_PATIENTRow = ((OUT_PATIENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Patient_Name,
                        Guardian_NIC,
                        Guardian_Tele_No,
                        Age,
                        Reason,
                        C_Date,
                        C_Time};
                rowOUT_PATIENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOUT_PATIENTRow);
                return rowOUT_PATIENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENTRow FindByOut_Patient_Id_Number(int Out_Patient_Id_Number) {
                return ((OUT_PATIENTRow)(this.Rows.Find(new object[] {
                            Out_Patient_Id_Number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OUT_PATIENTDataTable cln = ((OUT_PATIENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OUT_PATIENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnOut_Patient_Id_Number = base.Columns["Out_Patient_Id_Number"];
                this.columnPatient_Name = base.Columns["Patient_Name"];
                this.columnGuardian_NIC = base.Columns["Guardian_NIC"];
                this.columnGuardian_Tele_No = base.Columns["Guardian_Tele_No"];
                this.columnAge = base.Columns["Age"];
                this.columnReason = base.Columns["Reason"];
                this.columnC_Date = base.Columns["C_Date"];
                this.columnC_Time = base.Columns["C_Time"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnOut_Patient_Id_Number = new global::System.Data.DataColumn("Out_Patient_Id_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOut_Patient_Id_Number);
                this.columnPatient_Name = new global::System.Data.DataColumn("Patient_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatient_Name);
                this.columnGuardian_NIC = new global::System.Data.DataColumn("Guardian_NIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardian_NIC);
                this.columnGuardian_Tele_No = new global::System.Data.DataColumn("Guardian_Tele_No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardian_Tele_No);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnReason = new global::System.Data.DataColumn("Reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReason);
                this.columnC_Date = new global::System.Data.DataColumn("C_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_Date);
                this.columnC_Time = new global::System.Data.DataColumn("C_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_Time);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOut_Patient_Id_Number}, true));
                this.columnOut_Patient_Id_Number.AutoIncrement = true;
                this.columnOut_Patient_Id_Number.AutoIncrementSeed = -1;
                this.columnOut_Patient_Id_Number.AutoIncrementStep = -1;
                this.columnOut_Patient_Id_Number.AllowDBNull = false;
                this.columnOut_Patient_Id_Number.ReadOnly = true;
                this.columnOut_Patient_Id_Number.Unique = true;
                this.columnPatient_Name.AllowDBNull = false;
                this.columnPatient_Name.MaxLength = 70;
                this.columnGuardian_NIC.AllowDBNull = false;
                this.columnGuardian_NIC.MaxLength = 12;
                this.columnGuardian_Tele_No.AllowDBNull = false;
                this.columnAge.AllowDBNull = false;
                this.columnReason.AllowDBNull = false;
                this.columnReason.MaxLength = 200;
                this.columnC_Date.AllowDBNull = false;
                this.columnC_Time.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENTRow NewOUT_PATIENTRow() {
                return ((OUT_PATIENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OUT_PATIENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OUT_PATIENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OUT_PATIENTRowChanged != null)) {
                    this.OUT_PATIENTRowChanged(this, new OUT_PATIENTRowChangeEvent(((OUT_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OUT_PATIENTRowChanging != null)) {
                    this.OUT_PATIENTRowChanging(this, new OUT_PATIENTRowChangeEvent(((OUT_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OUT_PATIENTRowDeleted != null)) {
                    this.OUT_PATIENTRowDeleted(this, new OUT_PATIENTRowChangeEvent(((OUT_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OUT_PATIENTRowDeleting != null)) {
                    this.OUT_PATIENTRowDeleting(this, new OUT_PATIENTRowChangeEvent(((OUT_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveOUT_PATIENTRow(OUT_PATIENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OUT_PATIENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OUT_PATIENT_MEDICINEDataTable : global::System.Data.TypedTableBase<OUT_PATIENT_MEDICINERow> {
            
            private global::System.Data.DataColumn columnOut_Patient_Id_Number;
            
            private global::System.Data.DataColumn columnDrug_Code;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnNumber_Of_Day;
            
            private global::System.Data.DataColumn columnIssue_Date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_MEDICINEDataTable() {
                this.TableName = "OUT_PATIENT_MEDICINE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal OUT_PATIENT_MEDICINEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected OUT_PATIENT_MEDICINEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Out_Patient_Id_NumberColumn {
                get {
                    return this.columnOut_Patient_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Drug_CodeColumn {
                get {
                    return this.columnDrug_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Number_Of_DayColumn {
                get {
                    return this.columnNumber_Of_Day;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_DateColumn {
                get {
                    return this.columnIssue_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_MEDICINERow this[int index] {
                get {
                    return ((OUT_PATIENT_MEDICINERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_MEDICINERowChangeEventHandler OUT_PATIENT_MEDICINERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_MEDICINERowChangeEventHandler OUT_PATIENT_MEDICINERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_MEDICINERowChangeEventHandler OUT_PATIENT_MEDICINERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_MEDICINERowChangeEventHandler OUT_PATIENT_MEDICINERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddOUT_PATIENT_MEDICINERow(OUT_PATIENT_MEDICINERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_MEDICINERow AddOUT_PATIENT_MEDICINERow(OUT_PATIENTRow parentOUT_PATIENTRowByfk_OUT_PATIENT_MEDICINE, DRUGRow parentDRUGRowByFK__OUT_PATIE__Drug___04E4BC85, string Quantity, int Number_Of_Day, System.DateTime Issue_Date) {
                OUT_PATIENT_MEDICINERow rowOUT_PATIENT_MEDICINERow = ((OUT_PATIENT_MEDICINERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Quantity,
                        Number_Of_Day,
                        Issue_Date};
                if ((parentOUT_PATIENTRowByfk_OUT_PATIENT_MEDICINE != null)) {
                    columnValuesArray[0] = parentOUT_PATIENTRowByfk_OUT_PATIENT_MEDICINE[0];
                }
                if ((parentDRUGRowByFK__OUT_PATIE__Drug___04E4BC85 != null)) {
                    columnValuesArray[1] = parentDRUGRowByFK__OUT_PATIE__Drug___04E4BC85[1];
                }
                rowOUT_PATIENT_MEDICINERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOUT_PATIENT_MEDICINERow);
                return rowOUT_PATIENT_MEDICINERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_MEDICINERow FindByOut_Patient_Id_NumberDrug_Code(int Out_Patient_Id_Number, string Drug_Code) {
                return ((OUT_PATIENT_MEDICINERow)(this.Rows.Find(new object[] {
                            Out_Patient_Id_Number,
                            Drug_Code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OUT_PATIENT_MEDICINEDataTable cln = ((OUT_PATIENT_MEDICINEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OUT_PATIENT_MEDICINEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnOut_Patient_Id_Number = base.Columns["Out_Patient_Id_Number"];
                this.columnDrug_Code = base.Columns["Drug_Code"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnNumber_Of_Day = base.Columns["Number_Of_Day"];
                this.columnIssue_Date = base.Columns["Issue_Date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnOut_Patient_Id_Number = new global::System.Data.DataColumn("Out_Patient_Id_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOut_Patient_Id_Number);
                this.columnDrug_Code = new global::System.Data.DataColumn("Drug_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrug_Code);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnNumber_Of_Day = new global::System.Data.DataColumn("Number_Of_Day", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber_Of_Day);
                this.columnIssue_Date = new global::System.Data.DataColumn("Issue_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOut_Patient_Id_Number,
                                this.columnDrug_Code}, true));
                this.columnOut_Patient_Id_Number.AllowDBNull = false;
                this.columnDrug_Code.AllowDBNull = false;
                this.columnDrug_Code.MaxLength = 11;
                this.columnQuantity.AllowDBNull = false;
                this.columnQuantity.MaxLength = 10;
                this.columnNumber_Of_Day.AllowDBNull = false;
                this.columnIssue_Date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_MEDICINERow NewOUT_PATIENT_MEDICINERow() {
                return ((OUT_PATIENT_MEDICINERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OUT_PATIENT_MEDICINERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OUT_PATIENT_MEDICINERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OUT_PATIENT_MEDICINERowChanged != null)) {
                    this.OUT_PATIENT_MEDICINERowChanged(this, new OUT_PATIENT_MEDICINERowChangeEvent(((OUT_PATIENT_MEDICINERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OUT_PATIENT_MEDICINERowChanging != null)) {
                    this.OUT_PATIENT_MEDICINERowChanging(this, new OUT_PATIENT_MEDICINERowChangeEvent(((OUT_PATIENT_MEDICINERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OUT_PATIENT_MEDICINERowDeleted != null)) {
                    this.OUT_PATIENT_MEDICINERowDeleted(this, new OUT_PATIENT_MEDICINERowChangeEvent(((OUT_PATIENT_MEDICINERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OUT_PATIENT_MEDICINERowDeleting != null)) {
                    this.OUT_PATIENT_MEDICINERowDeleting(this, new OUT_PATIENT_MEDICINERowChangeEvent(((OUT_PATIENT_MEDICINERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveOUT_PATIENT_MEDICINERow(OUT_PATIENT_MEDICINERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OUT_PATIENT_MEDICINEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OUT_PATIENT_REPORTDataTable : global::System.Data.TypedTableBase<OUT_PATIENT_REPORTRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnOut_Patient_Report_No;
            
            private global::System.Data.DataColumn columnPatient_Id_Number;
            
            private global::System.Data.DataColumn columnReport;
            
            private global::System.Data.DataColumn columnIssue_Date;
            
            private global::System.Data.DataColumn columnIssue_Time;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_REPORTDataTable() {
                this.TableName = "OUT_PATIENT_REPORT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal OUT_PATIENT_REPORTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected OUT_PATIENT_REPORTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Out_Patient_Report_NoColumn {
                get {
                    return this.columnOut_Patient_Report_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Patient_Id_NumberColumn {
                get {
                    return this.columnPatient_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReportColumn {
                get {
                    return this.columnReport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_DateColumn {
                get {
                    return this.columnIssue_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_TimeColumn {
                get {
                    return this.columnIssue_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_REPORTRow this[int index] {
                get {
                    return ((OUT_PATIENT_REPORTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_REPORTRowChangeEventHandler OUT_PATIENT_REPORTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_REPORTRowChangeEventHandler OUT_PATIENT_REPORTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_REPORTRowChangeEventHandler OUT_PATIENT_REPORTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_REPORTRowChangeEventHandler OUT_PATIENT_REPORTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddOUT_PATIENT_REPORTRow(OUT_PATIENT_REPORTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_REPORTRow AddOUT_PATIENT_REPORTRow(string Out_Patient_Report_No, PATIENT_PRIVATE_DETAILRow parentPATIENT_PRIVATE_DETAILRowByfk_OUT_PATIENT_REPORT, byte[] Report, System.DateTime Issue_Date, System.TimeSpan Issue_Time) {
                OUT_PATIENT_REPORTRow rowOUT_PATIENT_REPORTRow = ((OUT_PATIENT_REPORTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Out_Patient_Report_No,
                        null,
                        Report,
                        Issue_Date,
                        Issue_Time};
                if ((parentPATIENT_PRIVATE_DETAILRowByfk_OUT_PATIENT_REPORT != null)) {
                    columnValuesArray[2] = parentPATIENT_PRIVATE_DETAILRowByfk_OUT_PATIENT_REPORT[0];
                }
                rowOUT_PATIENT_REPORTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOUT_PATIENT_REPORTRow);
                return rowOUT_PATIENT_REPORTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OUT_PATIENT_REPORTDataTable cln = ((OUT_PATIENT_REPORTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OUT_PATIENT_REPORTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnOut_Patient_Report_No = base.Columns["Out_Patient_Report_No"];
                this.columnPatient_Id_Number = base.Columns["Patient_Id_Number"];
                this.columnReport = base.Columns["Report"];
                this.columnIssue_Date = base.Columns["Issue_Date"];
                this.columnIssue_Time = base.Columns["Issue_Time"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnOut_Patient_Report_No = new global::System.Data.DataColumn("Out_Patient_Report_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOut_Patient_Report_No);
                this.columnPatient_Id_Number = new global::System.Data.DataColumn("Patient_Id_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatient_Id_Number);
                this.columnReport = new global::System.Data.DataColumn("Report", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReport);
                this.columnIssue_Date = new global::System.Data.DataColumn("Issue_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Date);
                this.columnIssue_Time = new global::System.Data.DataColumn("Issue_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Time);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOut_Patient_Report_No}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnOut_Patient_Report_No.ReadOnly = true;
                this.columnOut_Patient_Report_No.Unique = true;
                this.columnOut_Patient_Report_No.MaxLength = 9;
                this.columnPatient_Id_Number.AllowDBNull = false;
                this.columnReport.AllowDBNull = false;
                this.columnIssue_Date.AllowDBNull = false;
                this.columnIssue_Time.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_REPORTRow NewOUT_PATIENT_REPORTRow() {
                return ((OUT_PATIENT_REPORTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OUT_PATIENT_REPORTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OUT_PATIENT_REPORTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OUT_PATIENT_REPORTRowChanged != null)) {
                    this.OUT_PATIENT_REPORTRowChanged(this, new OUT_PATIENT_REPORTRowChangeEvent(((OUT_PATIENT_REPORTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OUT_PATIENT_REPORTRowChanging != null)) {
                    this.OUT_PATIENT_REPORTRowChanging(this, new OUT_PATIENT_REPORTRowChangeEvent(((OUT_PATIENT_REPORTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OUT_PATIENT_REPORTRowDeleted != null)) {
                    this.OUT_PATIENT_REPORTRowDeleted(this, new OUT_PATIENT_REPORTRowChangeEvent(((OUT_PATIENT_REPORTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OUT_PATIENT_REPORTRowDeleting != null)) {
                    this.OUT_PATIENT_REPORTRowDeleting(this, new OUT_PATIENT_REPORTRowChangeEvent(((OUT_PATIENT_REPORTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveOUT_PATIENT_REPORTRow(OUT_PATIENT_REPORTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OUT_PATIENT_REPORTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OUT_PATIENT_SCANDataTable : global::System.Data.TypedTableBase<OUT_PATIENT_SCANRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnOut_Patient_Scan_No;
            
            private global::System.Data.DataColumn columnPatient_Id_Number;
            
            private global::System.Data.DataColumn columnScan_Report;
            
            private global::System.Data.DataColumn columnIssue_Date;
            
            private global::System.Data.DataColumn columnIssue_Time;
            
            private global::System.Data.DataColumn columnSpecialist_Doctor_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_SCANDataTable() {
                this.TableName = "OUT_PATIENT_SCAN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal OUT_PATIENT_SCANDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected OUT_PATIENT_SCANDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Out_Patient_Scan_NoColumn {
                get {
                    return this.columnOut_Patient_Scan_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Patient_Id_NumberColumn {
                get {
                    return this.columnPatient_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Scan_ReportColumn {
                get {
                    return this.columnScan_Report;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_DateColumn {
                get {
                    return this.columnIssue_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_TimeColumn {
                get {
                    return this.columnIssue_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Specialist_Doctor_IdColumn {
                get {
                    return this.columnSpecialist_Doctor_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_SCANRow this[int index] {
                get {
                    return ((OUT_PATIENT_SCANRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_SCANRowChangeEventHandler OUT_PATIENT_SCANRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_SCANRowChangeEventHandler OUT_PATIENT_SCANRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_SCANRowChangeEventHandler OUT_PATIENT_SCANRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_SCANRowChangeEventHandler OUT_PATIENT_SCANRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddOUT_PATIENT_SCANRow(OUT_PATIENT_SCANRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_SCANRow AddOUT_PATIENT_SCANRow(string Out_Patient_Scan_No, PATIENT_PRIVATE_DETAILRow parentPATIENT_PRIVATE_DETAILRowByfk_OUT_PATIENT_SCAN, byte[] Scan_Report, System.DateTime Issue_Date, System.TimeSpan Issue_Time, SPECIALIST_DOCTORRow parentSPECIALIST_DOCTORRowByFK__OUT_PATIE__Speci__2B0A656D) {
                OUT_PATIENT_SCANRow rowOUT_PATIENT_SCANRow = ((OUT_PATIENT_SCANRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Out_Patient_Scan_No,
                        null,
                        Scan_Report,
                        Issue_Date,
                        Issue_Time,
                        null};
                if ((parentPATIENT_PRIVATE_DETAILRowByfk_OUT_PATIENT_SCAN != null)) {
                    columnValuesArray[2] = parentPATIENT_PRIVATE_DETAILRowByfk_OUT_PATIENT_SCAN[0];
                }
                if ((parentSPECIALIST_DOCTORRowByFK__OUT_PATIE__Speci__2B0A656D != null)) {
                    columnValuesArray[6] = parentSPECIALIST_DOCTORRowByFK__OUT_PATIE__Speci__2B0A656D[1];
                }
                rowOUT_PATIENT_SCANRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOUT_PATIENT_SCANRow);
                return rowOUT_PATIENT_SCANRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OUT_PATIENT_SCANDataTable cln = ((OUT_PATIENT_SCANDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OUT_PATIENT_SCANDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnOut_Patient_Scan_No = base.Columns["Out_Patient_Scan_No"];
                this.columnPatient_Id_Number = base.Columns["Patient_Id_Number"];
                this.columnScan_Report = base.Columns["Scan_Report"];
                this.columnIssue_Date = base.Columns["Issue_Date"];
                this.columnIssue_Time = base.Columns["Issue_Time"];
                this.columnSpecialist_Doctor_Id = base.Columns["Specialist_Doctor_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnOut_Patient_Scan_No = new global::System.Data.DataColumn("Out_Patient_Scan_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOut_Patient_Scan_No);
                this.columnPatient_Id_Number = new global::System.Data.DataColumn("Patient_Id_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatient_Id_Number);
                this.columnScan_Report = new global::System.Data.DataColumn("Scan_Report", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScan_Report);
                this.columnIssue_Date = new global::System.Data.DataColumn("Issue_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Date);
                this.columnIssue_Time = new global::System.Data.DataColumn("Issue_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Time);
                this.columnSpecialist_Doctor_Id = new global::System.Data.DataColumn("Specialist_Doctor_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialist_Doctor_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOut_Patient_Scan_No}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnOut_Patient_Scan_No.ReadOnly = true;
                this.columnOut_Patient_Scan_No.Unique = true;
                this.columnOut_Patient_Scan_No.MaxLength = 9;
                this.columnPatient_Id_Number.AllowDBNull = false;
                this.columnScan_Report.AllowDBNull = false;
                this.columnIssue_Date.AllowDBNull = false;
                this.columnIssue_Time.AllowDBNull = false;
                this.columnSpecialist_Doctor_Id.AllowDBNull = false;
                this.columnSpecialist_Doctor_Id.MaxLength = 9;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_SCANRow NewOUT_PATIENT_SCANRow() {
                return ((OUT_PATIENT_SCANRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OUT_PATIENT_SCANRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OUT_PATIENT_SCANRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OUT_PATIENT_SCANRowChanged != null)) {
                    this.OUT_PATIENT_SCANRowChanged(this, new OUT_PATIENT_SCANRowChangeEvent(((OUT_PATIENT_SCANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OUT_PATIENT_SCANRowChanging != null)) {
                    this.OUT_PATIENT_SCANRowChanging(this, new OUT_PATIENT_SCANRowChangeEvent(((OUT_PATIENT_SCANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OUT_PATIENT_SCANRowDeleted != null)) {
                    this.OUT_PATIENT_SCANRowDeleted(this, new OUT_PATIENT_SCANRowChangeEvent(((OUT_PATIENT_SCANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OUT_PATIENT_SCANRowDeleting != null)) {
                    this.OUT_PATIENT_SCANRowDeleting(this, new OUT_PATIENT_SCANRowChangeEvent(((OUT_PATIENT_SCANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveOUT_PATIENT_SCANRow(OUT_PATIENT_SCANRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OUT_PATIENT_SCANDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OUT_PATIENT_XRAYDataTable : global::System.Data.TypedTableBase<OUT_PATIENT_XRAYRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnOut_Patient_Xray_No;
            
            private global::System.Data.DataColumn columnPatient_Id_Number;
            
            private global::System.Data.DataColumn columnX_Ray;
            
            private global::System.Data.DataColumn columnIssue_Date;
            
            private global::System.Data.DataColumn columnIssue_Time;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_XRAYDataTable() {
                this.TableName = "OUT_PATIENT_XRAY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal OUT_PATIENT_XRAYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected OUT_PATIENT_XRAYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Out_Patient_Xray_NoColumn {
                get {
                    return this.columnOut_Patient_Xray_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Patient_Id_NumberColumn {
                get {
                    return this.columnPatient_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn X_RayColumn {
                get {
                    return this.columnX_Ray;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_DateColumn {
                get {
                    return this.columnIssue_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Issue_TimeColumn {
                get {
                    return this.columnIssue_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_XRAYRow this[int index] {
                get {
                    return ((OUT_PATIENT_XRAYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_XRAYRowChangeEventHandler OUT_PATIENT_XRAYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_XRAYRowChangeEventHandler OUT_PATIENT_XRAYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_XRAYRowChangeEventHandler OUT_PATIENT_XRAYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_PATIENT_XRAYRowChangeEventHandler OUT_PATIENT_XRAYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddOUT_PATIENT_XRAYRow(OUT_PATIENT_XRAYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_XRAYRow AddOUT_PATIENT_XRAYRow(string Out_Patient_Xray_No, PATIENT_PRIVATE_DETAILRow parentPATIENT_PRIVATE_DETAILRowByfk_OUT_PATIENT_XRAY, byte[] X_Ray, System.DateTime Issue_Date, System.TimeSpan Issue_Time) {
                OUT_PATIENT_XRAYRow rowOUT_PATIENT_XRAYRow = ((OUT_PATIENT_XRAYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Out_Patient_Xray_No,
                        null,
                        X_Ray,
                        Issue_Date,
                        Issue_Time};
                if ((parentPATIENT_PRIVATE_DETAILRowByfk_OUT_PATIENT_XRAY != null)) {
                    columnValuesArray[2] = parentPATIENT_PRIVATE_DETAILRowByfk_OUT_PATIENT_XRAY[0];
                }
                rowOUT_PATIENT_XRAYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOUT_PATIENT_XRAYRow);
                return rowOUT_PATIENT_XRAYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OUT_PATIENT_XRAYDataTable cln = ((OUT_PATIENT_XRAYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OUT_PATIENT_XRAYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnOut_Patient_Xray_No = base.Columns["Out_Patient_Xray_No"];
                this.columnPatient_Id_Number = base.Columns["Patient_Id_Number"];
                this.columnX_Ray = base.Columns["X_Ray"];
                this.columnIssue_Date = base.Columns["Issue_Date"];
                this.columnIssue_Time = base.Columns["Issue_Time"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnOut_Patient_Xray_No = new global::System.Data.DataColumn("Out_Patient_Xray_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOut_Patient_Xray_No);
                this.columnPatient_Id_Number = new global::System.Data.DataColumn("Patient_Id_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatient_Id_Number);
                this.columnX_Ray = new global::System.Data.DataColumn("X_Ray", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnX_Ray);
                this.columnIssue_Date = new global::System.Data.DataColumn("Issue_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Date);
                this.columnIssue_Time = new global::System.Data.DataColumn("Issue_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssue_Time);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOut_Patient_Xray_No}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnOut_Patient_Xray_No.ReadOnly = true;
                this.columnOut_Patient_Xray_No.Unique = true;
                this.columnOut_Patient_Xray_No.MaxLength = 9;
                this.columnPatient_Id_Number.AllowDBNull = false;
                this.columnX_Ray.AllowDBNull = false;
                this.columnIssue_Date.AllowDBNull = false;
                this.columnIssue_Time.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_XRAYRow NewOUT_PATIENT_XRAYRow() {
                return ((OUT_PATIENT_XRAYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OUT_PATIENT_XRAYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OUT_PATIENT_XRAYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OUT_PATIENT_XRAYRowChanged != null)) {
                    this.OUT_PATIENT_XRAYRowChanged(this, new OUT_PATIENT_XRAYRowChangeEvent(((OUT_PATIENT_XRAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OUT_PATIENT_XRAYRowChanging != null)) {
                    this.OUT_PATIENT_XRAYRowChanging(this, new OUT_PATIENT_XRAYRowChangeEvent(((OUT_PATIENT_XRAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OUT_PATIENT_XRAYRowDeleted != null)) {
                    this.OUT_PATIENT_XRAYRowDeleted(this, new OUT_PATIENT_XRAYRowChangeEvent(((OUT_PATIENT_XRAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OUT_PATIENT_XRAYRowDeleting != null)) {
                    this.OUT_PATIENT_XRAYRowDeleting(this, new OUT_PATIENT_XRAYRowChangeEvent(((OUT_PATIENT_XRAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveOUT_PATIENT_XRAYRow(OUT_PATIENT_XRAYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OUT_PATIENT_XRAYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OUT_SAMPLEDataTable : global::System.Data.TypedTableBase<OUT_SAMPLERow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnSample_Out_Number;
            
            private global::System.Data.DataColumn columnPatient_Id_Number;
            
            private global::System.Data.DataColumn columnSample_Type;
            
            private global::System.Data.DataColumn columnSpecialist_Doctor_Id;
            
            private global::System.Data.DataColumn columnLaboratory_Staff_Id;
            
            private global::System.Data.DataColumn columnReceived_Date;
            
            private global::System.Data.DataColumn columnReceived_Time;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_SAMPLEDataTable() {
                this.TableName = "OUT_SAMPLE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal OUT_SAMPLEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected OUT_SAMPLEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Sample_Out_NumberColumn {
                get {
                    return this.columnSample_Out_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Patient_Id_NumberColumn {
                get {
                    return this.columnPatient_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Sample_TypeColumn {
                get {
                    return this.columnSample_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Specialist_Doctor_IdColumn {
                get {
                    return this.columnSpecialist_Doctor_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Laboratory_Staff_IdColumn {
                get {
                    return this.columnLaboratory_Staff_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Received_DateColumn {
                get {
                    return this.columnReceived_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Received_TimeColumn {
                get {
                    return this.columnReceived_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_SAMPLERow this[int index] {
                get {
                    return ((OUT_SAMPLERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_SAMPLERowChangeEventHandler OUT_SAMPLERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_SAMPLERowChangeEventHandler OUT_SAMPLERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_SAMPLERowChangeEventHandler OUT_SAMPLERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OUT_SAMPLERowChangeEventHandler OUT_SAMPLERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddOUT_SAMPLERow(OUT_SAMPLERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_SAMPLERow AddOUT_SAMPLERow(string Sample_Out_Number, PATIENT_PRIVATE_DETAILRow parentPATIENT_PRIVATE_DETAILRowByfk_OUT_SAMPLE, string Sample_Type, SPECIALIST_DOCTORRow parentSPECIALIST_DOCTORRowByFK__OUT_SAMPL__Speci__0F624AF8, string Laboratory_Staff_Id, System.DateTime Received_Date, System.TimeSpan Received_Time) {
                OUT_SAMPLERow rowOUT_SAMPLERow = ((OUT_SAMPLERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Sample_Out_Number,
                        null,
                        Sample_Type,
                        null,
                        Laboratory_Staff_Id,
                        Received_Date,
                        Received_Time};
                if ((parentPATIENT_PRIVATE_DETAILRowByfk_OUT_SAMPLE != null)) {
                    columnValuesArray[2] = parentPATIENT_PRIVATE_DETAILRowByfk_OUT_SAMPLE[0];
                }
                if ((parentSPECIALIST_DOCTORRowByFK__OUT_SAMPL__Speci__0F624AF8 != null)) {
                    columnValuesArray[4] = parentSPECIALIST_DOCTORRowByFK__OUT_SAMPL__Speci__0F624AF8[1];
                }
                rowOUT_SAMPLERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOUT_SAMPLERow);
                return rowOUT_SAMPLERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OUT_SAMPLEDataTable cln = ((OUT_SAMPLEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OUT_SAMPLEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnSample_Out_Number = base.Columns["Sample_Out_Number"];
                this.columnPatient_Id_Number = base.Columns["Patient_Id_Number"];
                this.columnSample_Type = base.Columns["Sample_Type"];
                this.columnSpecialist_Doctor_Id = base.Columns["Specialist_Doctor_Id"];
                this.columnLaboratory_Staff_Id = base.Columns["Laboratory_Staff_Id"];
                this.columnReceived_Date = base.Columns["Received_Date"];
                this.columnReceived_Time = base.Columns["Received_Time"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnSample_Out_Number = new global::System.Data.DataColumn("Sample_Out_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSample_Out_Number);
                this.columnPatient_Id_Number = new global::System.Data.DataColumn("Patient_Id_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatient_Id_Number);
                this.columnSample_Type = new global::System.Data.DataColumn("Sample_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSample_Type);
                this.columnSpecialist_Doctor_Id = new global::System.Data.DataColumn("Specialist_Doctor_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialist_Doctor_Id);
                this.columnLaboratory_Staff_Id = new global::System.Data.DataColumn("Laboratory_Staff_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaboratory_Staff_Id);
                this.columnReceived_Date = new global::System.Data.DataColumn("Received_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceived_Date);
                this.columnReceived_Time = new global::System.Data.DataColumn("Received_Time", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceived_Time);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSample_Out_Number}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnSample_Out_Number.ReadOnly = true;
                this.columnSample_Out_Number.Unique = true;
                this.columnSample_Out_Number.MaxLength = 9;
                this.columnPatient_Id_Number.AllowDBNull = false;
                this.columnSample_Type.AllowDBNull = false;
                this.columnSample_Type.MaxLength = 10;
                this.columnSpecialist_Doctor_Id.AllowDBNull = false;
                this.columnSpecialist_Doctor_Id.MaxLength = 9;
                this.columnLaboratory_Staff_Id.AllowDBNull = false;
                this.columnLaboratory_Staff_Id.MaxLength = 8;
                this.columnReceived_Date.AllowDBNull = false;
                this.columnReceived_Time.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_SAMPLERow NewOUT_SAMPLERow() {
                return ((OUT_SAMPLERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OUT_SAMPLERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OUT_SAMPLERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OUT_SAMPLERowChanged != null)) {
                    this.OUT_SAMPLERowChanged(this, new OUT_SAMPLERowChangeEvent(((OUT_SAMPLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OUT_SAMPLERowChanging != null)) {
                    this.OUT_SAMPLERowChanging(this, new OUT_SAMPLERowChangeEvent(((OUT_SAMPLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OUT_SAMPLERowDeleted != null)) {
                    this.OUT_SAMPLERowDeleted(this, new OUT_SAMPLERowChangeEvent(((OUT_SAMPLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OUT_SAMPLERowDeleting != null)) {
                    this.OUT_SAMPLERowDeleting(this, new OUT_SAMPLERowChangeEvent(((OUT_SAMPLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveOUT_SAMPLERow(OUT_SAMPLERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OUT_SAMPLEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PATIENT_APPOINTMENT_DETAILSDataTable : global::System.Data.TypedTableBase<PATIENT_APPOINTMENT_DETAILSRow> {
            
            private global::System.Data.DataColumn columnPatient_Id_Number;
            
            private global::System.Data.DataColumn columnInvoice_Number;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_APPOINTMENT_DETAILSDataTable() {
                this.TableName = "PATIENT_APPOINTMENT_DETAILS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PATIENT_APPOINTMENT_DETAILSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PATIENT_APPOINTMENT_DETAILSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Patient_Id_NumberColumn {
                get {
                    return this.columnPatient_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Invoice_NumberColumn {
                get {
                    return this.columnInvoice_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_APPOINTMENT_DETAILSRow this[int index] {
                get {
                    return ((PATIENT_APPOINTMENT_DETAILSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PATIENT_APPOINTMENT_DETAILSRowChangeEventHandler PATIENT_APPOINTMENT_DETAILSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PATIENT_APPOINTMENT_DETAILSRowChangeEventHandler PATIENT_APPOINTMENT_DETAILSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PATIENT_APPOINTMENT_DETAILSRowChangeEventHandler PATIENT_APPOINTMENT_DETAILSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PATIENT_APPOINTMENT_DETAILSRowChangeEventHandler PATIENT_APPOINTMENT_DETAILSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPATIENT_APPOINTMENT_DETAILSRow(PATIENT_APPOINTMENT_DETAILSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_APPOINTMENT_DETAILSRow AddPATIENT_APPOINTMENT_DETAILSRow(PATIENT_PRIVATE_DETAILRow parentPATIENT_PRIVATE_DETAILRowByfk_PATIENT_APPOINTMENT_DETAILS, CUSTOMERRow parentCUSTOMERRowByFK__PATIENT_A__Invoi__59063A47) {
                PATIENT_APPOINTMENT_DETAILSRow rowPATIENT_APPOINTMENT_DETAILSRow = ((PATIENT_APPOINTMENT_DETAILSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentPATIENT_PRIVATE_DETAILRowByfk_PATIENT_APPOINTMENT_DETAILS != null)) {
                    columnValuesArray[0] = parentPATIENT_PRIVATE_DETAILRowByfk_PATIENT_APPOINTMENT_DETAILS[0];
                }
                if ((parentCUSTOMERRowByFK__PATIENT_A__Invoi__59063A47 != null)) {
                    columnValuesArray[1] = parentCUSTOMERRowByFK__PATIENT_A__Invoi__59063A47[1];
                }
                rowPATIENT_APPOINTMENT_DETAILSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPATIENT_APPOINTMENT_DETAILSRow);
                return rowPATIENT_APPOINTMENT_DETAILSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_APPOINTMENT_DETAILSRow FindByPatient_Id_NumberInvoice_Number(int Patient_Id_Number, string Invoice_Number) {
                return ((PATIENT_APPOINTMENT_DETAILSRow)(this.Rows.Find(new object[] {
                            Patient_Id_Number,
                            Invoice_Number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PATIENT_APPOINTMENT_DETAILSDataTable cln = ((PATIENT_APPOINTMENT_DETAILSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PATIENT_APPOINTMENT_DETAILSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPatient_Id_Number = base.Columns["Patient_Id_Number"];
                this.columnInvoice_Number = base.Columns["Invoice_Number"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPatient_Id_Number = new global::System.Data.DataColumn("Patient_Id_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatient_Id_Number);
                this.columnInvoice_Number = new global::System.Data.DataColumn("Invoice_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoice_Number);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatient_Id_Number,
                                this.columnInvoice_Number}, true));
                this.columnPatient_Id_Number.AllowDBNull = false;
                this.columnInvoice_Number.AllowDBNull = false;
                this.columnInvoice_Number.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_APPOINTMENT_DETAILSRow NewPATIENT_APPOINTMENT_DETAILSRow() {
                return ((PATIENT_APPOINTMENT_DETAILSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PATIENT_APPOINTMENT_DETAILSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PATIENT_APPOINTMENT_DETAILSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PATIENT_APPOINTMENT_DETAILSRowChanged != null)) {
                    this.PATIENT_APPOINTMENT_DETAILSRowChanged(this, new PATIENT_APPOINTMENT_DETAILSRowChangeEvent(((PATIENT_APPOINTMENT_DETAILSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PATIENT_APPOINTMENT_DETAILSRowChanging != null)) {
                    this.PATIENT_APPOINTMENT_DETAILSRowChanging(this, new PATIENT_APPOINTMENT_DETAILSRowChangeEvent(((PATIENT_APPOINTMENT_DETAILSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PATIENT_APPOINTMENT_DETAILSRowDeleted != null)) {
                    this.PATIENT_APPOINTMENT_DETAILSRowDeleted(this, new PATIENT_APPOINTMENT_DETAILSRowChangeEvent(((PATIENT_APPOINTMENT_DETAILSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PATIENT_APPOINTMENT_DETAILSRowDeleting != null)) {
                    this.PATIENT_APPOINTMENT_DETAILSRowDeleting(this, new PATIENT_APPOINTMENT_DETAILSRowChangeEvent(((PATIENT_APPOINTMENT_DETAILSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePATIENT_APPOINTMENT_DETAILSRow(PATIENT_APPOINTMENT_DETAILSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PATIENT_APPOINTMENT_DETAILSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PATIENT_PRIVATE_DETAILDataTable : global::System.Data.TypedTableBase<PATIENT_PRIVATE_DETAILRow> {
            
            private global::System.Data.DataColumn columnPatient_Id_Number;
            
            private global::System.Data.DataColumn columnPatient_Full_Name;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnDate_Of_Birth;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnBlood_Group;
            
            private global::System.Data.DataColumn columnGuardian_Id_Number;
            
            private global::System.Data.DataColumn columnSpecialist_Doctor_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILDataTable() {
                this.TableName = "PATIENT_PRIVATE_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PATIENT_PRIVATE_DETAILDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PATIENT_PRIVATE_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Patient_Id_NumberColumn {
                get {
                    return this.columnPatient_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Patient_Full_NameColumn {
                get {
                    return this.columnPatient_Full_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Date_Of_BirthColumn {
                get {
                    return this.columnDate_Of_Birth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Blood_GroupColumn {
                get {
                    return this.columnBlood_Group;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Guardian_Id_NumberColumn {
                get {
                    return this.columnGuardian_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Specialist_Doctor_IdColumn {
                get {
                    return this.columnSpecialist_Doctor_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow this[int index] {
                get {
                    return ((PATIENT_PRIVATE_DETAILRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PATIENT_PRIVATE_DETAILRowChangeEventHandler PATIENT_PRIVATE_DETAILRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PATIENT_PRIVATE_DETAILRowChangeEventHandler PATIENT_PRIVATE_DETAILRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PATIENT_PRIVATE_DETAILRowChangeEventHandler PATIENT_PRIVATE_DETAILRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PATIENT_PRIVATE_DETAILRowChangeEventHandler PATIENT_PRIVATE_DETAILRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPATIENT_PRIVATE_DETAILRow(PATIENT_PRIVATE_DETAILRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow AddPATIENT_PRIVATE_DETAILRow(string Patient_Full_Name, string Gender, System.DateTime Date_Of_Birth, int Age, string Blood_Group, GUARDIANRow parentGUARDIANRowByfk_PATIENT_PRIVATE_DETAIL, SPECIALIST_DOCTORRow parentSPECIALIST_DOCTORRowByFK__PATIENT_P__Speci__5070F446) {
                PATIENT_PRIVATE_DETAILRow rowPATIENT_PRIVATE_DETAILRow = ((PATIENT_PRIVATE_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Patient_Full_Name,
                        Gender,
                        Date_Of_Birth,
                        Age,
                        Blood_Group,
                        null,
                        null};
                if ((parentGUARDIANRowByfk_PATIENT_PRIVATE_DETAIL != null)) {
                    columnValuesArray[6] = parentGUARDIANRowByfk_PATIENT_PRIVATE_DETAIL[1];
                }
                if ((parentSPECIALIST_DOCTORRowByFK__PATIENT_P__Speci__5070F446 != null)) {
                    columnValuesArray[7] = parentSPECIALIST_DOCTORRowByFK__PATIENT_P__Speci__5070F446[1];
                }
                rowPATIENT_PRIVATE_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPATIENT_PRIVATE_DETAILRow);
                return rowPATIENT_PRIVATE_DETAILRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow FindByPatient_Id_Number(int Patient_Id_Number) {
                return ((PATIENT_PRIVATE_DETAILRow)(this.Rows.Find(new object[] {
                            Patient_Id_Number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PATIENT_PRIVATE_DETAILDataTable cln = ((PATIENT_PRIVATE_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PATIENT_PRIVATE_DETAILDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPatient_Id_Number = base.Columns["Patient_Id_Number"];
                this.columnPatient_Full_Name = base.Columns["Patient_Full_Name"];
                this.columnGender = base.Columns["Gender"];
                this.columnDate_Of_Birth = base.Columns["Date_Of_Birth"];
                this.columnAge = base.Columns["Age"];
                this.columnBlood_Group = base.Columns["Blood_Group"];
                this.columnGuardian_Id_Number = base.Columns["Guardian_Id_Number"];
                this.columnSpecialist_Doctor_Id = base.Columns["Specialist_Doctor_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPatient_Id_Number = new global::System.Data.DataColumn("Patient_Id_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatient_Id_Number);
                this.columnPatient_Full_Name = new global::System.Data.DataColumn("Patient_Full_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatient_Full_Name);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnDate_Of_Birth = new global::System.Data.DataColumn("Date_Of_Birth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_Of_Birth);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnBlood_Group = new global::System.Data.DataColumn("Blood_Group", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlood_Group);
                this.columnGuardian_Id_Number = new global::System.Data.DataColumn("Guardian_Id_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuardian_Id_Number);
                this.columnSpecialist_Doctor_Id = new global::System.Data.DataColumn("Specialist_Doctor_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialist_Doctor_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatient_Id_Number}, true));
                this.columnPatient_Id_Number.AutoIncrement = true;
                this.columnPatient_Id_Number.AutoIncrementSeed = -1;
                this.columnPatient_Id_Number.AutoIncrementStep = -1;
                this.columnPatient_Id_Number.AllowDBNull = false;
                this.columnPatient_Id_Number.ReadOnly = true;
                this.columnPatient_Id_Number.Unique = true;
                this.columnPatient_Full_Name.AllowDBNull = false;
                this.columnPatient_Full_Name.MaxLength = 200;
                this.columnGender.AllowDBNull = false;
                this.columnGender.MaxLength = 10;
                this.columnDate_Of_Birth.AllowDBNull = false;
                this.columnAge.AllowDBNull = false;
                this.columnBlood_Group.AllowDBNull = false;
                this.columnBlood_Group.MaxLength = 50;
                this.columnGuardian_Id_Number.AllowDBNull = false;
                this.columnGuardian_Id_Number.MaxLength = 8;
                this.columnSpecialist_Doctor_Id.AllowDBNull = false;
                this.columnSpecialist_Doctor_Id.MaxLength = 9;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow NewPATIENT_PRIVATE_DETAILRow() {
                return ((PATIENT_PRIVATE_DETAILRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PATIENT_PRIVATE_DETAILRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PATIENT_PRIVATE_DETAILRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PATIENT_PRIVATE_DETAILRowChanged != null)) {
                    this.PATIENT_PRIVATE_DETAILRowChanged(this, new PATIENT_PRIVATE_DETAILRowChangeEvent(((PATIENT_PRIVATE_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PATIENT_PRIVATE_DETAILRowChanging != null)) {
                    this.PATIENT_PRIVATE_DETAILRowChanging(this, new PATIENT_PRIVATE_DETAILRowChangeEvent(((PATIENT_PRIVATE_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PATIENT_PRIVATE_DETAILRowDeleted != null)) {
                    this.PATIENT_PRIVATE_DETAILRowDeleted(this, new PATIENT_PRIVATE_DETAILRowChangeEvent(((PATIENT_PRIVATE_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PATIENT_PRIVATE_DETAILRowDeleting != null)) {
                    this.PATIENT_PRIVATE_DETAILRowDeleting(this, new PATIENT_PRIVATE_DETAILRowChangeEvent(((PATIENT_PRIVATE_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePATIENT_PRIVATE_DETAILRow(PATIENT_PRIVATE_DETAILRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PATIENT_PRIVATE_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PHARMACY_MEDICINESDataTable : global::System.Data.TypedTableBase<PHARMACY_MEDICINESRow> {
            
            private global::System.Data.DataColumn columnPharmacy_Invoice_Number;
            
            private global::System.Data.DataColumn columnDrug_Code;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnNumber_Of_Days;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_MEDICINESDataTable() {
                this.TableName = "PHARMACY_MEDICINES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PHARMACY_MEDICINESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PHARMACY_MEDICINESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Pharmacy_Invoice_NumberColumn {
                get {
                    return this.columnPharmacy_Invoice_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Drug_CodeColumn {
                get {
                    return this.columnDrug_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Number_Of_DaysColumn {
                get {
                    return this.columnNumber_Of_Days;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_MEDICINESRow this[int index] {
                get {
                    return ((PHARMACY_MEDICINESRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PHARMACY_MEDICINESRowChangeEventHandler PHARMACY_MEDICINESRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PHARMACY_MEDICINESRowChangeEventHandler PHARMACY_MEDICINESRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PHARMACY_MEDICINESRowChangeEventHandler PHARMACY_MEDICINESRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PHARMACY_MEDICINESRowChangeEventHandler PHARMACY_MEDICINESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPHARMACY_MEDICINESRow(PHARMACY_MEDICINESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_MEDICINESRow AddPHARMACY_MEDICINESRow(HOSPITAL_CUSTOMERRow parentHOSPITAL_CUSTOMERRowByfk_PHARMACY_MEDICINES, DRUGRow parentDRUGRowByFK__PHARMACY___Drug___7C4F7684, int Quantity, int Number_Of_Days) {
                PHARMACY_MEDICINESRow rowPHARMACY_MEDICINESRow = ((PHARMACY_MEDICINESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Quantity,
                        Number_Of_Days};
                if ((parentHOSPITAL_CUSTOMERRowByfk_PHARMACY_MEDICINES != null)) {
                    columnValuesArray[0] = parentHOSPITAL_CUSTOMERRowByfk_PHARMACY_MEDICINES[1];
                }
                if ((parentDRUGRowByFK__PHARMACY___Drug___7C4F7684 != null)) {
                    columnValuesArray[1] = parentDRUGRowByFK__PHARMACY___Drug___7C4F7684[1];
                }
                rowPHARMACY_MEDICINESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPHARMACY_MEDICINESRow);
                return rowPHARMACY_MEDICINESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_MEDICINESRow FindByPharmacy_Invoice_NumberDrug_Code(string Pharmacy_Invoice_Number, string Drug_Code) {
                return ((PHARMACY_MEDICINESRow)(this.Rows.Find(new object[] {
                            Pharmacy_Invoice_Number,
                            Drug_Code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PHARMACY_MEDICINESDataTable cln = ((PHARMACY_MEDICINESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PHARMACY_MEDICINESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPharmacy_Invoice_Number = base.Columns["Pharmacy_Invoice_Number"];
                this.columnDrug_Code = base.Columns["Drug_Code"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnNumber_Of_Days = base.Columns["Number_Of_Days"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPharmacy_Invoice_Number = new global::System.Data.DataColumn("Pharmacy_Invoice_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPharmacy_Invoice_Number);
                this.columnDrug_Code = new global::System.Data.DataColumn("Drug_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrug_Code);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnNumber_Of_Days = new global::System.Data.DataColumn("Number_Of_Days", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber_Of_Days);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPharmacy_Invoice_Number,
                                this.columnDrug_Code}, true));
                this.columnPharmacy_Invoice_Number.AllowDBNull = false;
                this.columnPharmacy_Invoice_Number.MaxLength = 9;
                this.columnDrug_Code.AllowDBNull = false;
                this.columnDrug_Code.MaxLength = 11;
                this.columnQuantity.AllowDBNull = false;
                this.columnNumber_Of_Days.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_MEDICINESRow NewPHARMACY_MEDICINESRow() {
                return ((PHARMACY_MEDICINESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PHARMACY_MEDICINESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PHARMACY_MEDICINESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PHARMACY_MEDICINESRowChanged != null)) {
                    this.PHARMACY_MEDICINESRowChanged(this, new PHARMACY_MEDICINESRowChangeEvent(((PHARMACY_MEDICINESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PHARMACY_MEDICINESRowChanging != null)) {
                    this.PHARMACY_MEDICINESRowChanging(this, new PHARMACY_MEDICINESRowChangeEvent(((PHARMACY_MEDICINESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PHARMACY_MEDICINESRowDeleted != null)) {
                    this.PHARMACY_MEDICINESRowDeleted(this, new PHARMACY_MEDICINESRowChangeEvent(((PHARMACY_MEDICINESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PHARMACY_MEDICINESRowDeleting != null)) {
                    this.PHARMACY_MEDICINESRowDeleting(this, new PHARMACY_MEDICINESRowChangeEvent(((PHARMACY_MEDICINESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePHARMACY_MEDICINESRow(PHARMACY_MEDICINESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PHARMACY_MEDICINESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PHARMACY_STAFFDataTable : global::System.Data.TypedTableBase<PHARMACY_STAFFRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnPharmacy_Staff_Id;
            
            private global::System.Data.DataColumn columnP_Officer_First_Name;
            
            private global::System.Data.DataColumn columnP_Officer_Middle_Name;
            
            private global::System.Data.DataColumn columnP_Officer_Last_Name;
            
            private global::System.Data.DataColumn columnP_Officer_Address;
            
            private global::System.Data.DataColumn columnP_Officer_Tele_Number;
            
            private global::System.Data.DataColumn columnP_Officer_DOB;
            
            private global::System.Data.DataColumn columnP_Officer_Salary;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnP_Job_Start_Date;
            
            private global::System.Data.DataColumn columnRoll_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_STAFFDataTable() {
                this.TableName = "PHARMACY_STAFF";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PHARMACY_STAFFDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PHARMACY_STAFFDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Pharmacy_Staff_IdColumn {
                get {
                    return this.columnPharmacy_Staff_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P_Officer_First_NameColumn {
                get {
                    return this.columnP_Officer_First_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P_Officer_Middle_NameColumn {
                get {
                    return this.columnP_Officer_Middle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P_Officer_Last_NameColumn {
                get {
                    return this.columnP_Officer_Last_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P_Officer_AddressColumn {
                get {
                    return this.columnP_Officer_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P_Officer_Tele_NumberColumn {
                get {
                    return this.columnP_Officer_Tele_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P_Officer_DOBColumn {
                get {
                    return this.columnP_Officer_DOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P_Officer_SalaryColumn {
                get {
                    return this.columnP_Officer_Salary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P_Job_Start_DateColumn {
                get {
                    return this.columnP_Job_Start_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Roll_IdColumn {
                get {
                    return this.columnRoll_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_STAFFRow this[int index] {
                get {
                    return ((PHARMACY_STAFFRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PHARMACY_STAFFRowChangeEventHandler PHARMACY_STAFFRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PHARMACY_STAFFRowChangeEventHandler PHARMACY_STAFFRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PHARMACY_STAFFRowChangeEventHandler PHARMACY_STAFFRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PHARMACY_STAFFRowChangeEventHandler PHARMACY_STAFFRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPHARMACY_STAFFRow(PHARMACY_STAFFRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_STAFFRow AddPHARMACY_STAFFRow(string Pharmacy_Staff_Id, string P_Officer_First_Name, string P_Officer_Middle_Name, string P_Officer_Last_Name, string P_Officer_Address, int P_Officer_Tele_Number, System.DateTime P_Officer_DOB, decimal P_Officer_Salary, string Designation, System.DateTime P_Job_Start_Date, ACCOUNTRow parentACCOUNTRowByfk_PHARMACY_STAFF) {
                PHARMACY_STAFFRow rowPHARMACY_STAFFRow = ((PHARMACY_STAFFRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Pharmacy_Staff_Id,
                        P_Officer_First_Name,
                        P_Officer_Middle_Name,
                        P_Officer_Last_Name,
                        P_Officer_Address,
                        P_Officer_Tele_Number,
                        P_Officer_DOB,
                        P_Officer_Salary,
                        Designation,
                        P_Job_Start_Date,
                        null};
                if ((parentACCOUNTRowByfk_PHARMACY_STAFF != null)) {
                    columnValuesArray[11] = parentACCOUNTRowByfk_PHARMACY_STAFF[1];
                }
                rowPHARMACY_STAFFRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPHARMACY_STAFFRow);
                return rowPHARMACY_STAFFRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PHARMACY_STAFFDataTable cln = ((PHARMACY_STAFFDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PHARMACY_STAFFDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnPharmacy_Staff_Id = base.Columns["Pharmacy_Staff_Id"];
                this.columnP_Officer_First_Name = base.Columns["P_Officer_First_Name"];
                this.columnP_Officer_Middle_Name = base.Columns["P_Officer_Middle_Name"];
                this.columnP_Officer_Last_Name = base.Columns["P_Officer_Last_Name"];
                this.columnP_Officer_Address = base.Columns["P_Officer_Address"];
                this.columnP_Officer_Tele_Number = base.Columns["P_Officer_Tele_Number"];
                this.columnP_Officer_DOB = base.Columns["P_Officer_DOB"];
                this.columnP_Officer_Salary = base.Columns["P_Officer_Salary"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnP_Job_Start_Date = base.Columns["P_Job_Start_Date"];
                this.columnRoll_Id = base.Columns["Roll_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnPharmacy_Staff_Id = new global::System.Data.DataColumn("Pharmacy_Staff_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPharmacy_Staff_Id);
                this.columnP_Officer_First_Name = new global::System.Data.DataColumn("P_Officer_First_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_Officer_First_Name);
                this.columnP_Officer_Middle_Name = new global::System.Data.DataColumn("P_Officer_Middle_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_Officer_Middle_Name);
                this.columnP_Officer_Last_Name = new global::System.Data.DataColumn("P_Officer_Last_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_Officer_Last_Name);
                this.columnP_Officer_Address = new global::System.Data.DataColumn("P_Officer_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_Officer_Address);
                this.columnP_Officer_Tele_Number = new global::System.Data.DataColumn("P_Officer_Tele_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_Officer_Tele_Number);
                this.columnP_Officer_DOB = new global::System.Data.DataColumn("P_Officer_DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_Officer_DOB);
                this.columnP_Officer_Salary = new global::System.Data.DataColumn("P_Officer_Salary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_Officer_Salary);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnP_Job_Start_Date = new global::System.Data.DataColumn("P_Job_Start_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_Job_Start_Date);
                this.columnRoll_Id = new global::System.Data.DataColumn("Roll_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPharmacy_Staff_Id}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnPharmacy_Staff_Id.ReadOnly = true;
                this.columnPharmacy_Staff_Id.Unique = true;
                this.columnPharmacy_Staff_Id.MaxLength = 8;
                this.columnP_Officer_First_Name.AllowDBNull = false;
                this.columnP_Officer_First_Name.MaxLength = 200;
                this.columnP_Officer_Middle_Name.MaxLength = 200;
                this.columnP_Officer_Last_Name.AllowDBNull = false;
                this.columnP_Officer_Last_Name.MaxLength = 200;
                this.columnP_Officer_Address.AllowDBNull = false;
                this.columnP_Officer_Address.MaxLength = 150;
                this.columnP_Officer_Tele_Number.AllowDBNull = false;
                this.columnP_Officer_DOB.AllowDBNull = false;
                this.columnP_Officer_Salary.AllowDBNull = false;
                this.columnDesignation.AllowDBNull = false;
                this.columnDesignation.MaxLength = 30;
                this.columnP_Job_Start_Date.AllowDBNull = false;
                this.columnRoll_Id.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_STAFFRow NewPHARMACY_STAFFRow() {
                return ((PHARMACY_STAFFRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PHARMACY_STAFFRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PHARMACY_STAFFRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PHARMACY_STAFFRowChanged != null)) {
                    this.PHARMACY_STAFFRowChanged(this, new PHARMACY_STAFFRowChangeEvent(((PHARMACY_STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PHARMACY_STAFFRowChanging != null)) {
                    this.PHARMACY_STAFFRowChanging(this, new PHARMACY_STAFFRowChangeEvent(((PHARMACY_STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PHARMACY_STAFFRowDeleted != null)) {
                    this.PHARMACY_STAFFRowDeleted(this, new PHARMACY_STAFFRowChangeEvent(((PHARMACY_STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PHARMACY_STAFFRowDeleting != null)) {
                    this.PHARMACY_STAFFRowDeleting(this, new PHARMACY_STAFFRowChangeEvent(((PHARMACY_STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePHARMACY_STAFFRow(PHARMACY_STAFFRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PHARMACY_STAFFDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QUALIFICATIONDataTable : global::System.Data.TypedTableBase<QUALIFICATIONRow> {
            
            private global::System.Data.DataColumn columnSpecialist_Doctor_Id;
            
            private global::System.Data.DataColumn columnQualification;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public QUALIFICATIONDataTable() {
                this.TableName = "QUALIFICATION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal QUALIFICATIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected QUALIFICATIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Specialist_Doctor_IdColumn {
                get {
                    return this.columnSpecialist_Doctor_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QualificationColumn {
                get {
                    return this.columnQualification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public QUALIFICATIONRow this[int index] {
                get {
                    return ((QUALIFICATIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event QUALIFICATIONRowChangeEventHandler QUALIFICATIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event QUALIFICATIONRowChangeEventHandler QUALIFICATIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event QUALIFICATIONRowChangeEventHandler QUALIFICATIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event QUALIFICATIONRowChangeEventHandler QUALIFICATIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddQUALIFICATIONRow(QUALIFICATIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public QUALIFICATIONRow AddQUALIFICATIONRow(SPECIALIST_DOCTORRow parentSPECIALIST_DOCTORRowByfk_QUALIFICATION, string Qualification) {
                QUALIFICATIONRow rowQUALIFICATIONRow = ((QUALIFICATIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Qualification};
                if ((parentSPECIALIST_DOCTORRowByfk_QUALIFICATION != null)) {
                    columnValuesArray[0] = parentSPECIALIST_DOCTORRowByfk_QUALIFICATION[1];
                }
                rowQUALIFICATIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQUALIFICATIONRow);
                return rowQUALIFICATIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public QUALIFICATIONRow FindBySpecialist_Doctor_IdQualification(string Specialist_Doctor_Id, string Qualification) {
                return ((QUALIFICATIONRow)(this.Rows.Find(new object[] {
                            Specialist_Doctor_Id,
                            Qualification})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QUALIFICATIONDataTable cln = ((QUALIFICATIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QUALIFICATIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSpecialist_Doctor_Id = base.Columns["Specialist_Doctor_Id"];
                this.columnQualification = base.Columns["Qualification"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSpecialist_Doctor_Id = new global::System.Data.DataColumn("Specialist_Doctor_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialist_Doctor_Id);
                this.columnQualification = new global::System.Data.DataColumn("Qualification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQualification);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSpecialist_Doctor_Id,
                                this.columnQualification}, true));
                this.columnSpecialist_Doctor_Id.AllowDBNull = false;
                this.columnSpecialist_Doctor_Id.MaxLength = 9;
                this.columnQualification.AllowDBNull = false;
                this.columnQualification.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public QUALIFICATIONRow NewQUALIFICATIONRow() {
                return ((QUALIFICATIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QUALIFICATIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QUALIFICATIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QUALIFICATIONRowChanged != null)) {
                    this.QUALIFICATIONRowChanged(this, new QUALIFICATIONRowChangeEvent(((QUALIFICATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QUALIFICATIONRowChanging != null)) {
                    this.QUALIFICATIONRowChanging(this, new QUALIFICATIONRowChangeEvent(((QUALIFICATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QUALIFICATIONRowDeleted != null)) {
                    this.QUALIFICATIONRowDeleted(this, new QUALIFICATIONRowChangeEvent(((QUALIFICATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QUALIFICATIONRowDeleting != null)) {
                    this.QUALIFICATIONRowDeleting(this, new QUALIFICATIONRowChangeEvent(((QUALIFICATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveQUALIFICATIONRow(QUALIFICATIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QUALIFICATIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class REPORT_IN_PATIENTDataTable : global::System.Data.TypedTableBase<REPORT_IN_PATIENTRow> {
            
            private global::System.Data.DataColumn columnAdmission_Number;
            
            private global::System.Data.DataColumn columnIn_Patient_Report_No;
            
            private global::System.Data.DataColumn columnIn_Patient_Xray_No;
            
            private global::System.Data.DataColumn columnIn_Patient_Scan_No;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_IN_PATIENTDataTable() {
                this.TableName = "REPORT_IN_PATIENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal REPORT_IN_PATIENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected REPORT_IN_PATIENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Admission_NumberColumn {
                get {
                    return this.columnAdmission_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn In_Patient_Report_NoColumn {
                get {
                    return this.columnIn_Patient_Report_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn In_Patient_Xray_NoColumn {
                get {
                    return this.columnIn_Patient_Xray_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn In_Patient_Scan_NoColumn {
                get {
                    return this.columnIn_Patient_Scan_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_IN_PATIENTRow this[int index] {
                get {
                    return ((REPORT_IN_PATIENTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event REPORT_IN_PATIENTRowChangeEventHandler REPORT_IN_PATIENTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event REPORT_IN_PATIENTRowChangeEventHandler REPORT_IN_PATIENTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event REPORT_IN_PATIENTRowChangeEventHandler REPORT_IN_PATIENTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event REPORT_IN_PATIENTRowChangeEventHandler REPORT_IN_PATIENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddREPORT_IN_PATIENTRow(REPORT_IN_PATIENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_IN_PATIENTRow AddREPORT_IN_PATIENTRow(IN_PATIENTRow parentIN_PATIENTRowByfk_REPORT_IN_PATIENT, IN_PATIENT_REPORTRow parentIN_PATIENT_REPORTRowByFK__REPORT_IN__In_Pa__2EDAF651, IN_PATIENT_XRAYRow parentIN_PATIENT_XRAYRowByFK__REPORT_IN__In_Pa__2FCF1A8A, IN_PATIENT_SCANRow parentIN_PATIENT_SCANRowByFK__REPORT_IN__In_Pa__30C33EC3) {
                REPORT_IN_PATIENTRow rowREPORT_IN_PATIENTRow = ((REPORT_IN_PATIENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null};
                if ((parentIN_PATIENTRowByfk_REPORT_IN_PATIENT != null)) {
                    columnValuesArray[0] = parentIN_PATIENTRowByfk_REPORT_IN_PATIENT[1];
                }
                if ((parentIN_PATIENT_REPORTRowByFK__REPORT_IN__In_Pa__2EDAF651 != null)) {
                    columnValuesArray[1] = parentIN_PATIENT_REPORTRowByFK__REPORT_IN__In_Pa__2EDAF651[1];
                }
                if ((parentIN_PATIENT_XRAYRowByFK__REPORT_IN__In_Pa__2FCF1A8A != null)) {
                    columnValuesArray[2] = parentIN_PATIENT_XRAYRowByFK__REPORT_IN__In_Pa__2FCF1A8A[1];
                }
                if ((parentIN_PATIENT_SCANRowByFK__REPORT_IN__In_Pa__30C33EC3 != null)) {
                    columnValuesArray[3] = parentIN_PATIENT_SCANRowByFK__REPORT_IN__In_Pa__30C33EC3[1];
                }
                rowREPORT_IN_PATIENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowREPORT_IN_PATIENTRow);
                return rowREPORT_IN_PATIENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_IN_PATIENTRow FindByAdmission_NumberIn_Patient_Report_No(string Admission_Number, string In_Patient_Report_No) {
                return ((REPORT_IN_PATIENTRow)(this.Rows.Find(new object[] {
                            Admission_Number,
                            In_Patient_Report_No})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                REPORT_IN_PATIENTDataTable cln = ((REPORT_IN_PATIENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new REPORT_IN_PATIENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnAdmission_Number = base.Columns["Admission_Number"];
                this.columnIn_Patient_Report_No = base.Columns["In_Patient_Report_No"];
                this.columnIn_Patient_Xray_No = base.Columns["In_Patient_Xray_No"];
                this.columnIn_Patient_Scan_No = base.Columns["In_Patient_Scan_No"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnAdmission_Number = new global::System.Data.DataColumn("Admission_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_Number);
                this.columnIn_Patient_Report_No = new global::System.Data.DataColumn("In_Patient_Report_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIn_Patient_Report_No);
                this.columnIn_Patient_Xray_No = new global::System.Data.DataColumn("In_Patient_Xray_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIn_Patient_Xray_No);
                this.columnIn_Patient_Scan_No = new global::System.Data.DataColumn("In_Patient_Scan_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIn_Patient_Scan_No);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAdmission_Number,
                                this.columnIn_Patient_Report_No}, true));
                this.columnAdmission_Number.AllowDBNull = false;
                this.columnAdmission_Number.MaxLength = 9;
                this.columnIn_Patient_Report_No.AllowDBNull = false;
                this.columnIn_Patient_Report_No.MaxLength = 9;
                this.columnIn_Patient_Xray_No.MaxLength = 9;
                this.columnIn_Patient_Scan_No.MaxLength = 9;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_IN_PATIENTRow NewREPORT_IN_PATIENTRow() {
                return ((REPORT_IN_PATIENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new REPORT_IN_PATIENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(REPORT_IN_PATIENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.REPORT_IN_PATIENTRowChanged != null)) {
                    this.REPORT_IN_PATIENTRowChanged(this, new REPORT_IN_PATIENTRowChangeEvent(((REPORT_IN_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.REPORT_IN_PATIENTRowChanging != null)) {
                    this.REPORT_IN_PATIENTRowChanging(this, new REPORT_IN_PATIENTRowChangeEvent(((REPORT_IN_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.REPORT_IN_PATIENTRowDeleted != null)) {
                    this.REPORT_IN_PATIENTRowDeleted(this, new REPORT_IN_PATIENTRowChangeEvent(((REPORT_IN_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.REPORT_IN_PATIENTRowDeleting != null)) {
                    this.REPORT_IN_PATIENTRowDeleting(this, new REPORT_IN_PATIENTRowChangeEvent(((REPORT_IN_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveREPORT_IN_PATIENTRow(REPORT_IN_PATIENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "REPORT_IN_PATIENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class REPORT_OUT_PATIENTDataTable : global::System.Data.TypedTableBase<REPORT_OUT_PATIENTRow> {
            
            private global::System.Data.DataColumn columnOut_Patient_Id_Number;
            
            private global::System.Data.DataColumn columnOut_Patient_Report_No;
            
            private global::System.Data.DataColumn columnOut_Patient_Xray_No;
            
            private global::System.Data.DataColumn columnOut_Patient_Scan_No;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_OUT_PATIENTDataTable() {
                this.TableName = "REPORT_OUT_PATIENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal REPORT_OUT_PATIENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected REPORT_OUT_PATIENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Out_Patient_Id_NumberColumn {
                get {
                    return this.columnOut_Patient_Id_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Out_Patient_Report_NoColumn {
                get {
                    return this.columnOut_Patient_Report_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Out_Patient_Xray_NoColumn {
                get {
                    return this.columnOut_Patient_Xray_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Out_Patient_Scan_NoColumn {
                get {
                    return this.columnOut_Patient_Scan_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_OUT_PATIENTRow this[int index] {
                get {
                    return ((REPORT_OUT_PATIENTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event REPORT_OUT_PATIENTRowChangeEventHandler REPORT_OUT_PATIENTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event REPORT_OUT_PATIENTRowChangeEventHandler REPORT_OUT_PATIENTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event REPORT_OUT_PATIENTRowChangeEventHandler REPORT_OUT_PATIENTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event REPORT_OUT_PATIENTRowChangeEventHandler REPORT_OUT_PATIENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddREPORT_OUT_PATIENTRow(REPORT_OUT_PATIENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_OUT_PATIENTRow AddREPORT_OUT_PATIENTRow(OUT_PATIENTRow parentOUT_PATIENTRowByfk_REPORT_OUT_PATIENT, OUT_PATIENT_REPORTRow parentOUT_PATIENT_REPORTRowByFK__REPORT_OU__Out_P__3493CFA7, OUT_PATIENT_XRAYRow parentOUT_PATIENT_XRAYRowByFK__REPORT_OU__Out_P__3587F3E0, OUT_PATIENT_SCANRow parentOUT_PATIENT_SCANRowByFK__REPORT_OU__Out_P__367C1819) {
                REPORT_OUT_PATIENTRow rowREPORT_OUT_PATIENTRow = ((REPORT_OUT_PATIENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null};
                if ((parentOUT_PATIENTRowByfk_REPORT_OUT_PATIENT != null)) {
                    columnValuesArray[0] = parentOUT_PATIENTRowByfk_REPORT_OUT_PATIENT[0];
                }
                if ((parentOUT_PATIENT_REPORTRowByFK__REPORT_OU__Out_P__3493CFA7 != null)) {
                    columnValuesArray[1] = parentOUT_PATIENT_REPORTRowByFK__REPORT_OU__Out_P__3493CFA7[1];
                }
                if ((parentOUT_PATIENT_XRAYRowByFK__REPORT_OU__Out_P__3587F3E0 != null)) {
                    columnValuesArray[2] = parentOUT_PATIENT_XRAYRowByFK__REPORT_OU__Out_P__3587F3E0[1];
                }
                if ((parentOUT_PATIENT_SCANRowByFK__REPORT_OU__Out_P__367C1819 != null)) {
                    columnValuesArray[3] = parentOUT_PATIENT_SCANRowByFK__REPORT_OU__Out_P__367C1819[1];
                }
                rowREPORT_OUT_PATIENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowREPORT_OUT_PATIENTRow);
                return rowREPORT_OUT_PATIENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_OUT_PATIENTRow FindByOut_Patient_Id_NumberOut_Patient_Report_No(int Out_Patient_Id_Number, string Out_Patient_Report_No) {
                return ((REPORT_OUT_PATIENTRow)(this.Rows.Find(new object[] {
                            Out_Patient_Id_Number,
                            Out_Patient_Report_No})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                REPORT_OUT_PATIENTDataTable cln = ((REPORT_OUT_PATIENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new REPORT_OUT_PATIENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnOut_Patient_Id_Number = base.Columns["Out_Patient_Id_Number"];
                this.columnOut_Patient_Report_No = base.Columns["Out_Patient_Report_No"];
                this.columnOut_Patient_Xray_No = base.Columns["Out_Patient_Xray_No"];
                this.columnOut_Patient_Scan_No = base.Columns["Out_Patient_Scan_No"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnOut_Patient_Id_Number = new global::System.Data.DataColumn("Out_Patient_Id_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOut_Patient_Id_Number);
                this.columnOut_Patient_Report_No = new global::System.Data.DataColumn("Out_Patient_Report_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOut_Patient_Report_No);
                this.columnOut_Patient_Xray_No = new global::System.Data.DataColumn("Out_Patient_Xray_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOut_Patient_Xray_No);
                this.columnOut_Patient_Scan_No = new global::System.Data.DataColumn("Out_Patient_Scan_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOut_Patient_Scan_No);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOut_Patient_Id_Number,
                                this.columnOut_Patient_Report_No}, true));
                this.columnOut_Patient_Id_Number.AllowDBNull = false;
                this.columnOut_Patient_Report_No.AllowDBNull = false;
                this.columnOut_Patient_Report_No.MaxLength = 9;
                this.columnOut_Patient_Xray_No.MaxLength = 9;
                this.columnOut_Patient_Scan_No.MaxLength = 9;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_OUT_PATIENTRow NewREPORT_OUT_PATIENTRow() {
                return ((REPORT_OUT_PATIENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new REPORT_OUT_PATIENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(REPORT_OUT_PATIENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.REPORT_OUT_PATIENTRowChanged != null)) {
                    this.REPORT_OUT_PATIENTRowChanged(this, new REPORT_OUT_PATIENTRowChangeEvent(((REPORT_OUT_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.REPORT_OUT_PATIENTRowChanging != null)) {
                    this.REPORT_OUT_PATIENTRowChanging(this, new REPORT_OUT_PATIENTRowChangeEvent(((REPORT_OUT_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.REPORT_OUT_PATIENTRowDeleted != null)) {
                    this.REPORT_OUT_PATIENTRowDeleted(this, new REPORT_OUT_PATIENTRowChangeEvent(((REPORT_OUT_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.REPORT_OUT_PATIENTRowDeleting != null)) {
                    this.REPORT_OUT_PATIENTRowDeleting(this, new REPORT_OUT_PATIENTRowChangeEvent(((REPORT_OUT_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveREPORT_OUT_PATIENTRow(REPORT_OUT_PATIENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "REPORT_OUT_PATIENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ROOMDataTable : global::System.Data.TypedTableBase<ROOMRow> {
            
            private global::System.Data.DataColumn columnRoom_Number;
            
            private global::System.Data.DataColumn columnRoom_Name;
            
            private global::System.Data.DataColumn columnRoom_Type;
            
            private global::System.Data.DataColumn columnRoom_Availability;
            
            private global::System.Data.DataColumn columnWard_Number;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROOMDataTable() {
                this.TableName = "ROOM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ROOMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ROOMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Room_NumberColumn {
                get {
                    return this.columnRoom_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Room_NameColumn {
                get {
                    return this.columnRoom_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Room_TypeColumn {
                get {
                    return this.columnRoom_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Room_AvailabilityColumn {
                get {
                    return this.columnRoom_Availability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ward_NumberColumn {
                get {
                    return this.columnWard_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROOMRow this[int index] {
                get {
                    return ((ROOMRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ROOMRowChangeEventHandler ROOMRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ROOMRowChangeEventHandler ROOMRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ROOMRowChangeEventHandler ROOMRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ROOMRowChangeEventHandler ROOMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddROOMRow(ROOMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROOMRow AddROOMRow(string Room_Number, string Room_Name, string Room_Type, string Room_Availability, WARDRow parentWARDRowByfk_ROOM) {
                ROOMRow rowROOMRow = ((ROOMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Room_Number,
                        Room_Name,
                        Room_Type,
                        Room_Availability,
                        null};
                if ((parentWARDRowByfk_ROOM != null)) {
                    columnValuesArray[4] = parentWARDRowByfk_ROOM[0];
                }
                rowROOMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowROOMRow);
                return rowROOMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROOMRow FindByRoom_Number(string Room_Number) {
                return ((ROOMRow)(this.Rows.Find(new object[] {
                            Room_Number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ROOMDataTable cln = ((ROOMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ROOMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnRoom_Number = base.Columns["Room_Number"];
                this.columnRoom_Name = base.Columns["Room_Name"];
                this.columnRoom_Type = base.Columns["Room_Type"];
                this.columnRoom_Availability = base.Columns["Room_Availability"];
                this.columnWard_Number = base.Columns["Ward_Number"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnRoom_Number = new global::System.Data.DataColumn("Room_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoom_Number);
                this.columnRoom_Name = new global::System.Data.DataColumn("Room_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoom_Name);
                this.columnRoom_Type = new global::System.Data.DataColumn("Room_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoom_Type);
                this.columnRoom_Availability = new global::System.Data.DataColumn("Room_Availability", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoom_Availability);
                this.columnWard_Number = new global::System.Data.DataColumn("Ward_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWard_Number);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRoom_Number}, true));
                this.columnRoom_Number.AllowDBNull = false;
                this.columnRoom_Number.Unique = true;
                this.columnRoom_Number.MaxLength = 10;
                this.columnRoom_Name.AllowDBNull = false;
                this.columnRoom_Name.MaxLength = 70;
                this.columnRoom_Type.AllowDBNull = false;
                this.columnRoom_Type.MaxLength = 90;
                this.columnRoom_Availability.AllowDBNull = false;
                this.columnRoom_Availability.MaxLength = 10;
                this.columnWard_Number.AllowDBNull = false;
                this.columnWard_Number.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROOMRow NewROOMRow() {
                return ((ROOMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ROOMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ROOMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ROOMRowChanged != null)) {
                    this.ROOMRowChanged(this, new ROOMRowChangeEvent(((ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ROOMRowChanging != null)) {
                    this.ROOMRowChanging(this, new ROOMRowChangeEvent(((ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ROOMRowDeleted != null)) {
                    this.ROOMRowDeleted(this, new ROOMRowChangeEvent(((ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ROOMRowDeleting != null)) {
                    this.ROOMRowDeleting(this, new ROOMRowChangeEvent(((ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveROOMRow(ROOMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ROOMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SCAN_ROOMDataTable : global::System.Data.TypedTableBase<SCAN_ROOMRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnS_Staff_Id;
            
            private global::System.Data.DataColumn columnS_Officer_First_Name;
            
            private global::System.Data.DataColumn columnS_Officer_Middle_Name;
            
            private global::System.Data.DataColumn columnS_Officer_Last_Name;
            
            private global::System.Data.DataColumn columnS_Officer_Address;
            
            private global::System.Data.DataColumn columnS_Officer_Tele_Number;
            
            private global::System.Data.DataColumn columnS_Officer_DOB;
            
            private global::System.Data.DataColumn columnS_Officer_Salary;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnS_Job_Start_Date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SCAN_ROOMDataTable() {
                this.TableName = "SCAN_ROOM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SCAN_ROOMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SCAN_ROOMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Staff_IdColumn {
                get {
                    return this.columnS_Staff_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Officer_First_NameColumn {
                get {
                    return this.columnS_Officer_First_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Officer_Middle_NameColumn {
                get {
                    return this.columnS_Officer_Middle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Officer_Last_NameColumn {
                get {
                    return this.columnS_Officer_Last_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Officer_AddressColumn {
                get {
                    return this.columnS_Officer_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Officer_Tele_NumberColumn {
                get {
                    return this.columnS_Officer_Tele_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Officer_DOBColumn {
                get {
                    return this.columnS_Officer_DOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Officer_SalaryColumn {
                get {
                    return this.columnS_Officer_Salary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Job_Start_DateColumn {
                get {
                    return this.columnS_Job_Start_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SCAN_ROOMRow this[int index] {
                get {
                    return ((SCAN_ROOMRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SCAN_ROOMRowChangeEventHandler SCAN_ROOMRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SCAN_ROOMRowChangeEventHandler SCAN_ROOMRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SCAN_ROOMRowChangeEventHandler SCAN_ROOMRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SCAN_ROOMRowChangeEventHandler SCAN_ROOMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSCAN_ROOMRow(SCAN_ROOMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SCAN_ROOMRow AddSCAN_ROOMRow(string S_Staff_Id, string S_Officer_First_Name, string S_Officer_Middle_Name, string S_Officer_Last_Name, string S_Officer_Address, int S_Officer_Tele_Number, System.DateTime S_Officer_DOB, decimal S_Officer_Salary, string Designation, System.DateTime S_Job_Start_Date) {
                SCAN_ROOMRow rowSCAN_ROOMRow = ((SCAN_ROOMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        S_Staff_Id,
                        S_Officer_First_Name,
                        S_Officer_Middle_Name,
                        S_Officer_Last_Name,
                        S_Officer_Address,
                        S_Officer_Tele_Number,
                        S_Officer_DOB,
                        S_Officer_Salary,
                        Designation,
                        S_Job_Start_Date};
                rowSCAN_ROOMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSCAN_ROOMRow);
                return rowSCAN_ROOMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SCAN_ROOMDataTable cln = ((SCAN_ROOMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SCAN_ROOMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnS_Staff_Id = base.Columns["S_Staff_Id"];
                this.columnS_Officer_First_Name = base.Columns["S_Officer_First_Name"];
                this.columnS_Officer_Middle_Name = base.Columns["S_Officer_Middle_Name"];
                this.columnS_Officer_Last_Name = base.Columns["S_Officer_Last_Name"];
                this.columnS_Officer_Address = base.Columns["S_Officer_Address"];
                this.columnS_Officer_Tele_Number = base.Columns["S_Officer_Tele_Number"];
                this.columnS_Officer_DOB = base.Columns["S_Officer_DOB"];
                this.columnS_Officer_Salary = base.Columns["S_Officer_Salary"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnS_Job_Start_Date = base.Columns["S_Job_Start_Date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnS_Staff_Id = new global::System.Data.DataColumn("S_Staff_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Staff_Id);
                this.columnS_Officer_First_Name = new global::System.Data.DataColumn("S_Officer_First_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Officer_First_Name);
                this.columnS_Officer_Middle_Name = new global::System.Data.DataColumn("S_Officer_Middle_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Officer_Middle_Name);
                this.columnS_Officer_Last_Name = new global::System.Data.DataColumn("S_Officer_Last_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Officer_Last_Name);
                this.columnS_Officer_Address = new global::System.Data.DataColumn("S_Officer_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Officer_Address);
                this.columnS_Officer_Tele_Number = new global::System.Data.DataColumn("S_Officer_Tele_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Officer_Tele_Number);
                this.columnS_Officer_DOB = new global::System.Data.DataColumn("S_Officer_DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Officer_DOB);
                this.columnS_Officer_Salary = new global::System.Data.DataColumn("S_Officer_Salary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Officer_Salary);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnS_Job_Start_Date = new global::System.Data.DataColumn("S_Job_Start_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Job_Start_Date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnS_Staff_Id}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnS_Staff_Id.ReadOnly = true;
                this.columnS_Staff_Id.Unique = true;
                this.columnS_Staff_Id.MaxLength = 9;
                this.columnS_Officer_First_Name.AllowDBNull = false;
                this.columnS_Officer_First_Name.MaxLength = 200;
                this.columnS_Officer_Middle_Name.MaxLength = 200;
                this.columnS_Officer_Last_Name.AllowDBNull = false;
                this.columnS_Officer_Last_Name.MaxLength = 200;
                this.columnS_Officer_Address.AllowDBNull = false;
                this.columnS_Officer_Address.MaxLength = 150;
                this.columnS_Officer_Tele_Number.AllowDBNull = false;
                this.columnS_Officer_DOB.AllowDBNull = false;
                this.columnS_Officer_Salary.AllowDBNull = false;
                this.columnDesignation.AllowDBNull = false;
                this.columnDesignation.MaxLength = 30;
                this.columnS_Job_Start_Date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SCAN_ROOMRow NewSCAN_ROOMRow() {
                return ((SCAN_ROOMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SCAN_ROOMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SCAN_ROOMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SCAN_ROOMRowChanged != null)) {
                    this.SCAN_ROOMRowChanged(this, new SCAN_ROOMRowChangeEvent(((SCAN_ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SCAN_ROOMRowChanging != null)) {
                    this.SCAN_ROOMRowChanging(this, new SCAN_ROOMRowChangeEvent(((SCAN_ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SCAN_ROOMRowDeleted != null)) {
                    this.SCAN_ROOMRowDeleted(this, new SCAN_ROOMRowChangeEvent(((SCAN_ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SCAN_ROOMRowDeleting != null)) {
                    this.SCAN_ROOMRowDeleting(this, new SCAN_ROOMRowChangeEvent(((SCAN_ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSCAN_ROOMRow(SCAN_ROOMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SCAN_ROOMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SPECIALIST_DOCTORDataTable : global::System.Data.TypedTableBase<SPECIALIST_DOCTORRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnSpecialist_Doctor_Id;
            
            private global::System.Data.DataColumn columnSLMC_Reg_Number;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnS_Doctor_Name;
            
            private global::System.Data.DataColumn columnS_Field;
            
            private global::System.Data.DataColumn columnS_Doctor_Type;
            
            private global::System.Data.DataColumn columnS_Doctor_Address;
            
            private global::System.Data.DataColumn columnS_Doctor_Tele_Number;
            
            private global::System.Data.DataColumn columnS_Doctor_Monthly_Salary;
            
            private global::System.Data.DataColumn columnS_Doctor_Job_Start_Date;
            
            private global::System.Data.DataColumn columnWard_Number;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORDataTable() {
                this.TableName = "SPECIALIST_DOCTOR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SPECIALIST_DOCTORDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SPECIALIST_DOCTORDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Specialist_Doctor_IdColumn {
                get {
                    return this.columnSpecialist_Doctor_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SLMC_Reg_NumberColumn {
                get {
                    return this.columnSLMC_Reg_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Doctor_NameColumn {
                get {
                    return this.columnS_Doctor_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_FieldColumn {
                get {
                    return this.columnS_Field;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Doctor_TypeColumn {
                get {
                    return this.columnS_Doctor_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Doctor_AddressColumn {
                get {
                    return this.columnS_Doctor_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Doctor_Tele_NumberColumn {
                get {
                    return this.columnS_Doctor_Tele_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Doctor_Monthly_SalaryColumn {
                get {
                    return this.columnS_Doctor_Monthly_Salary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_Doctor_Job_Start_DateColumn {
                get {
                    return this.columnS_Doctor_Job_Start_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ward_NumberColumn {
                get {
                    return this.columnWard_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow this[int index] {
                get {
                    return ((SPECIALIST_DOCTORRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SPECIALIST_DOCTORRowChangeEventHandler SPECIALIST_DOCTORRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SPECIALIST_DOCTORRowChangeEventHandler SPECIALIST_DOCTORRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SPECIALIST_DOCTORRowChangeEventHandler SPECIALIST_DOCTORRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SPECIALIST_DOCTORRowChangeEventHandler SPECIALIST_DOCTORRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSPECIALIST_DOCTORRow(SPECIALIST_DOCTORRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow AddSPECIALIST_DOCTORRow(string Specialist_Doctor_Id, string SLMC_Reg_Number, string Title, string S_Doctor_Name, string S_Field, string S_Doctor_Type, string S_Doctor_Address, int S_Doctor_Tele_Number, decimal S_Doctor_Monthly_Salary, System.DateTime S_Doctor_Job_Start_Date, WARDRow parentWARDRowByfk_SPECIALIST_DOCTOR) {
                SPECIALIST_DOCTORRow rowSPECIALIST_DOCTORRow = ((SPECIALIST_DOCTORRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Specialist_Doctor_Id,
                        SLMC_Reg_Number,
                        Title,
                        S_Doctor_Name,
                        S_Field,
                        S_Doctor_Type,
                        S_Doctor_Address,
                        S_Doctor_Tele_Number,
                        S_Doctor_Monthly_Salary,
                        S_Doctor_Job_Start_Date,
                        null};
                if ((parentWARDRowByfk_SPECIALIST_DOCTOR != null)) {
                    columnValuesArray[11] = parentWARDRowByfk_SPECIALIST_DOCTOR[0];
                }
                rowSPECIALIST_DOCTORRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSPECIALIST_DOCTORRow);
                return rowSPECIALIST_DOCTORRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SPECIALIST_DOCTORDataTable cln = ((SPECIALIST_DOCTORDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SPECIALIST_DOCTORDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnSpecialist_Doctor_Id = base.Columns["Specialist_Doctor_Id"];
                this.columnSLMC_Reg_Number = base.Columns["SLMC_Reg_Number"];
                this.columnTitle = base.Columns["Title"];
                this.columnS_Doctor_Name = base.Columns["S_Doctor_Name"];
                this.columnS_Field = base.Columns["S_Field"];
                this.columnS_Doctor_Type = base.Columns["S_Doctor_Type"];
                this.columnS_Doctor_Address = base.Columns["S_Doctor_Address"];
                this.columnS_Doctor_Tele_Number = base.Columns["S_Doctor_Tele_Number"];
                this.columnS_Doctor_Monthly_Salary = base.Columns["S_Doctor_Monthly_Salary"];
                this.columnS_Doctor_Job_Start_Date = base.Columns["S_Doctor_Job_Start_Date"];
                this.columnWard_Number = base.Columns["Ward_Number"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnSpecialist_Doctor_Id = new global::System.Data.DataColumn("Specialist_Doctor_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialist_Doctor_Id);
                this.columnSLMC_Reg_Number = new global::System.Data.DataColumn("SLMC_Reg_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLMC_Reg_Number);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnS_Doctor_Name = new global::System.Data.DataColumn("S_Doctor_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Doctor_Name);
                this.columnS_Field = new global::System.Data.DataColumn("S_Field", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Field);
                this.columnS_Doctor_Type = new global::System.Data.DataColumn("S_Doctor_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Doctor_Type);
                this.columnS_Doctor_Address = new global::System.Data.DataColumn("S_Doctor_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Doctor_Address);
                this.columnS_Doctor_Tele_Number = new global::System.Data.DataColumn("S_Doctor_Tele_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Doctor_Tele_Number);
                this.columnS_Doctor_Monthly_Salary = new global::System.Data.DataColumn("S_Doctor_Monthly_Salary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Doctor_Monthly_Salary);
                this.columnS_Doctor_Job_Start_Date = new global::System.Data.DataColumn("S_Doctor_Job_Start_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_Doctor_Job_Start_Date);
                this.columnWard_Number = new global::System.Data.DataColumn("Ward_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWard_Number);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSpecialist_Doctor_Id}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnSpecialist_Doctor_Id.ReadOnly = true;
                this.columnSpecialist_Doctor_Id.Unique = true;
                this.columnSpecialist_Doctor_Id.MaxLength = 9;
                this.columnSLMC_Reg_Number.AllowDBNull = false;
                this.columnSLMC_Reg_Number.MaxLength = 20;
                this.columnTitle.AllowDBNull = false;
                this.columnTitle.MaxLength = 10;
                this.columnS_Doctor_Name.AllowDBNull = false;
                this.columnS_Doctor_Name.MaxLength = 50;
                this.columnS_Field.AllowDBNull = false;
                this.columnS_Field.MaxLength = 20;
                this.columnS_Doctor_Type.AllowDBNull = false;
                this.columnS_Doctor_Type.MaxLength = 20;
                this.columnS_Doctor_Address.AllowDBNull = false;
                this.columnS_Doctor_Address.MaxLength = 100;
                this.columnS_Doctor_Tele_Number.AllowDBNull = false;
                this.columnS_Doctor_Monthly_Salary.AllowDBNull = false;
                this.columnS_Doctor_Job_Start_Date.AllowDBNull = false;
                this.columnWard_Number.AllowDBNull = false;
                this.columnWard_Number.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow NewSPECIALIST_DOCTORRow() {
                return ((SPECIALIST_DOCTORRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SPECIALIST_DOCTORRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SPECIALIST_DOCTORRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SPECIALIST_DOCTORRowChanged != null)) {
                    this.SPECIALIST_DOCTORRowChanged(this, new SPECIALIST_DOCTORRowChangeEvent(((SPECIALIST_DOCTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SPECIALIST_DOCTORRowChanging != null)) {
                    this.SPECIALIST_DOCTORRowChanging(this, new SPECIALIST_DOCTORRowChangeEvent(((SPECIALIST_DOCTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SPECIALIST_DOCTORRowDeleted != null)) {
                    this.SPECIALIST_DOCTORRowDeleted(this, new SPECIALIST_DOCTORRowChangeEvent(((SPECIALIST_DOCTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SPECIALIST_DOCTORRowDeleting != null)) {
                    this.SPECIALIST_DOCTORRowDeleting(this, new SPECIALIST_DOCTORRowChangeEvent(((SPECIALIST_DOCTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSPECIALIST_DOCTORRow(SPECIALIST_DOCTORRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SPECIALIST_DOCTORDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WARDDataTable : global::System.Data.TypedTableBase<WARDRow> {
            
            private global::System.Data.DataColumn columnWard_Number;
            
            private global::System.Data.DataColumn columnWard_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARDDataTable() {
                this.TableName = "WARD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal WARDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected WARDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ward_NumberColumn {
                get {
                    return this.columnWard_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ward_NameColumn {
                get {
                    return this.columnWard_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARDRow this[int index] {
                get {
                    return ((WARDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WARDRowChangeEventHandler WARDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WARDRowChangeEventHandler WARDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WARDRowChangeEventHandler WARDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WARDRowChangeEventHandler WARDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddWARDRow(WARDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARDRow AddWARDRow(string Ward_Number, string Ward_Name) {
                WARDRow rowWARDRow = ((WARDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Ward_Number,
                        Ward_Name};
                rowWARDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWARDRow);
                return rowWARDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARDRow FindByWard_Number(string Ward_Number) {
                return ((WARDRow)(this.Rows.Find(new object[] {
                            Ward_Number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WARDDataTable cln = ((WARDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WARDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnWard_Number = base.Columns["Ward_Number"];
                this.columnWard_Name = base.Columns["Ward_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnWard_Number = new global::System.Data.DataColumn("Ward_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWard_Number);
                this.columnWard_Name = new global::System.Data.DataColumn("Ward_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWard_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWard_Number}, true));
                this.columnWard_Number.AllowDBNull = false;
                this.columnWard_Number.Unique = true;
                this.columnWard_Number.MaxLength = 10;
                this.columnWard_Name.AllowDBNull = false;
                this.columnWard_Name.MaxLength = 70;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARDRow NewWARDRow() {
                return ((WARDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WARDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WARDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WARDRowChanged != null)) {
                    this.WARDRowChanged(this, new WARDRowChangeEvent(((WARDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WARDRowChanging != null)) {
                    this.WARDRowChanging(this, new WARDRowChangeEvent(((WARDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WARDRowDeleted != null)) {
                    this.WARDRowDeleted(this, new WARDRowChangeEvent(((WARDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WARDRowDeleting != null)) {
                    this.WARDRowDeleting(this, new WARDRowChangeEvent(((WARDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveWARDRow(WARDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WARDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WARD_STAFFDataTable : global::System.Data.TypedTableBase<WARD_STAFFRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnWard_Staff_Id;
            
            private global::System.Data.DataColumn columnW_Officer_First_Name;
            
            private global::System.Data.DataColumn columnW_Officer_Middle_Name;
            
            private global::System.Data.DataColumn columnW_Officer_Last_Name;
            
            private global::System.Data.DataColumn columnW_Officer_Address;
            
            private global::System.Data.DataColumn columnW_Officer_Tele_Number;
            
            private global::System.Data.DataColumn columnW_Officer_DOB;
            
            private global::System.Data.DataColumn columnW_Officer_Salary;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnW_Job_Start_Date;
            
            private global::System.Data.DataColumn columnWard_Number;
            
            private global::System.Data.DataColumn columnRoll_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARD_STAFFDataTable() {
                this.TableName = "WARD_STAFF";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal WARD_STAFFDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected WARD_STAFFDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ward_Staff_IdColumn {
                get {
                    return this.columnWard_Staff_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn W_Officer_First_NameColumn {
                get {
                    return this.columnW_Officer_First_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn W_Officer_Middle_NameColumn {
                get {
                    return this.columnW_Officer_Middle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn W_Officer_Last_NameColumn {
                get {
                    return this.columnW_Officer_Last_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn W_Officer_AddressColumn {
                get {
                    return this.columnW_Officer_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn W_Officer_Tele_NumberColumn {
                get {
                    return this.columnW_Officer_Tele_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn W_Officer_DOBColumn {
                get {
                    return this.columnW_Officer_DOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn W_Officer_SalaryColumn {
                get {
                    return this.columnW_Officer_Salary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn W_Job_Start_DateColumn {
                get {
                    return this.columnW_Job_Start_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ward_NumberColumn {
                get {
                    return this.columnWard_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Roll_IdColumn {
                get {
                    return this.columnRoll_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARD_STAFFRow this[int index] {
                get {
                    return ((WARD_STAFFRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WARD_STAFFRowChangeEventHandler WARD_STAFFRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WARD_STAFFRowChangeEventHandler WARD_STAFFRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WARD_STAFFRowChangeEventHandler WARD_STAFFRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WARD_STAFFRowChangeEventHandler WARD_STAFFRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddWARD_STAFFRow(WARD_STAFFRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARD_STAFFRow AddWARD_STAFFRow(string Ward_Staff_Id, string W_Officer_First_Name, string W_Officer_Middle_Name, string W_Officer_Last_Name, string W_Officer_Address, int W_Officer_Tele_Number, System.DateTime W_Officer_DOB, decimal W_Officer_Salary, string Designation, System.DateTime W_Job_Start_Date, WARDRow parentWARDRowByfk_WARD_STAFF, ACCOUNTRow parentACCOUNTRowByFK__WARD_STAF__Roll___47DBAE45) {
                WARD_STAFFRow rowWARD_STAFFRow = ((WARD_STAFFRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Ward_Staff_Id,
                        W_Officer_First_Name,
                        W_Officer_Middle_Name,
                        W_Officer_Last_Name,
                        W_Officer_Address,
                        W_Officer_Tele_Number,
                        W_Officer_DOB,
                        W_Officer_Salary,
                        Designation,
                        W_Job_Start_Date,
                        null,
                        null};
                if ((parentWARDRowByfk_WARD_STAFF != null)) {
                    columnValuesArray[11] = parentWARDRowByfk_WARD_STAFF[0];
                }
                if ((parentACCOUNTRowByFK__WARD_STAF__Roll___47DBAE45 != null)) {
                    columnValuesArray[12] = parentACCOUNTRowByFK__WARD_STAF__Roll___47DBAE45[1];
                }
                rowWARD_STAFFRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWARD_STAFFRow);
                return rowWARD_STAFFRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WARD_STAFFDataTable cln = ((WARD_STAFFDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WARD_STAFFDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnWard_Staff_Id = base.Columns["Ward_Staff_Id"];
                this.columnW_Officer_First_Name = base.Columns["W_Officer_First_Name"];
                this.columnW_Officer_Middle_Name = base.Columns["W_Officer_Middle_Name"];
                this.columnW_Officer_Last_Name = base.Columns["W_Officer_Last_Name"];
                this.columnW_Officer_Address = base.Columns["W_Officer_Address"];
                this.columnW_Officer_Tele_Number = base.Columns["W_Officer_Tele_Number"];
                this.columnW_Officer_DOB = base.Columns["W_Officer_DOB"];
                this.columnW_Officer_Salary = base.Columns["W_Officer_Salary"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnW_Job_Start_Date = base.Columns["W_Job_Start_Date"];
                this.columnWard_Number = base.Columns["Ward_Number"];
                this.columnRoll_Id = base.Columns["Roll_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnWard_Staff_Id = new global::System.Data.DataColumn("Ward_Staff_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWard_Staff_Id);
                this.columnW_Officer_First_Name = new global::System.Data.DataColumn("W_Officer_First_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnW_Officer_First_Name);
                this.columnW_Officer_Middle_Name = new global::System.Data.DataColumn("W_Officer_Middle_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnW_Officer_Middle_Name);
                this.columnW_Officer_Last_Name = new global::System.Data.DataColumn("W_Officer_Last_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnW_Officer_Last_Name);
                this.columnW_Officer_Address = new global::System.Data.DataColumn("W_Officer_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnW_Officer_Address);
                this.columnW_Officer_Tele_Number = new global::System.Data.DataColumn("W_Officer_Tele_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnW_Officer_Tele_Number);
                this.columnW_Officer_DOB = new global::System.Data.DataColumn("W_Officer_DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnW_Officer_DOB);
                this.columnW_Officer_Salary = new global::System.Data.DataColumn("W_Officer_Salary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnW_Officer_Salary);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnW_Job_Start_Date = new global::System.Data.DataColumn("W_Job_Start_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnW_Job_Start_Date);
                this.columnWard_Number = new global::System.Data.DataColumn("Ward_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWard_Number);
                this.columnRoll_Id = new global::System.Data.DataColumn("Roll_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWard_Staff_Id}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnWard_Staff_Id.ReadOnly = true;
                this.columnWard_Staff_Id.Unique = true;
                this.columnWard_Staff_Id.MaxLength = 8;
                this.columnW_Officer_First_Name.AllowDBNull = false;
                this.columnW_Officer_First_Name.MaxLength = 200;
                this.columnW_Officer_Middle_Name.MaxLength = 200;
                this.columnW_Officer_Last_Name.AllowDBNull = false;
                this.columnW_Officer_Last_Name.MaxLength = 200;
                this.columnW_Officer_Address.AllowDBNull = false;
                this.columnW_Officer_Address.MaxLength = 150;
                this.columnW_Officer_Tele_Number.AllowDBNull = false;
                this.columnW_Officer_DOB.AllowDBNull = false;
                this.columnW_Officer_Salary.AllowDBNull = false;
                this.columnDesignation.AllowDBNull = false;
                this.columnDesignation.MaxLength = 30;
                this.columnW_Job_Start_Date.AllowDBNull = false;
                this.columnWard_Number.AllowDBNull = false;
                this.columnWard_Number.MaxLength = 10;
                this.columnRoll_Id.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARD_STAFFRow NewWARD_STAFFRow() {
                return ((WARD_STAFFRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WARD_STAFFRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WARD_STAFFRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WARD_STAFFRowChanged != null)) {
                    this.WARD_STAFFRowChanged(this, new WARD_STAFFRowChangeEvent(((WARD_STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WARD_STAFFRowChanging != null)) {
                    this.WARD_STAFFRowChanging(this, new WARD_STAFFRowChangeEvent(((WARD_STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WARD_STAFFRowDeleted != null)) {
                    this.WARD_STAFFRowDeleted(this, new WARD_STAFFRowChangeEvent(((WARD_STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WARD_STAFFRowDeleting != null)) {
                    this.WARD_STAFFRowDeleting(this, new WARD_STAFFRowChangeEvent(((WARD_STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveWARD_STAFFRow(WARD_STAFFRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WARD_STAFFDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class X_RAY_ROOMDataTable : global::System.Data.TypedTableBase<X_RAY_ROOMRow> {
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnStaff_Id;
            
            private global::System.Data.DataColumn columnX_Officer_First_Name;
            
            private global::System.Data.DataColumn columnX_Officer_Middle_Name;
            
            private global::System.Data.DataColumn columnX_Officer_Last_Name;
            
            private global::System.Data.DataColumn columnX_Officer_Address;
            
            private global::System.Data.DataColumn columnX_Officer_Tele_Number;
            
            private global::System.Data.DataColumn columnX_Officer_DOB;
            
            private global::System.Data.DataColumn columnX_Officer_Salary;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnX_Job_Start_Date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public X_RAY_ROOMDataTable() {
                this.TableName = "X_RAY_ROOM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal X_RAY_ROOMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected X_RAY_ROOMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Staff_IdColumn {
                get {
                    return this.columnStaff_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn X_Officer_First_NameColumn {
                get {
                    return this.columnX_Officer_First_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn X_Officer_Middle_NameColumn {
                get {
                    return this.columnX_Officer_Middle_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn X_Officer_Last_NameColumn {
                get {
                    return this.columnX_Officer_Last_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn X_Officer_AddressColumn {
                get {
                    return this.columnX_Officer_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn X_Officer_Tele_NumberColumn {
                get {
                    return this.columnX_Officer_Tele_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn X_Officer_DOBColumn {
                get {
                    return this.columnX_Officer_DOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn X_Officer_SalaryColumn {
                get {
                    return this.columnX_Officer_Salary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn X_Job_Start_DateColumn {
                get {
                    return this.columnX_Job_Start_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public X_RAY_ROOMRow this[int index] {
                get {
                    return ((X_RAY_ROOMRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event X_RAY_ROOMRowChangeEventHandler X_RAY_ROOMRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event X_RAY_ROOMRowChangeEventHandler X_RAY_ROOMRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event X_RAY_ROOMRowChangeEventHandler X_RAY_ROOMRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event X_RAY_ROOMRowChangeEventHandler X_RAY_ROOMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddX_RAY_ROOMRow(X_RAY_ROOMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public X_RAY_ROOMRow AddX_RAY_ROOMRow(string Staff_Id, string X_Officer_First_Name, string X_Officer_Middle_Name, string X_Officer_Last_Name, string X_Officer_Address, int X_Officer_Tele_Number, System.DateTime X_Officer_DOB, decimal X_Officer_Salary, string Designation, System.DateTime X_Job_Start_Date) {
                X_RAY_ROOMRow rowX_RAY_ROOMRow = ((X_RAY_ROOMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Staff_Id,
                        X_Officer_First_Name,
                        X_Officer_Middle_Name,
                        X_Officer_Last_Name,
                        X_Officer_Address,
                        X_Officer_Tele_Number,
                        X_Officer_DOB,
                        X_Officer_Salary,
                        Designation,
                        X_Job_Start_Date};
                rowX_RAY_ROOMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowX_RAY_ROOMRow);
                return rowX_RAY_ROOMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                X_RAY_ROOMDataTable cln = ((X_RAY_ROOMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new X_RAY_ROOMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumber = base.Columns["Number"];
                this.columnStaff_Id = base.Columns["Staff_Id"];
                this.columnX_Officer_First_Name = base.Columns["X_Officer_First_Name"];
                this.columnX_Officer_Middle_Name = base.Columns["X_Officer_Middle_Name"];
                this.columnX_Officer_Last_Name = base.Columns["X_Officer_Last_Name"];
                this.columnX_Officer_Address = base.Columns["X_Officer_Address"];
                this.columnX_Officer_Tele_Number = base.Columns["X_Officer_Tele_Number"];
                this.columnX_Officer_DOB = base.Columns["X_Officer_DOB"];
                this.columnX_Officer_Salary = base.Columns["X_Officer_Salary"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnX_Job_Start_Date = base.Columns["X_Job_Start_Date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnStaff_Id = new global::System.Data.DataColumn("Staff_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaff_Id);
                this.columnX_Officer_First_Name = new global::System.Data.DataColumn("X_Officer_First_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnX_Officer_First_Name);
                this.columnX_Officer_Middle_Name = new global::System.Data.DataColumn("X_Officer_Middle_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnX_Officer_Middle_Name);
                this.columnX_Officer_Last_Name = new global::System.Data.DataColumn("X_Officer_Last_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnX_Officer_Last_Name);
                this.columnX_Officer_Address = new global::System.Data.DataColumn("X_Officer_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnX_Officer_Address);
                this.columnX_Officer_Tele_Number = new global::System.Data.DataColumn("X_Officer_Tele_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnX_Officer_Tele_Number);
                this.columnX_Officer_DOB = new global::System.Data.DataColumn("X_Officer_DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnX_Officer_DOB);
                this.columnX_Officer_Salary = new global::System.Data.DataColumn("X_Officer_Salary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnX_Officer_Salary);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnX_Job_Start_Date = new global::System.Data.DataColumn("X_Job_Start_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnX_Job_Start_Date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStaff_Id}, false));
                this.columnNumber.AutoIncrement = true;
                this.columnNumber.AutoIncrementSeed = -1;
                this.columnNumber.AutoIncrementStep = -1;
                this.columnNumber.AllowDBNull = false;
                this.columnNumber.ReadOnly = true;
                this.columnStaff_Id.ReadOnly = true;
                this.columnStaff_Id.Unique = true;
                this.columnStaff_Id.MaxLength = 8;
                this.columnX_Officer_First_Name.AllowDBNull = false;
                this.columnX_Officer_First_Name.MaxLength = 200;
                this.columnX_Officer_Middle_Name.MaxLength = 200;
                this.columnX_Officer_Last_Name.AllowDBNull = false;
                this.columnX_Officer_Last_Name.MaxLength = 200;
                this.columnX_Officer_Address.AllowDBNull = false;
                this.columnX_Officer_Address.MaxLength = 150;
                this.columnX_Officer_Tele_Number.AllowDBNull = false;
                this.columnX_Officer_DOB.AllowDBNull = false;
                this.columnX_Officer_Salary.AllowDBNull = false;
                this.columnDesignation.AllowDBNull = false;
                this.columnDesignation.MaxLength = 30;
                this.columnX_Job_Start_Date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public X_RAY_ROOMRow NewX_RAY_ROOMRow() {
                return ((X_RAY_ROOMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new X_RAY_ROOMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(X_RAY_ROOMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.X_RAY_ROOMRowChanged != null)) {
                    this.X_RAY_ROOMRowChanged(this, new X_RAY_ROOMRowChangeEvent(((X_RAY_ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.X_RAY_ROOMRowChanging != null)) {
                    this.X_RAY_ROOMRowChanging(this, new X_RAY_ROOMRowChangeEvent(((X_RAY_ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.X_RAY_ROOMRowDeleted != null)) {
                    this.X_RAY_ROOMRowDeleted(this, new X_RAY_ROOMRowChangeEvent(((X_RAY_ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.X_RAY_ROOMRowDeleting != null)) {
                    this.X_RAY_ROOMRowDeleting(this, new X_RAY_ROOMRowChangeEvent(((X_RAY_ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveX_RAY_ROOMRow(X_RAY_ROOMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GUI_Hospital_Management_SystemDataSet1 ds = new GUI_Hospital_Management_SystemDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "X_RAY_ROOMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ACCOUNTRow : global::System.Data.DataRow {
            
            private ACCOUNTDataTable tableACCOUNT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ACCOUNTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableACCOUNT = ((ACCOUNTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Num {
                get {
                    return ((int)(this[this.tableACCOUNT.NumColumn]));
                }
                set {
                    this[this.tableACCOUNT.NumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Roll_Id {
                get {
                    try {
                        return ((string)(this[this.tableACCOUNT.Roll_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roll_Id\' in table \'ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCOUNT.Roll_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Roll_Name {
                get {
                    return ((string)(this[this.tableACCOUNT.Roll_NameColumn]));
                }
                set {
                    this[this.tableACCOUNT.Roll_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Login_Username {
                get {
                    return ((string)(this[this.tableACCOUNT.Login_UsernameColumn]));
                }
                set {
                    this[this.tableACCOUNT.Login_UsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Login_Password {
                get {
                    return ((string)(this[this.tableACCOUNT.Login_PasswordColumn]));
                }
                set {
                    this[this.tableACCOUNT.Login_PasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string E_mail {
                get {
                    try {
                        return ((string)(this[this.tableACCOUNT.E_mailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_mail\' in table \'ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCOUNT.E_mailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime A_Create_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableACCOUNT.A_Create_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'A_Create_Date\' in table \'ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCOUNT.A_Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan A_Create_Time {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableACCOUNT.A_Create_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'A_Create_Time\' in table \'ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCOUNT.A_Create_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRoll_IdNull() {
                return this.IsNull(this.tableACCOUNT.Roll_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRoll_IdNull() {
                this[this.tableACCOUNT.Roll_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsE_mailNull() {
                return this.IsNull(this.tableACCOUNT.E_mailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetE_mailNull() {
                this[this.tableACCOUNT.E_mailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsA_Create_DateNull() {
                return this.IsNull(this.tableACCOUNT.A_Create_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetA_Create_DateNull() {
                this[this.tableACCOUNT.A_Create_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsA_Create_TimeNull() {
                return this.IsNull(this.tableACCOUNT.A_Create_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetA_Create_TimeNull() {
                this[this.tableACCOUNT.A_Create_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMISSION_OFFICERRow[] GetADMISSION_OFFICERRows() {
                if ((this.Table.ChildRelations["fk_ADMISSION_OFFICER"] == null)) {
                    return new ADMISSION_OFFICERRow[0];
                }
                else {
                    return ((ADMISSION_OFFICERRow[])(base.GetChildRows(this.Table.ChildRelations["fk_ADMISSION_OFFICER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLING_OFFICERRow[] GetBILLING_OFFICERRows() {
                if ((this.Table.ChildRelations["fk_BILLING_OFFICER"] == null)) {
                    return new BILLING_OFFICERRow[0];
                }
                else {
                    return ((BILLING_OFFICERRow[])(base.GetChildRows(this.Table.ChildRelations["fk_BILLING_OFFICER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_DETAILRow[] GetLOG_IN_DETAILRows() {
                if ((this.Table.ChildRelations["FK_LOG_IN_DETAIL"] == null)) {
                    return new LOG_IN_DETAILRow[0];
                }
                else {
                    return ((LOG_IN_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["FK_LOG_IN_DETAIL"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_USERRow[] GetLOG_IN_USERRows() {
                if ((this.Table.ChildRelations["fk_LOG_IN_USER"] == null)) {
                    return new LOG_IN_USERRow[0];
                }
                else {
                    return ((LOG_IN_USERRow[])(base.GetChildRows(this.Table.ChildRelations["fk_LOG_IN_USER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_STAFFRow[] GetPHARMACY_STAFFRows() {
                if ((this.Table.ChildRelations["fk_PHARMACY_STAFF"] == null)) {
                    return new PHARMACY_STAFFRow[0];
                }
                else {
                    return ((PHARMACY_STAFFRow[])(base.GetChildRows(this.Table.ChildRelations["fk_PHARMACY_STAFF"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARD_STAFFRow[] GetWARD_STAFFRows() {
                if ((this.Table.ChildRelations["FK__WARD_STAF__Roll___47DBAE45"] == null)) {
                    return new WARD_STAFFRow[0];
                }
                else {
                    return ((WARD_STAFFRow[])(base.GetChildRows(this.Table.ChildRelations["FK__WARD_STAF__Roll___47DBAE45"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ADMISSION_OFFICERRow : global::System.Data.DataRow {
            
            private ADMISSION_OFFICERDataTable tableADMISSION_OFFICER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ADMISSION_OFFICERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableADMISSION_OFFICER = ((ADMISSION_OFFICERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableADMISSION_OFFICER.NumberColumn]));
                }
                set {
                    this[this.tableADMISSION_OFFICER.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Admission_Officer_Id {
                get {
                    try {
                        return ((string)(this[this.tableADMISSION_OFFICER.Admission_Officer_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_Officer_Id\' in table \'ADMISSION_OFFICER\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableADMISSION_OFFICER.Admission_Officer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string A_Officer_First_Name {
                get {
                    return ((string)(this[this.tableADMISSION_OFFICER.A_Officer_First_NameColumn]));
                }
                set {
                    this[this.tableADMISSION_OFFICER.A_Officer_First_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string A_Officer_Middle_Name {
                get {
                    try {
                        return ((string)(this[this.tableADMISSION_OFFICER.A_Officer_Middle_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'A_Officer_Middle_Name\' in table \'ADMISSION_OFFICER\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableADMISSION_OFFICER.A_Officer_Middle_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string A_Officer_Last_Name {
                get {
                    return ((string)(this[this.tableADMISSION_OFFICER.A_Officer_Last_NameColumn]));
                }
                set {
                    this[this.tableADMISSION_OFFICER.A_Officer_Last_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string A_Officer_Address {
                get {
                    return ((string)(this[this.tableADMISSION_OFFICER.A_Officer_AddressColumn]));
                }
                set {
                    this[this.tableADMISSION_OFFICER.A_Officer_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int A_Officer_Tele_Number {
                get {
                    return ((int)(this[this.tableADMISSION_OFFICER.A_Officer_Tele_NumberColumn]));
                }
                set {
                    this[this.tableADMISSION_OFFICER.A_Officer_Tele_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime A_Officer_DOB {
                get {
                    return ((global::System.DateTime)(this[this.tableADMISSION_OFFICER.A_Officer_DOBColumn]));
                }
                set {
                    this[this.tableADMISSION_OFFICER.A_Officer_DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal A_Officer_Salary {
                get {
                    return ((decimal)(this[this.tableADMISSION_OFFICER.A_Officer_SalaryColumn]));
                }
                set {
                    this[this.tableADMISSION_OFFICER.A_Officer_SalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime A_Job_Start_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableADMISSION_OFFICER.A_Job_Start_DateColumn]));
                }
                set {
                    this[this.tableADMISSION_OFFICER.A_Job_Start_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Roll_Id {
                get {
                    return ((string)(this[this.tableADMISSION_OFFICER.Roll_IdColumn]));
                }
                set {
                    this[this.tableADMISSION_OFFICER.Roll_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCOUNTRow ACCOUNTRow {
                get {
                    return ((ACCOUNTRow)(this.GetParentRow(this.Table.ParentRelations["fk_ADMISSION_OFFICER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_ADMISSION_OFFICER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAdmission_Officer_IdNull() {
                return this.IsNull(this.tableADMISSION_OFFICER.Admission_Officer_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAdmission_Officer_IdNull() {
                this[this.tableADMISSION_OFFICER.Admission_Officer_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsA_Officer_Middle_NameNull() {
                return this.IsNull(this.tableADMISSION_OFFICER.A_Officer_Middle_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetA_Officer_Middle_NameNull() {
                this[this.tableADMISSION_OFFICER.A_Officer_Middle_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GUARDIANRow[] GetGUARDIANRows() {
                if ((this.Table.ChildRelations["fk_GUARDIAN"] == null)) {
                    return new GUARDIANRow[0];
                }
                else {
                    return ((GUARDIANRow[])(base.GetChildRows(this.Table.ChildRelations["fk_GUARDIAN"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BILLRow : global::System.Data.DataRow {
            
            private BILLDataTable tableBILL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BILLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBILL = ((BILLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableBILL.NumberColumn]));
                }
                set {
                    this[this.tableBILL.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Bill_Number {
                get {
                    try {
                        return ((string)(this[this.tableBILL.Bill_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill_Number\' in table \'BILL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBILL.Bill_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double Bill_Amount {
                get {
                    return ((double)(this[this.tableBILL.Bill_AmountColumn]));
                }
                set {
                    this[this.tableBILL.Bill_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Payment_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableBILL.Payment_DateColumn]));
                }
                set {
                    this[this.tableBILL.Payment_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Payment_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableBILL.Payment_TimeColumn]));
                }
                set {
                    this[this.tableBILL.Payment_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Payment_Type {
                get {
                    return ((string)(this[this.tableBILL.Payment_TypeColumn]));
                }
                set {
                    this[this.tableBILL.Payment_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Billing_Officer_Id {
                get {
                    return ((string)(this[this.tableBILL.Billing_Officer_IdColumn]));
                }
                set {
                    this[this.tableBILL.Billing_Officer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardian_Id_Number {
                get {
                    return ((string)(this[this.tableBILL.Guardian_Id_NumberColumn]));
                }
                set {
                    this[this.tableBILL.Guardian_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLING_OFFICERRow BILLING_OFFICERRow {
                get {
                    return ((BILLING_OFFICERRow)(this.GetParentRow(this.Table.ParentRelations["FK__BILL__Billing_Of__6477ECF3"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__BILL__Billing_Of__6477ECF3"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GUARDIANRow GUARDIANRow {
                get {
                    return ((GUARDIANRow)(this.GetParentRow(this.Table.ParentRelations["fk_BILL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_BILL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBill_NumberNull() {
                return this.IsNull(this.tableBILL.Bill_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBill_NumberNull() {
                this[this.tableBILL.Bill_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORGANIZATIONRow[] GetORGANIZATIONRows() {
                if ((this.Table.ChildRelations["fk_ORGANIZATION"] == null)) {
                    return new ORGANIZATIONRow[0];
                }
                else {
                    return ((ORGANIZATIONRow[])(base.GetChildRows(this.Table.ChildRelations["fk_ORGANIZATION"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BILLING_OFFICERRow : global::System.Data.DataRow {
            
            private BILLING_OFFICERDataTable tableBILLING_OFFICER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BILLING_OFFICERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBILLING_OFFICER = ((BILLING_OFFICERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableBILLING_OFFICER.NumberColumn]));
                }
                set {
                    this[this.tableBILLING_OFFICER.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Billing_Officer_Id {
                get {
                    try {
                        return ((string)(this[this.tableBILLING_OFFICER.Billing_Officer_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Billing_Officer_Id\' in table \'BILLING_OFFICER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBILLING_OFFICER.Billing_Officer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string B_Officer_First_Name {
                get {
                    return ((string)(this[this.tableBILLING_OFFICER.B_Officer_First_NameColumn]));
                }
                set {
                    this[this.tableBILLING_OFFICER.B_Officer_First_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string B_Officer_Middle_Name {
                get {
                    try {
                        return ((string)(this[this.tableBILLING_OFFICER.B_Officer_Middle_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'B_Officer_Middle_Name\' in table \'BILLING_OFFICER\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableBILLING_OFFICER.B_Officer_Middle_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string B_Officer_Last_Name {
                get {
                    return ((string)(this[this.tableBILLING_OFFICER.B_Officer_Last_NameColumn]));
                }
                set {
                    this[this.tableBILLING_OFFICER.B_Officer_Last_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string B_Officer_Address {
                get {
                    return ((string)(this[this.tableBILLING_OFFICER.B_Officer_AddressColumn]));
                }
                set {
                    this[this.tableBILLING_OFFICER.B_Officer_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int B_Officer_Tele_Number {
                get {
                    return ((int)(this[this.tableBILLING_OFFICER.B_Officer_Tele_NumberColumn]));
                }
                set {
                    this[this.tableBILLING_OFFICER.B_Officer_Tele_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime B_Officer_DOB {
                get {
                    return ((global::System.DateTime)(this[this.tableBILLING_OFFICER.B_Officer_DOBColumn]));
                }
                set {
                    this[this.tableBILLING_OFFICER.B_Officer_DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal B_Officer_Salary {
                get {
                    return ((decimal)(this[this.tableBILLING_OFFICER.B_Officer_SalaryColumn]));
                }
                set {
                    this[this.tableBILLING_OFFICER.B_Officer_SalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Roll_Id {
                get {
                    try {
                        return ((string)(this[this.tableBILLING_OFFICER.Roll_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roll_Id\' in table \'BILLING_OFFICER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBILLING_OFFICER.Roll_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCOUNTRow ACCOUNTRow {
                get {
                    return ((ACCOUNTRow)(this.GetParentRow(this.Table.ParentRelations["fk_BILLING_OFFICER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_BILLING_OFFICER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBilling_Officer_IdNull() {
                return this.IsNull(this.tableBILLING_OFFICER.Billing_Officer_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBilling_Officer_IdNull() {
                this[this.tableBILLING_OFFICER.Billing_Officer_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsB_Officer_Middle_NameNull() {
                return this.IsNull(this.tableBILLING_OFFICER.B_Officer_Middle_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetB_Officer_Middle_NameNull() {
                this[this.tableBILLING_OFFICER.B_Officer_Middle_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRoll_IdNull() {
                return this.IsNull(this.tableBILLING_OFFICER.Roll_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRoll_IdNull() {
                this[this.tableBILLING_OFFICER.Roll_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLRow[] GetBILLRows() {
                if ((this.Table.ChildRelations["FK__BILL__Billing_Of__6477ECF3"] == null)) {
                    return new BILLRow[0];
                }
                else {
                    return ((BILLRow[])(base.GetChildRows(this.Table.ChildRelations["FK__BILL__Billing_Of__6477ECF3"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GUARDIANRow[] GetGUARDIANRows() {
                if ((this.Table.ChildRelations["FK__GUARDIAN__Billin__4CA06362"] == null)) {
                    return new GUARDIANRow[0];
                }
                else {
                    return ((GUARDIANRow[])(base.GetChildRows(this.Table.ChildRelations["FK__GUARDIAN__Billin__4CA06362"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORGANIZATIONRow[] GetORGANIZATIONRows() {
                if ((this.Table.ChildRelations["FK__ORGANIZAT__Billi__693CA210"] == null)) {
                    return new ORGANIZATIONRow[0];
                }
                else {
                    return ((ORGANIZATIONRow[])(base.GetChildRows(this.Table.ChildRelations["FK__ORGANIZAT__Billi__693CA210"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CHANNELING_OFFICERRow : global::System.Data.DataRow {
            
            private CHANNELING_OFFICERDataTable tableCHANNELING_OFFICER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CHANNELING_OFFICERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHANNELING_OFFICER = ((CHANNELING_OFFICERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableCHANNELING_OFFICER.NumberColumn]));
                }
                set {
                    this[this.tableCHANNELING_OFFICER.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Channneling_Officer_Id {
                get {
                    try {
                        return ((string)(this[this.tableCHANNELING_OFFICER.Channneling_Officer_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Channneling_Officer_Id\' in table \'CHANNELING_OFFICER\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCHANNELING_OFFICER.Channneling_Officer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Officer_First_Name {
                get {
                    return ((string)(this[this.tableCHANNELING_OFFICER.Officer_First_NameColumn]));
                }
                set {
                    this[this.tableCHANNELING_OFFICER.Officer_First_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Officer_Middle_Name {
                get {
                    try {
                        return ((string)(this[this.tableCHANNELING_OFFICER.Officer_Middle_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Officer_Middle_Name\' in table \'CHANNELING_OFFICER\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCHANNELING_OFFICER.Officer_Middle_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Officer_Last_Name {
                get {
                    return ((string)(this[this.tableCHANNELING_OFFICER.Officer_Last_NameColumn]));
                }
                set {
                    this[this.tableCHANNELING_OFFICER.Officer_Last_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Officer_Address {
                get {
                    return ((string)(this[this.tableCHANNELING_OFFICER.Officer_AddressColumn]));
                }
                set {
                    this[this.tableCHANNELING_OFFICER.Officer_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Officer_Tele_Number {
                get {
                    return ((int)(this[this.tableCHANNELING_OFFICER.Officer_Tele_NumberColumn]));
                }
                set {
                    this[this.tableCHANNELING_OFFICER.Officer_Tele_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Officer_DOB {
                get {
                    return ((global::System.DateTime)(this[this.tableCHANNELING_OFFICER.Officer_DOBColumn]));
                }
                set {
                    this[this.tableCHANNELING_OFFICER.Officer_DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Officer_Salary {
                get {
                    return ((decimal)(this[this.tableCHANNELING_OFFICER.Officer_SalaryColumn]));
                }
                set {
                    this[this.tableCHANNELING_OFFICER.Officer_SalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Roll_Id {
                get {
                    try {
                        return ((string)(this[this.tableCHANNELING_OFFICER.Roll_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roll_Id\' in table \'CHANNELING_OFFICER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHANNELING_OFFICER.Roll_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChannneling_Officer_IdNull() {
                return this.IsNull(this.tableCHANNELING_OFFICER.Channneling_Officer_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChannneling_Officer_IdNull() {
                this[this.tableCHANNELING_OFFICER.Channneling_Officer_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOfficer_Middle_NameNull() {
                return this.IsNull(this.tableCHANNELING_OFFICER.Officer_Middle_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOfficer_Middle_NameNull() {
                this[this.tableCHANNELING_OFFICER.Officer_Middle_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRoll_IdNull() {
                return this.IsNull(this.tableCHANNELING_OFFICER.Roll_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRoll_IdNull() {
                this[this.tableCHANNELING_OFFICER.Roll_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CUSTOMERRow[] GetCUSTOMERRows() {
                if ((this.Table.ChildRelations["fk_CUSTOMER"] == null)) {
                    return new CUSTOMERRow[0];
                }
                else {
                    return ((CUSTOMERRow[])(base.GetChildRows(this.Table.ChildRelations["fk_CUSTOMER"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CUSTOMERRow : global::System.Data.DataRow {
            
            private CUSTOMERDataTable tableCUSTOMER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CUSTOMERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCUSTOMER = ((CUSTOMERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableCUSTOMER.NumberColumn]));
                }
                set {
                    this[this.tableCUSTOMER.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Invoice_Number {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER.Invoice_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Invoice_Number\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.Invoice_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Appointment_Number {
                get {
                    return ((int)(this[this.tableCUSTOMER.Appointment_NumberColumn]));
                }
                set {
                    this[this.tableCUSTOMER.Appointment_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Consultant_Name {
                get {
                    return ((string)(this[this.tableCUSTOMER.Consultant_NameColumn]));
                }
                set {
                    this[this.tableCUSTOMER.Consultant_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Specialist_Doctor_Id {
                get {
                    return ((string)(this[this.tableCUSTOMER.Specialist_Doctor_IdColumn]));
                }
                set {
                    this[this.tableCUSTOMER.Specialist_Doctor_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Session_Date {
                get {
                    return ((string)(this[this.tableCUSTOMER.Session_DateColumn]));
                }
                set {
                    this[this.tableCUSTOMER.Session_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Patient_Name {
                get {
                    return ((string)(this[this.tableCUSTOMER.Patient_NameColumn]));
                }
                set {
                    this[this.tableCUSTOMER.Patient_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Contact_Number {
                get {
                    return ((int)(this[this.tableCUSTOMER.Contact_NumberColumn]));
                }
                set {
                    this[this.tableCUSTOMER.Contact_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Hospital_Fee {
                get {
                    return ((int)(this[this.tableCUSTOMER.Hospital_FeeColumn]));
                }
                set {
                    this[this.tableCUSTOMER.Hospital_FeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Doctor_Fee {
                get {
                    return ((int)(this[this.tableCUSTOMER.Doctor_FeeColumn]));
                }
                set {
                    this[this.tableCUSTOMER.Doctor_FeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Issue_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableCUSTOMER.Issue_TimeColumn]));
                }
                set {
                    this[this.tableCUSTOMER.Issue_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Issue_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableCUSTOMER.Issue_DateColumn]));
                }
                set {
                    this[this.tableCUSTOMER.Issue_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Channneling_Officer_Id {
                get {
                    return ((string)(this[this.tableCUSTOMER.Channneling_Officer_IdColumn]));
                }
                set {
                    this[this.tableCUSTOMER.Channneling_Officer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow SPECIALIST_DOCTORRow {
                get {
                    return ((SPECIALIST_DOCTORRow)(this.GetParentRow(this.Table.ParentRelations["FK__CUSTOMER__Specia__5535A963"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__CUSTOMER__Specia__5535A963"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CHANNELING_OFFICERRow CHANNELING_OFFICERRow {
                get {
                    return ((CHANNELING_OFFICERRow)(this.GetParentRow(this.Table.ParentRelations["fk_CUSTOMER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_CUSTOMER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInvoice_NumberNull() {
                return this.IsNull(this.tableCUSTOMER.Invoice_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInvoice_NumberNull() {
                this[this.tableCUSTOMER.Invoice_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_APPOINTMENT_DETAILSRow[] GetPATIENT_APPOINTMENT_DETAILSRows() {
                if ((this.Table.ChildRelations["FK__PATIENT_A__Invoi__59063A47"] == null)) {
                    return new PATIENT_APPOINTMENT_DETAILSRow[0];
                }
                else {
                    return ((PATIENT_APPOINTMENT_DETAILSRow[])(base.GetChildRows(this.Table.ChildRelations["FK__PATIENT_A__Invoi__59063A47"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DRUGRow : global::System.Data.DataRow {
            
            private DRUGDataTable tableDRUG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DRUGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDRUG = ((DRUGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableDRUG.NumberColumn]));
                }
                set {
                    this[this.tableDRUG.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Drug_Code {
                get {
                    try {
                        return ((string)(this[this.tableDRUG.Drug_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Drug_Code\' in table \'DRUG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRUG.Drug_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Drug_Name {
                get {
                    return ((string)(this[this.tableDRUG.Drug_NameColumn]));
                }
                set {
                    this[this.tableDRUG.Drug_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Trade_Number {
                get {
                    return ((string)(this[this.tableDRUG.Trade_NumberColumn]));
                }
                set {
                    this[this.tableDRUG.Trade_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Store_Place {
                get {
                    return ((string)(this[this.tableDRUG.Store_PlaceColumn]));
                }
                set {
                    this[this.tableDRUG.Store_PlaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double Drug_Price {
                get {
                    return ((double)(this[this.tableDRUG.Drug_PriceColumn]));
                }
                set {
                    this[this.tableDRUG.Drug_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDrug_CodeNull() {
                return this.IsNull(this.tableDRUG.Drug_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDrug_CodeNull() {
                this[this.tableDRUG.Drug_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_ORDERRow[] GetDRUG_ORDERRows() {
                if ((this.Table.ChildRelations["fk_DRUG_ORDER"] == null)) {
                    return new DRUG_ORDERRow[0];
                }
                else {
                    return ((DRUG_ORDERRow[])(base.GetChildRows(this.Table.ChildRelations["fk_DRUG_ORDER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_MEDICINERow[] GetIN_PATIENT_MEDICINERows() {
                if ((this.Table.ChildRelations["FK__IN_PATIEN__Drug___01142BA1"] == null)) {
                    return new IN_PATIENT_MEDICINERow[0];
                }
                else {
                    return ((IN_PATIENT_MEDICINERow[])(base.GetChildRows(this.Table.ChildRelations["FK__IN_PATIEN__Drug___01142BA1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_MEDICINERow[] GetOUT_PATIENT_MEDICINERows() {
                if ((this.Table.ChildRelations["FK__OUT_PATIE__Drug___04E4BC85"] == null)) {
                    return new OUT_PATIENT_MEDICINERow[0];
                }
                else {
                    return ((OUT_PATIENT_MEDICINERow[])(base.GetChildRows(this.Table.ChildRelations["FK__OUT_PATIE__Drug___04E4BC85"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_MEDICINESRow[] GetPHARMACY_MEDICINESRows() {
                if ((this.Table.ChildRelations["FK__PHARMACY___Drug___7C4F7684"] == null)) {
                    return new PHARMACY_MEDICINESRow[0];
                }
                else {
                    return ((PHARMACY_MEDICINESRow[])(base.GetChildRows(this.Table.ChildRelations["FK__PHARMACY___Drug___7C4F7684"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DRUG_ORDERRow : global::System.Data.DataRow {
            
            private DRUG_ORDERDataTable tableDRUG_ORDER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DRUG_ORDERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDRUG_ORDER = ((DRUG_ORDERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableDRUG_ORDER.NumberColumn]));
                }
                set {
                    this[this.tableDRUG_ORDER.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Order_Number {
                get {
                    try {
                        return ((string)(this[this.tableDRUG_ORDER.Order_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Order_Number\' in table \'DRUG_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRUG_ORDER.Order_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Drug_Code {
                get {
                    return ((string)(this[this.tableDRUG_ORDER.Drug_CodeColumn]));
                }
                set {
                    this[this.tableDRUG_ORDER.Drug_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Drug_Name {
                get {
                    return ((string)(this[this.tableDRUG_ORDER.Drug_NameColumn]));
                }
                set {
                    this[this.tableDRUG_ORDER.Drug_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Quantity {
                get {
                    return ((int)(this[this.tableDRUG_ORDER.QuantityColumn]));
                }
                set {
                    this[this.tableDRUG_ORDER.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Order_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableDRUG_ORDER.Order_DateColumn]));
                }
                set {
                    this[this.tableDRUG_ORDER.Order_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Supplier_Id {
                get {
                    return ((string)(this[this.tableDRUG_ORDER.Supplier_IdColumn]));
                }
                set {
                    this[this.tableDRUG_ORDER.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Supply_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableDRUG_ORDER.Supply_DateColumn]));
                }
                set {
                    this[this.tableDRUG_ORDER.Supply_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Supply_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableDRUG_ORDER.Supply_TimeColumn]));
                }
                set {
                    this[this.tableDRUG_ORDER.Supply_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Supply_Quantity {
                get {
                    return ((int)(this[this.tableDRUG_ORDER.Supply_QuantityColumn]));
                }
                set {
                    this[this.tableDRUG_ORDER.Supply_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Manufacture_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableDRUG_ORDER.Manufacture_DateColumn]));
                }
                set {
                    this[this.tableDRUG_ORDER.Manufacture_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Expire_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableDRUG_ORDER.Expire_DateColumn]));
                }
                set {
                    this[this.tableDRUG_ORDER.Expire_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double Total_Bill_Amount {
                get {
                    return ((double)(this[this.tableDRUG_ORDER.Total_Bill_AmountColumn]));
                }
                set {
                    this[this.tableDRUG_ORDER.Total_Bill_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pharmacy_Staff_Id {
                get {
                    return ((string)(this[this.tableDRUG_ORDER.Pharmacy_Staff_IdColumn]));
                }
                set {
                    this[this.tableDRUG_ORDER.Pharmacy_Staff_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_SUPPLIERRow DRUG_SUPPLIERRow {
                get {
                    return ((DRUG_SUPPLIERRow)(this.GetParentRow(this.Table.ParentRelations["FK__DRUG_ORDE__Suppl__73BA3083"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__DRUG_ORDE__Suppl__73BA3083"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUGRow DRUGRow {
                get {
                    return ((DRUGRow)(this.GetParentRow(this.Table.ParentRelations["fk_DRUG_ORDER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_DRUG_ORDER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOrder_NumberNull() {
                return this.IsNull(this.tableDRUG_ORDER.Order_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOrder_NumberNull() {
                this[this.tableDRUG_ORDER.Order_NumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DRUG_SUPPLIERRow : global::System.Data.DataRow {
            
            private DRUG_SUPPLIERDataTable tableDRUG_SUPPLIER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DRUG_SUPPLIERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDRUG_SUPPLIER = ((DRUG_SUPPLIERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableDRUG_SUPPLIER.NumberColumn]));
                }
                set {
                    this[this.tableDRUG_SUPPLIER.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Supplier_Id {
                get {
                    try {
                        return ((string)(this[this.tableDRUG_SUPPLIER.Supplier_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier_Id\' in table \'DRUG_SUPPLIER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRUG_SUPPLIER.Supplier_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Supplier_Name {
                get {
                    return ((string)(this[this.tableDRUG_SUPPLIER.Supplier_NameColumn]));
                }
                set {
                    this[this.tableDRUG_SUPPLIER.Supplier_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Manufacture_Company {
                get {
                    return ((string)(this[this.tableDRUG_SUPPLIER.Manufacture_CompanyColumn]));
                }
                set {
                    this[this.tableDRUG_SUPPLIER.Manufacture_CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Manufacture_Country {
                get {
                    return ((string)(this[this.tableDRUG_SUPPLIER.Manufacture_CountryColumn]));
                }
                set {
                    this[this.tableDRUG_SUPPLIER.Manufacture_CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Manufacture_Reg_Number {
                get {
                    return ((string)(this[this.tableDRUG_SUPPLIER.Manufacture_Reg_NumberColumn]));
                }
                set {
                    this[this.tableDRUG_SUPPLIER.Manufacture_Reg_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSupplier_IdNull() {
                return this.IsNull(this.tableDRUG_SUPPLIER.Supplier_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSupplier_IdNull() {
                this[this.tableDRUG_SUPPLIER.Supplier_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_ORDERRow[] GetDRUG_ORDERRows() {
                if ((this.Table.ChildRelations["FK__DRUG_ORDE__Suppl__73BA3083"] == null)) {
                    return new DRUG_ORDERRow[0];
                }
                else {
                    return ((DRUG_ORDERRow[])(base.GetChildRows(this.Table.ChildRelations["FK__DRUG_ORDE__Suppl__73BA3083"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GUARDIANRow : global::System.Data.DataRow {
            
            private GUARDIANDataTable tableGUARDIAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal GUARDIANRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGUARDIAN = ((GUARDIANDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableGUARDIAN.NumberColumn]));
                }
                set {
                    this[this.tableGUARDIAN.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardian_Id_Number {
                get {
                    try {
                        return ((string)(this[this.tableGUARDIAN.Guardian_Id_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Guardian_Id_Number\' in table \'GUARDIAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGUARDIAN.Guardian_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardian_NIC {
                get {
                    return ((string)(this[this.tableGUARDIAN.Guardian_NICColumn]));
                }
                set {
                    this[this.tableGUARDIAN.Guardian_NICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardian_Name {
                get {
                    return ((string)(this[this.tableGUARDIAN.Guardian_NameColumn]));
                }
                set {
                    this[this.tableGUARDIAN.Guardian_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardian_Address {
                get {
                    return ((string)(this[this.tableGUARDIAN.Guardian_AddressColumn]));
                }
                set {
                    this[this.tableGUARDIAN.Guardian_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Gurdian_Tele_No {
                get {
                    return ((int)(this[this.tableGUARDIAN.Gurdian_Tele_NoColumn]));
                }
                set {
                    this[this.tableGUARDIAN.Gurdian_Tele_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Relationship {
                get {
                    return ((string)(this[this.tableGUARDIAN.RelationshipColumn]));
                }
                set {
                    this[this.tableGUARDIAN.RelationshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Admission_Officer_Id {
                get {
                    return ((string)(this[this.tableGUARDIAN.Admission_Officer_IdColumn]));
                }
                set {
                    this[this.tableGUARDIAN.Admission_Officer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Billing_Officer_Id {
                get {
                    try {
                        return ((string)(this[this.tableGUARDIAN.Billing_Officer_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Billing_Officer_Id\' in table \'GUARDIAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGUARDIAN.Billing_Officer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLING_OFFICERRow BILLING_OFFICERRow {
                get {
                    return ((BILLING_OFFICERRow)(this.GetParentRow(this.Table.ParentRelations["FK__GUARDIAN__Billin__4CA06362"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__GUARDIAN__Billin__4CA06362"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMISSION_OFFICERRow ADMISSION_OFFICERRow {
                get {
                    return ((ADMISSION_OFFICERRow)(this.GetParentRow(this.Table.ParentRelations["fk_GUARDIAN"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_GUARDIAN"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGuardian_Id_NumberNull() {
                return this.IsNull(this.tableGUARDIAN.Guardian_Id_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGuardian_Id_NumberNull() {
                this[this.tableGUARDIAN.Guardian_Id_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBilling_Officer_IdNull() {
                return this.IsNull(this.tableGUARDIAN.Billing_Officer_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBilling_Officer_IdNull() {
                this[this.tableGUARDIAN.Billing_Officer_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLRow[] GetBILLRows() {
                if ((this.Table.ChildRelations["fk_BILL"] == null)) {
                    return new BILLRow[0];
                }
                else {
                    return ((BILLRow[])(base.GetChildRows(this.Table.ChildRelations["fk_BILL"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow[] GetPATIENT_PRIVATE_DETAILRows() {
                if ((this.Table.ChildRelations["fk_PATIENT_PRIVATE_DETAIL"] == null)) {
                    return new PATIENT_PRIVATE_DETAILRow[0];
                }
                else {
                    return ((PATIENT_PRIVATE_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["fk_PATIENT_PRIVATE_DETAIL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class HOSPITAL_CUSTOMERRow : global::System.Data.DataRow {
            
            private HOSPITAL_CUSTOMERDataTable tableHOSPITAL_CUSTOMER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal HOSPITAL_CUSTOMERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHOSPITAL_CUSTOMER = ((HOSPITAL_CUSTOMERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableHOSPITAL_CUSTOMER.NumberColumn]));
                }
                set {
                    this[this.tableHOSPITAL_CUSTOMER.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pharmacy_Invoice_Number {
                get {
                    try {
                        return ((string)(this[this.tableHOSPITAL_CUSTOMER.Pharmacy_Invoice_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pharmacy_Invoice_Number\' in table \'HOSPITAL_CUSTOMER\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableHOSPITAL_CUSTOMER.Pharmacy_Invoice_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Patient_Id_Number {
                get {
                    return ((int)(this[this.tableHOSPITAL_CUSTOMER.Patient_Id_NumberColumn]));
                }
                set {
                    this[this.tableHOSPITAL_CUSTOMER.Patient_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Specialist_Doctor_Id {
                get {
                    return ((string)(this[this.tableHOSPITAL_CUSTOMER.Specialist_Doctor_IdColumn]));
                }
                set {
                    this[this.tableHOSPITAL_CUSTOMER.Specialist_Doctor_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Total_Bill {
                get {
                    return ((decimal)(this[this.tableHOSPITAL_CUSTOMER.Total_BillColumn]));
                }
                set {
                    this[this.tableHOSPITAL_CUSTOMER.Total_BillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Issue_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableHOSPITAL_CUSTOMER.Issue_DateColumn]));
                }
                set {
                    this[this.tableHOSPITAL_CUSTOMER.Issue_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Issue_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableHOSPITAL_CUSTOMER.Issue_TimeColumn]));
                }
                set {
                    this[this.tableHOSPITAL_CUSTOMER.Issue_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pharmacy_Staff_Id {
                get {
                    return ((string)(this[this.tableHOSPITAL_CUSTOMER.Pharmacy_Staff_IdColumn]));
                }
                set {
                    this[this.tableHOSPITAL_CUSTOMER.Pharmacy_Staff_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_STAFFRow PHARMACY_STAFFRow {
                get {
                    return ((PHARMACY_STAFFRow)(this.GetParentRow(this.Table.ParentRelations["FK__HOSPITAL___Pharm__787EE5A0"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__HOSPITAL___Pharm__787EE5A0"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow SPECIALIST_DOCTORRow {
                get {
                    return ((SPECIALIST_DOCTORRow)(this.GetParentRow(this.Table.ParentRelations["FK__HOSPITAL___Speci__778AC167"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__HOSPITAL___Speci__778AC167"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow PATIENT_PRIVATE_DETAILRow {
                get {
                    return ((PATIENT_PRIVATE_DETAILRow)(this.GetParentRow(this.Table.ParentRelations["fk_HOSPITAL_CUSTOMER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_HOSPITAL_CUSTOMER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPharmacy_Invoice_NumberNull() {
                return this.IsNull(this.tableHOSPITAL_CUSTOMER.Pharmacy_Invoice_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPharmacy_Invoice_NumberNull() {
                this[this.tableHOSPITAL_CUSTOMER.Pharmacy_Invoice_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_MEDICINESRow[] GetPHARMACY_MEDICINESRows() {
                if ((this.Table.ChildRelations["fk_PHARMACY_MEDICINES"] == null)) {
                    return new PHARMACY_MEDICINESRow[0];
                }
                else {
                    return ((PHARMACY_MEDICINESRow[])(base.GetChildRows(this.Table.ChildRelations["fk_PHARMACY_MEDICINES"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IN_PATIENTRow : global::System.Data.DataRow {
            
            private IN_PATIENTDataTable tableIN_PATIENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal IN_PATIENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIN_PATIENT = ((IN_PATIENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableIN_PATIENT.NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Admission_Number {
                get {
                    try {
                        return ((string)(this[this.tableIN_PATIENT.Admission_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_Number\' in table \'IN_PATIENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIN_PATIENT.Admission_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Patient_Id_Number {
                get {
                    return ((int)(this[this.tableIN_PATIENT.Patient_Id_NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT.Patient_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Reason {
                get {
                    return ((string)(this[this.tableIN_PATIENT.ReasonColumn]));
                }
                set {
                    this[this.tableIN_PATIENT.ReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Admit_Time {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableIN_PATIENT.Admit_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admit_Time\' in table \'IN_PATIENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIN_PATIENT.Admit_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Admit_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIN_PATIENT.Admit_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admit_Date\' in table \'IN_PATIENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIN_PATIENT.Admit_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Discharge_Time {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableIN_PATIENT.Discharge_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discharge_Time\' in table \'IN_PATIENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIN_PATIENT.Discharge_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Discharge_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIN_PATIENT.Discharge_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discharge_Date\' in table \'IN_PATIENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIN_PATIENT.Discharge_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Specialist_Doctor_Id {
                get {
                    return ((string)(this[this.tableIN_PATIENT.Specialist_Doctor_IdColumn]));
                }
                set {
                    this[this.tableIN_PATIENT.Specialist_Doctor_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ward_Number {
                get {
                    return ((string)(this[this.tableIN_PATIENT.Ward_NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT.Ward_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Room_Number {
                get {
                    return ((string)(this[this.tableIN_PATIENT.Room_NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT.Room_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow PATIENT_PRIVATE_DETAILRow {
                get {
                    return ((PATIENT_PRIVATE_DETAILRow)(this.GetParentRow(this.Table.ParentRelations["FK__IN_PATIEN__Patie__5EBF139D"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__IN_PATIEN__Patie__5EBF139D"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROOMRow ROOMRow {
                get {
                    return ((ROOMRow)(this.GetParentRow(this.Table.ParentRelations["FK__IN_PATIEN__Room___5DCAEF64"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__IN_PATIEN__Room___5DCAEF64"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARDRow WARDRow {
                get {
                    return ((WARDRow)(this.GetParentRow(this.Table.ParentRelations["FK__IN_PATIEN__Ward___5CD6CB2B"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__IN_PATIEN__Ward___5CD6CB2B"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow SPECIALIST_DOCTORRow {
                get {
                    return ((SPECIALIST_DOCTORRow)(this.GetParentRow(this.Table.ParentRelations["fk_IN_PATIENT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_IN_PATIENT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAdmission_NumberNull() {
                return this.IsNull(this.tableIN_PATIENT.Admission_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAdmission_NumberNull() {
                this[this.tableIN_PATIENT.Admission_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAdmit_TimeNull() {
                return this.IsNull(this.tableIN_PATIENT.Admit_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAdmit_TimeNull() {
                this[this.tableIN_PATIENT.Admit_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAdmit_DateNull() {
                return this.IsNull(this.tableIN_PATIENT.Admit_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAdmit_DateNull() {
                this[this.tableIN_PATIENT.Admit_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDischarge_TimeNull() {
                return this.IsNull(this.tableIN_PATIENT.Discharge_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDischarge_TimeNull() {
                this[this.tableIN_PATIENT.Discharge_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDischarge_DateNull() {
                return this.IsNull(this.tableIN_PATIENT.Discharge_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDischarge_DateNull() {
                this[this.tableIN_PATIENT.Discharge_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_MEDICINERow[] GetIN_PATIENT_MEDICINERows() {
                if ((this.Table.ChildRelations["fk_IN_PATIENT_MEDICINE"] == null)) {
                    return new IN_PATIENT_MEDICINERow[0];
                }
                else {
                    return ((IN_PATIENT_MEDICINERow[])(base.GetChildRows(this.Table.ChildRelations["fk_IN_PATIENT_MEDICINE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_REPORTRow[] GetIN_PATIENT_REPORTRows() {
                if ((this.Table.ChildRelations["fk_IN_PATIENT_REPORT"] == null)) {
                    return new IN_PATIENT_REPORTRow[0];
                }
                else {
                    return ((IN_PATIENT_REPORTRow[])(base.GetChildRows(this.Table.ChildRelations["fk_IN_PATIENT_REPORT"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_SCANRow[] GetIN_PATIENT_SCANRows() {
                if ((this.Table.ChildRelations["fk_IN_PATIENT_SCAN"] == null)) {
                    return new IN_PATIENT_SCANRow[0];
                }
                else {
                    return ((IN_PATIENT_SCANRow[])(base.GetChildRows(this.Table.ChildRelations["fk_IN_PATIENT_SCAN"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_XRAYRow[] GetIN_PATIENT_XRAYRows() {
                if ((this.Table.ChildRelations["fk_IN_PATIENT_XRAY"] == null)) {
                    return new IN_PATIENT_XRAYRow[0];
                }
                else {
                    return ((IN_PATIENT_XRAYRow[])(base.GetChildRows(this.Table.ChildRelations["fk_IN_PATIENT_XRAY"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_IN_PATIENTRow[] GetREPORT_IN_PATIENTRows() {
                if ((this.Table.ChildRelations["fk_REPORT_IN_PATIENT"] == null)) {
                    return new REPORT_IN_PATIENTRow[0];
                }
                else {
                    return ((REPORT_IN_PATIENTRow[])(base.GetChildRows(this.Table.ChildRelations["fk_REPORT_IN_PATIENT"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IN_PATIENT_MEDICINERow : global::System.Data.DataRow {
            
            private IN_PATIENT_MEDICINEDataTable tableIN_PATIENT_MEDICINE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal IN_PATIENT_MEDICINERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIN_PATIENT_MEDICINE = ((IN_PATIENT_MEDICINEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Admission_Number {
                get {
                    return ((string)(this[this.tableIN_PATIENT_MEDICINE.Admission_NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_MEDICINE.Admission_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Drug_Code {
                get {
                    return ((string)(this[this.tableIN_PATIENT_MEDICINE.Drug_CodeColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_MEDICINE.Drug_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Quantity {
                get {
                    return ((string)(this[this.tableIN_PATIENT_MEDICINE.QuantityColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_MEDICINE.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Given_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableIN_PATIENT_MEDICINE.Given_TimeColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_MEDICINE.Given_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Given_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableIN_PATIENT_MEDICINE.Given_DateColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_MEDICINE.Given_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUGRow DRUGRow {
                get {
                    return ((DRUGRow)(this.GetParentRow(this.Table.ParentRelations["FK__IN_PATIEN__Drug___01142BA1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__IN_PATIEN__Drug___01142BA1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTRow IN_PATIENTRow {
                get {
                    return ((IN_PATIENTRow)(this.GetParentRow(this.Table.ParentRelations["fk_IN_PATIENT_MEDICINE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_IN_PATIENT_MEDICINE"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IN_PATIENT_REPORTRow : global::System.Data.DataRow {
            
            private IN_PATIENT_REPORTDataTable tableIN_PATIENT_REPORT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal IN_PATIENT_REPORTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIN_PATIENT_REPORT = ((IN_PATIENT_REPORTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableIN_PATIENT_REPORT.NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_REPORT.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string In_Patient_Report_No {
                get {
                    try {
                        return ((string)(this[this.tableIN_PATIENT_REPORT.In_Patient_Report_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'In_Patient_Report_No\' in table \'IN_PATIENT_REPORT\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableIN_PATIENT_REPORT.In_Patient_Report_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Admission_Number {
                get {
                    return ((string)(this[this.tableIN_PATIENT_REPORT.Admission_NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_REPORT.Admission_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] Report {
                get {
                    return ((byte[])(this[this.tableIN_PATIENT_REPORT.ReportColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_REPORT.ReportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Issue_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableIN_PATIENT_REPORT.Issue_DateColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_REPORT.Issue_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Issue_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableIN_PATIENT_REPORT.Issue_TimeColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_REPORT.Issue_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTRow IN_PATIENTRow {
                get {
                    return ((IN_PATIENTRow)(this.GetParentRow(this.Table.ParentRelations["fk_IN_PATIENT_REPORT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_IN_PATIENT_REPORT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIn_Patient_Report_NoNull() {
                return this.IsNull(this.tableIN_PATIENT_REPORT.In_Patient_Report_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIn_Patient_Report_NoNull() {
                this[this.tableIN_PATIENT_REPORT.In_Patient_Report_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_IN_PATIENTRow[] GetREPORT_IN_PATIENTRows() {
                if ((this.Table.ChildRelations["FK__REPORT_IN__In_Pa__2EDAF651"] == null)) {
                    return new REPORT_IN_PATIENTRow[0];
                }
                else {
                    return ((REPORT_IN_PATIENTRow[])(base.GetChildRows(this.Table.ChildRelations["FK__REPORT_IN__In_Pa__2EDAF651"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IN_PATIENT_SCANRow : global::System.Data.DataRow {
            
            private IN_PATIENT_SCANDataTable tableIN_PATIENT_SCAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal IN_PATIENT_SCANRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIN_PATIENT_SCAN = ((IN_PATIENT_SCANDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableIN_PATIENT_SCAN.NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_SCAN.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string In_Patient_Scan_No {
                get {
                    try {
                        return ((string)(this[this.tableIN_PATIENT_SCAN.In_Patient_Scan_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'In_Patient_Scan_No\' in table \'IN_PATIENT_SCAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIN_PATIENT_SCAN.In_Patient_Scan_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Admission_Number {
                get {
                    return ((string)(this[this.tableIN_PATIENT_SCAN.Admission_NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_SCAN.Admission_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] Scan_Report {
                get {
                    return ((byte[])(this[this.tableIN_PATIENT_SCAN.Scan_ReportColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_SCAN.Scan_ReportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Issue_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableIN_PATIENT_SCAN.Issue_DateColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_SCAN.Issue_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Issue_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableIN_PATIENT_SCAN.Issue_TimeColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_SCAN.Issue_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ward_Number {
                get {
                    return ((string)(this[this.tableIN_PATIENT_SCAN.Ward_NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_SCAN.Ward_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Room_Number {
                get {
                    return ((string)(this[this.tableIN_PATIENT_SCAN.Room_NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_SCAN.Room_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Specialist_Doctor_Id {
                get {
                    return ((string)(this[this.tableIN_PATIENT_SCAN.Specialist_Doctor_IdColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_SCAN.Specialist_Doctor_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROOMRow ROOMRow {
                get {
                    return ((ROOMRow)(this.GetParentRow(this.Table.ParentRelations["FK__IN_PATIEN__Room___2645B050"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__IN_PATIEN__Room___2645B050"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow SPECIALIST_DOCTORRow {
                get {
                    return ((SPECIALIST_DOCTORRow)(this.GetParentRow(this.Table.ParentRelations["FK__IN_PATIEN__Speci__2739D489"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__IN_PATIEN__Speci__2739D489"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARDRow WARDRow {
                get {
                    return ((WARDRow)(this.GetParentRow(this.Table.ParentRelations["FK__IN_PATIEN__Ward___25518C17"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__IN_PATIEN__Ward___25518C17"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTRow IN_PATIENTRow {
                get {
                    return ((IN_PATIENTRow)(this.GetParentRow(this.Table.ParentRelations["fk_IN_PATIENT_SCAN"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_IN_PATIENT_SCAN"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIn_Patient_Scan_NoNull() {
                return this.IsNull(this.tableIN_PATIENT_SCAN.In_Patient_Scan_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIn_Patient_Scan_NoNull() {
                this[this.tableIN_PATIENT_SCAN.In_Patient_Scan_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_IN_PATIENTRow[] GetREPORT_IN_PATIENTRows() {
                if ((this.Table.ChildRelations["FK__REPORT_IN__In_Pa__30C33EC3"] == null)) {
                    return new REPORT_IN_PATIENTRow[0];
                }
                else {
                    return ((REPORT_IN_PATIENTRow[])(base.GetChildRows(this.Table.ChildRelations["FK__REPORT_IN__In_Pa__30C33EC3"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IN_PATIENT_XRAYRow : global::System.Data.DataRow {
            
            private IN_PATIENT_XRAYDataTable tableIN_PATIENT_XRAY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal IN_PATIENT_XRAYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIN_PATIENT_XRAY = ((IN_PATIENT_XRAYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableIN_PATIENT_XRAY.NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_XRAY.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string In_Patient_X_Ray_No {
                get {
                    try {
                        return ((string)(this[this.tableIN_PATIENT_XRAY.In_Patient_X_Ray_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'In_Patient_X_Ray_No\' in table \'IN_PATIENT_XRAY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIN_PATIENT_XRAY.In_Patient_X_Ray_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Admission_Number {
                get {
                    return ((string)(this[this.tableIN_PATIENT_XRAY.Admission_NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_XRAY.Admission_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] X_Ray {
                get {
                    return ((byte[])(this[this.tableIN_PATIENT_XRAY.X_RayColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_XRAY.X_RayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Issue_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableIN_PATIENT_XRAY.Issue_DateColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_XRAY.Issue_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Issue_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableIN_PATIENT_XRAY.Issue_TimeColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_XRAY.Issue_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ward_Number {
                get {
                    return ((string)(this[this.tableIN_PATIENT_XRAY.Ward_NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_XRAY.Ward_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Room_Number {
                get {
                    return ((string)(this[this.tableIN_PATIENT_XRAY.Room_NumberColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_XRAY.Room_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Specialist_Doctor_Id {
                get {
                    return ((string)(this[this.tableIN_PATIENT_XRAY.Specialist_Doctor_IdColumn]));
                }
                set {
                    this[this.tableIN_PATIENT_XRAY.Specialist_Doctor_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROOMRow ROOMRow {
                get {
                    return ((ROOMRow)(this.GetParentRow(this.Table.ParentRelations["FK__IN_PATIEN__Room___1BC821DD"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__IN_PATIEN__Room___1BC821DD"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow SPECIALIST_DOCTORRow {
                get {
                    return ((SPECIALIST_DOCTORRow)(this.GetParentRow(this.Table.ParentRelations["FK__IN_PATIEN__Speci__1CBC4616"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__IN_PATIEN__Speci__1CBC4616"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARDRow WARDRow {
                get {
                    return ((WARDRow)(this.GetParentRow(this.Table.ParentRelations["FK__IN_PATIEN__Ward___1AD3FDA4"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__IN_PATIEN__Ward___1AD3FDA4"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTRow IN_PATIENTRow {
                get {
                    return ((IN_PATIENTRow)(this.GetParentRow(this.Table.ParentRelations["fk_IN_PATIENT_XRAY"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_IN_PATIENT_XRAY"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIn_Patient_X_Ray_NoNull() {
                return this.IsNull(this.tableIN_PATIENT_XRAY.In_Patient_X_Ray_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIn_Patient_X_Ray_NoNull() {
                this[this.tableIN_PATIENT_XRAY.In_Patient_X_Ray_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_IN_PATIENTRow[] GetREPORT_IN_PATIENTRows() {
                if ((this.Table.ChildRelations["FK__REPORT_IN__In_Pa__2FCF1A8A"] == null)) {
                    return new REPORT_IN_PATIENTRow[0];
                }
                else {
                    return ((REPORT_IN_PATIENTRow[])(base.GetChildRows(this.Table.ChildRelations["FK__REPORT_IN__In_Pa__2FCF1A8A"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IN_SAMPLERow : global::System.Data.DataRow {
            
            private IN_SAMPLEDataTable tableIN_SAMPLE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal IN_SAMPLERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIN_SAMPLE = ((IN_SAMPLEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableIN_SAMPLE.NumberColumn]));
                }
                set {
                    this[this.tableIN_SAMPLE.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Sample_In_Number {
                get {
                    try {
                        return ((string)(this[this.tableIN_SAMPLE.Sample_In_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sample_In_Number\' in table \'IN_SAMPLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIN_SAMPLE.Sample_In_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Patient_Id_Number {
                get {
                    return ((int)(this[this.tableIN_SAMPLE.Patient_Id_NumberColumn]));
                }
                set {
                    this[this.tableIN_SAMPLE.Patient_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Sample_Type {
                get {
                    return ((string)(this[this.tableIN_SAMPLE.Sample_TypeColumn]));
                }
                set {
                    this[this.tableIN_SAMPLE.Sample_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ward_Number {
                get {
                    return ((string)(this[this.tableIN_SAMPLE.Ward_NumberColumn]));
                }
                set {
                    this[this.tableIN_SAMPLE.Ward_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Room_Number {
                get {
                    return ((string)(this[this.tableIN_SAMPLE.Room_NumberColumn]));
                }
                set {
                    this[this.tableIN_SAMPLE.Room_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Specialist_Doctor_Id {
                get {
                    return ((string)(this[this.tableIN_SAMPLE.Specialist_Doctor_IdColumn]));
                }
                set {
                    this[this.tableIN_SAMPLE.Specialist_Doctor_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Laboratory_Staff_Id {
                get {
                    return ((string)(this[this.tableIN_SAMPLE.Laboratory_Staff_IdColumn]));
                }
                set {
                    this[this.tableIN_SAMPLE.Laboratory_Staff_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Received_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableIN_SAMPLE.Received_DateColumn]));
                }
                set {
                    this[this.tableIN_SAMPLE.Received_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Received_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableIN_SAMPLE.Received_TimeColumn]));
                }
                set {
                    this[this.tableIN_SAMPLE.Received_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow SPECIALIST_DOCTORRow {
                get {
                    return ((SPECIALIST_DOCTORRow)(this.GetParentRow(this.Table.ParentRelations["FK__IN_SAMPLE__Speci__0B91BA14"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__IN_SAMPLE__Speci__0B91BA14"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow PATIENT_PRIVATE_DETAILRow {
                get {
                    return ((PATIENT_PRIVATE_DETAILRow)(this.GetParentRow(this.Table.ParentRelations["fk_IN_SAMPLE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_IN_SAMPLE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSample_In_NumberNull() {
                return this.IsNull(this.tableIN_SAMPLE.Sample_In_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSample_In_NumberNull() {
                this[this.tableIN_SAMPLE.Sample_In_NumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LABORATORY_STAFFRow : global::System.Data.DataRow {
            
            private LABORATORY_STAFFDataTable tableLABORATORY_STAFF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LABORATORY_STAFFRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLABORATORY_STAFF = ((LABORATORY_STAFFDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableLABORATORY_STAFF.NumberColumn]));
                }
                set {
                    this[this.tableLABORATORY_STAFF.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Laboratory_Staff_Id {
                get {
                    try {
                        return ((string)(this[this.tableLABORATORY_STAFF.Laboratory_Staff_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Laboratory_Staff_Id\' in table \'LABORATORY_STAFF\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLABORATORY_STAFF.Laboratory_Staff_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string L_Officer_First_Name {
                get {
                    return ((string)(this[this.tableLABORATORY_STAFF.L_Officer_First_NameColumn]));
                }
                set {
                    this[this.tableLABORATORY_STAFF.L_Officer_First_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string L_Officer_Middle_Name {
                get {
                    try {
                        return ((string)(this[this.tableLABORATORY_STAFF.L_Officer_Middle_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'L_Officer_Middle_Name\' in table \'LABORATORY_STAFF\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLABORATORY_STAFF.L_Officer_Middle_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string L_Officer_Last_Name {
                get {
                    return ((string)(this[this.tableLABORATORY_STAFF.L_Officer_Last_NameColumn]));
                }
                set {
                    this[this.tableLABORATORY_STAFF.L_Officer_Last_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string L_Officer_Address {
                get {
                    return ((string)(this[this.tableLABORATORY_STAFF.L_Officer_AddressColumn]));
                }
                set {
                    this[this.tableLABORATORY_STAFF.L_Officer_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int L_Officer_Tele_Number {
                get {
                    return ((int)(this[this.tableLABORATORY_STAFF.L_Officer_Tele_NumberColumn]));
                }
                set {
                    this[this.tableLABORATORY_STAFF.L_Officer_Tele_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime L_Officer_DOB {
                get {
                    return ((global::System.DateTime)(this[this.tableLABORATORY_STAFF.L_Officer_DOBColumn]));
                }
                set {
                    this[this.tableLABORATORY_STAFF.L_Officer_DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal L_Officer_Salary {
                get {
                    return ((decimal)(this[this.tableLABORATORY_STAFF.L_Officer_SalaryColumn]));
                }
                set {
                    this[this.tableLABORATORY_STAFF.L_Officer_SalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Designation {
                get {
                    return ((string)(this[this.tableLABORATORY_STAFF.DesignationColumn]));
                }
                set {
                    this[this.tableLABORATORY_STAFF.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime L_Job_Start_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableLABORATORY_STAFF.L_Job_Start_DateColumn]));
                }
                set {
                    this[this.tableLABORATORY_STAFF.L_Job_Start_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLaboratory_Staff_IdNull() {
                return this.IsNull(this.tableLABORATORY_STAFF.Laboratory_Staff_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLaboratory_Staff_IdNull() {
                this[this.tableLABORATORY_STAFF.Laboratory_Staff_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsL_Officer_Middle_NameNull() {
                return this.IsNull(this.tableLABORATORY_STAFF.L_Officer_Middle_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetL_Officer_Middle_NameNull() {
                this[this.tableLABORATORY_STAFF.L_Officer_Middle_NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LOG_IN_DETAILRow : global::System.Data.DataRow {
            
            private LOG_IN_DETAILDataTable tableLOG_IN_DETAIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LOG_IN_DETAILRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLOG_IN_DETAIL = ((LOG_IN_DETAILDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Roll_Id {
                get {
                    return ((string)(this[this.tableLOG_IN_DETAIL.Roll_IdColumn]));
                }
                set {
                    this[this.tableLOG_IN_DETAIL.Roll_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Log_In_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableLOG_IN_DETAIL.Log_In_DateColumn]));
                }
                set {
                    this[this.tableLOG_IN_DETAIL.Log_In_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Log_In_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableLOG_IN_DETAIL.Log_In_TimeColumn]));
                }
                set {
                    this[this.tableLOG_IN_DETAIL.Log_In_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCOUNTRow ACCOUNTRow {
                get {
                    return ((ACCOUNTRow)(this.GetParentRow(this.Table.ParentRelations["FK_LOG_IN_DETAIL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_LOG_IN_DETAIL"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LOG_IN_USERRow : global::System.Data.DataRow {
            
            private LOG_IN_USERDataTable tableLOG_IN_USER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LOG_IN_USERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLOG_IN_USER = ((LOG_IN_USERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Roll_Id {
                get {
                    return ((string)(this[this.tableLOG_IN_USER.Roll_IdColumn]));
                }
                set {
                    this[this.tableLOG_IN_USER.Roll_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Roll_name {
                get {
                    try {
                        return ((string)(this[this.tableLOG_IN_USER.Roll_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roll_name\' in table \'LOG_IN_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOG_IN_USER.Roll_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string First_Name {
                get {
                    return ((string)(this[this.tableLOG_IN_USER.First_NameColumn]));
                }
                set {
                    this[this.tableLOG_IN_USER.First_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Middle_Name {
                get {
                    try {
                        return ((string)(this[this.tableLOG_IN_USER.Middle_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Middle_Name\' in table \'LOG_IN_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOG_IN_USER.Middle_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Surname {
                get {
                    return ((string)(this[this.tableLOG_IN_USER.SurnameColumn]));
                }
                set {
                    this[this.tableLOG_IN_USER.SurnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string User_Address {
                get {
                    try {
                        return ((string)(this[this.tableLOG_IN_USER.User_AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User_Address\' in table \'LOG_IN_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOG_IN_USER.User_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] Img {
                get {
                    try {
                        return ((byte[])(this[this.tableLOG_IN_USER.ImgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img\' in table \'LOG_IN_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOG_IN_USER.ImgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableLOG_IN_USER.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'LOG_IN_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOG_IN_USER.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int User_Tele_No {
                get {
                    try {
                        return ((int)(this[this.tableLOG_IN_USER.User_Tele_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User_Tele_No\' in table \'LOG_IN_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOG_IN_USER.User_Tele_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Date_Of_Birth {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLOG_IN_USER.Date_Of_BirthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date_Of_Birth\' in table \'LOG_IN_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOG_IN_USER.Date_Of_BirthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableLOG_IN_USER.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'LOG_IN_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOG_IN_USER.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Salary {
                get {
                    try {
                        return ((decimal)(this[this.tableLOG_IN_USER.SalaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Salary\' in table \'LOG_IN_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOG_IN_USER.SalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCOUNTRow ACCOUNTRow {
                get {
                    return ((ACCOUNTRow)(this.GetParentRow(this.Table.ParentRelations["fk_LOG_IN_USER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_LOG_IN_USER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRoll_nameNull() {
                return this.IsNull(this.tableLOG_IN_USER.Roll_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRoll_nameNull() {
                this[this.tableLOG_IN_USER.Roll_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMiddle_NameNull() {
                return this.IsNull(this.tableLOG_IN_USER.Middle_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMiddle_NameNull() {
                this[this.tableLOG_IN_USER.Middle_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUser_AddressNull() {
                return this.IsNull(this.tableLOG_IN_USER.User_AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUser_AddressNull() {
                this[this.tableLOG_IN_USER.User_AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImgNull() {
                return this.IsNull(this.tableLOG_IN_USER.ImgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImgNull() {
                this[this.tableLOG_IN_USER.ImgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGenderNull() {
                return this.IsNull(this.tableLOG_IN_USER.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGenderNull() {
                this[this.tableLOG_IN_USER.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUser_Tele_NoNull() {
                return this.IsNull(this.tableLOG_IN_USER.User_Tele_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUser_Tele_NoNull() {
                this[this.tableLOG_IN_USER.User_Tele_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDate_Of_BirthNull() {
                return this.IsNull(this.tableLOG_IN_USER.Date_Of_BirthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDate_Of_BirthNull() {
                this[this.tableLOG_IN_USER.Date_Of_BirthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableLOG_IN_USER.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDesignationNull() {
                this[this.tableLOG_IN_USER.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSalaryNull() {
                return this.IsNull(this.tableLOG_IN_USER.SalaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSalaryNull() {
                this[this.tableLOG_IN_USER.SalaryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ORGANIZATIONRow : global::System.Data.DataRow {
            
            private ORGANIZATIONDataTable tableORGANIZATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ORGANIZATIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableORGANIZATION = ((ORGANIZATIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Goverment_Reg_Number {
                get {
                    return ((string)(this[this.tableORGANIZATION.Goverment_Reg_NumberColumn]));
                }
                set {
                    this[this.tableORGANIZATION.Goverment_Reg_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Organization_Name {
                get {
                    return ((string)(this[this.tableORGANIZATION.Organization_NameColumn]));
                }
                set {
                    this[this.tableORGANIZATION.Organization_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Organization_Address {
                get {
                    return ((string)(this[this.tableORGANIZATION.Organization_AddressColumn]));
                }
                set {
                    this[this.tableORGANIZATION.Organization_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Bill_Number {
                get {
                    return ((string)(this[this.tableORGANIZATION.Bill_NumberColumn]));
                }
                set {
                    this[this.tableORGANIZATION.Bill_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Billing_Officer_Id {
                get {
                    return ((string)(this[this.tableORGANIZATION.Billing_Officer_IdColumn]));
                }
                set {
                    this[this.tableORGANIZATION.Billing_Officer_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLING_OFFICERRow BILLING_OFFICERRow {
                get {
                    return ((BILLING_OFFICERRow)(this.GetParentRow(this.Table.ParentRelations["FK__ORGANIZAT__Billi__693CA210"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__ORGANIZAT__Billi__693CA210"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLRow BILLRow {
                get {
                    return ((BILLRow)(this.GetParentRow(this.Table.ParentRelations["fk_ORGANIZATION"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_ORGANIZATION"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OUT_PATIENTRow : global::System.Data.DataRow {
            
            private OUT_PATIENTDataTable tableOUT_PATIENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal OUT_PATIENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOUT_PATIENT = ((OUT_PATIENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Out_Patient_Id_Number {
                get {
                    return ((int)(this[this.tableOUT_PATIENT.Out_Patient_Id_NumberColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT.Out_Patient_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Patient_Name {
                get {
                    return ((string)(this[this.tableOUT_PATIENT.Patient_NameColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT.Patient_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardian_NIC {
                get {
                    return ((string)(this[this.tableOUT_PATIENT.Guardian_NICColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT.Guardian_NICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Guardian_Tele_No {
                get {
                    return ((int)(this[this.tableOUT_PATIENT.Guardian_Tele_NoColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT.Guardian_Tele_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Age {
                get {
                    return ((int)(this[this.tableOUT_PATIENT.AgeColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Reason {
                get {
                    return ((string)(this[this.tableOUT_PATIENT.ReasonColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT.ReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime C_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableOUT_PATIENT.C_DateColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT.C_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan C_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableOUT_PATIENT.C_TimeColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT.C_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_MEDICINERow[] GetOUT_PATIENT_MEDICINERows() {
                if ((this.Table.ChildRelations["fk_OUT_PATIENT_MEDICINE"] == null)) {
                    return new OUT_PATIENT_MEDICINERow[0];
                }
                else {
                    return ((OUT_PATIENT_MEDICINERow[])(base.GetChildRows(this.Table.ChildRelations["fk_OUT_PATIENT_MEDICINE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_OUT_PATIENTRow[] GetREPORT_OUT_PATIENTRows() {
                if ((this.Table.ChildRelations["fk_REPORT_OUT_PATIENT"] == null)) {
                    return new REPORT_OUT_PATIENTRow[0];
                }
                else {
                    return ((REPORT_OUT_PATIENTRow[])(base.GetChildRows(this.Table.ChildRelations["fk_REPORT_OUT_PATIENT"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OUT_PATIENT_MEDICINERow : global::System.Data.DataRow {
            
            private OUT_PATIENT_MEDICINEDataTable tableOUT_PATIENT_MEDICINE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal OUT_PATIENT_MEDICINERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOUT_PATIENT_MEDICINE = ((OUT_PATIENT_MEDICINEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Out_Patient_Id_Number {
                get {
                    return ((int)(this[this.tableOUT_PATIENT_MEDICINE.Out_Patient_Id_NumberColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_MEDICINE.Out_Patient_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Drug_Code {
                get {
                    return ((string)(this[this.tableOUT_PATIENT_MEDICINE.Drug_CodeColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_MEDICINE.Drug_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Quantity {
                get {
                    return ((string)(this[this.tableOUT_PATIENT_MEDICINE.QuantityColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_MEDICINE.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number_Of_Day {
                get {
                    return ((int)(this[this.tableOUT_PATIENT_MEDICINE.Number_Of_DayColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_MEDICINE.Number_Of_DayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Issue_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableOUT_PATIENT_MEDICINE.Issue_DateColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_MEDICINE.Issue_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUGRow DRUGRow {
                get {
                    return ((DRUGRow)(this.GetParentRow(this.Table.ParentRelations["FK__OUT_PATIE__Drug___04E4BC85"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__OUT_PATIE__Drug___04E4BC85"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENTRow OUT_PATIENTRow {
                get {
                    return ((OUT_PATIENTRow)(this.GetParentRow(this.Table.ParentRelations["fk_OUT_PATIENT_MEDICINE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_OUT_PATIENT_MEDICINE"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OUT_PATIENT_REPORTRow : global::System.Data.DataRow {
            
            private OUT_PATIENT_REPORTDataTable tableOUT_PATIENT_REPORT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal OUT_PATIENT_REPORTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOUT_PATIENT_REPORT = ((OUT_PATIENT_REPORTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableOUT_PATIENT_REPORT.NumberColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_REPORT.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Out_Patient_Report_No {
                get {
                    try {
                        return ((string)(this[this.tableOUT_PATIENT_REPORT.Out_Patient_Report_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Out_Patient_Report_No\' in table \'OUT_PATIENT_REPORT\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableOUT_PATIENT_REPORT.Out_Patient_Report_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Patient_Id_Number {
                get {
                    return ((int)(this[this.tableOUT_PATIENT_REPORT.Patient_Id_NumberColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_REPORT.Patient_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] Report {
                get {
                    return ((byte[])(this[this.tableOUT_PATIENT_REPORT.ReportColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_REPORT.ReportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Issue_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableOUT_PATIENT_REPORT.Issue_DateColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_REPORT.Issue_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Issue_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableOUT_PATIENT_REPORT.Issue_TimeColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_REPORT.Issue_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow PATIENT_PRIVATE_DETAILRow {
                get {
                    return ((PATIENT_PRIVATE_DETAILRow)(this.GetParentRow(this.Table.ParentRelations["fk_OUT_PATIENT_REPORT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_OUT_PATIENT_REPORT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOut_Patient_Report_NoNull() {
                return this.IsNull(this.tableOUT_PATIENT_REPORT.Out_Patient_Report_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOut_Patient_Report_NoNull() {
                this[this.tableOUT_PATIENT_REPORT.Out_Patient_Report_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_OUT_PATIENTRow[] GetREPORT_OUT_PATIENTRows() {
                if ((this.Table.ChildRelations["FK__REPORT_OU__Out_P__3493CFA7"] == null)) {
                    return new REPORT_OUT_PATIENTRow[0];
                }
                else {
                    return ((REPORT_OUT_PATIENTRow[])(base.GetChildRows(this.Table.ChildRelations["FK__REPORT_OU__Out_P__3493CFA7"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OUT_PATIENT_SCANRow : global::System.Data.DataRow {
            
            private OUT_PATIENT_SCANDataTable tableOUT_PATIENT_SCAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal OUT_PATIENT_SCANRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOUT_PATIENT_SCAN = ((OUT_PATIENT_SCANDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableOUT_PATIENT_SCAN.NumberColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_SCAN.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Out_Patient_Scan_No {
                get {
                    try {
                        return ((string)(this[this.tableOUT_PATIENT_SCAN.Out_Patient_Scan_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Out_Patient_Scan_No\' in table \'OUT_PATIENT_SCAN\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOUT_PATIENT_SCAN.Out_Patient_Scan_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Patient_Id_Number {
                get {
                    return ((int)(this[this.tableOUT_PATIENT_SCAN.Patient_Id_NumberColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_SCAN.Patient_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] Scan_Report {
                get {
                    return ((byte[])(this[this.tableOUT_PATIENT_SCAN.Scan_ReportColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_SCAN.Scan_ReportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Issue_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableOUT_PATIENT_SCAN.Issue_DateColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_SCAN.Issue_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Issue_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableOUT_PATIENT_SCAN.Issue_TimeColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_SCAN.Issue_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Specialist_Doctor_Id {
                get {
                    return ((string)(this[this.tableOUT_PATIENT_SCAN.Specialist_Doctor_IdColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_SCAN.Specialist_Doctor_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow SPECIALIST_DOCTORRow {
                get {
                    return ((SPECIALIST_DOCTORRow)(this.GetParentRow(this.Table.ParentRelations["FK__OUT_PATIE__Speci__2B0A656D"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__OUT_PATIE__Speci__2B0A656D"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow PATIENT_PRIVATE_DETAILRow {
                get {
                    return ((PATIENT_PRIVATE_DETAILRow)(this.GetParentRow(this.Table.ParentRelations["fk_OUT_PATIENT_SCAN"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_OUT_PATIENT_SCAN"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOut_Patient_Scan_NoNull() {
                return this.IsNull(this.tableOUT_PATIENT_SCAN.Out_Patient_Scan_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOut_Patient_Scan_NoNull() {
                this[this.tableOUT_PATIENT_SCAN.Out_Patient_Scan_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_OUT_PATIENTRow[] GetREPORT_OUT_PATIENTRows() {
                if ((this.Table.ChildRelations["FK__REPORT_OU__Out_P__367C1819"] == null)) {
                    return new REPORT_OUT_PATIENTRow[0];
                }
                else {
                    return ((REPORT_OUT_PATIENTRow[])(base.GetChildRows(this.Table.ChildRelations["FK__REPORT_OU__Out_P__367C1819"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OUT_PATIENT_XRAYRow : global::System.Data.DataRow {
            
            private OUT_PATIENT_XRAYDataTable tableOUT_PATIENT_XRAY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal OUT_PATIENT_XRAYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOUT_PATIENT_XRAY = ((OUT_PATIENT_XRAYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableOUT_PATIENT_XRAY.NumberColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_XRAY.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Out_Patient_Xray_No {
                get {
                    try {
                        return ((string)(this[this.tableOUT_PATIENT_XRAY.Out_Patient_Xray_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Out_Patient_Xray_No\' in table \'OUT_PATIENT_XRAY\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOUT_PATIENT_XRAY.Out_Patient_Xray_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Patient_Id_Number {
                get {
                    return ((int)(this[this.tableOUT_PATIENT_XRAY.Patient_Id_NumberColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_XRAY.Patient_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] X_Ray {
                get {
                    return ((byte[])(this[this.tableOUT_PATIENT_XRAY.X_RayColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_XRAY.X_RayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Issue_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableOUT_PATIENT_XRAY.Issue_DateColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_XRAY.Issue_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Issue_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableOUT_PATIENT_XRAY.Issue_TimeColumn]));
                }
                set {
                    this[this.tableOUT_PATIENT_XRAY.Issue_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow PATIENT_PRIVATE_DETAILRow {
                get {
                    return ((PATIENT_PRIVATE_DETAILRow)(this.GetParentRow(this.Table.ParentRelations["fk_OUT_PATIENT_XRAY"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_OUT_PATIENT_XRAY"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOut_Patient_Xray_NoNull() {
                return this.IsNull(this.tableOUT_PATIENT_XRAY.Out_Patient_Xray_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOut_Patient_Xray_NoNull() {
                this[this.tableOUT_PATIENT_XRAY.Out_Patient_Xray_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_OUT_PATIENTRow[] GetREPORT_OUT_PATIENTRows() {
                if ((this.Table.ChildRelations["FK__REPORT_OU__Out_P__3587F3E0"] == null)) {
                    return new REPORT_OUT_PATIENTRow[0];
                }
                else {
                    return ((REPORT_OUT_PATIENTRow[])(base.GetChildRows(this.Table.ChildRelations["FK__REPORT_OU__Out_P__3587F3E0"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OUT_SAMPLERow : global::System.Data.DataRow {
            
            private OUT_SAMPLEDataTable tableOUT_SAMPLE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal OUT_SAMPLERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOUT_SAMPLE = ((OUT_SAMPLEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableOUT_SAMPLE.NumberColumn]));
                }
                set {
                    this[this.tableOUT_SAMPLE.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Sample_Out_Number {
                get {
                    try {
                        return ((string)(this[this.tableOUT_SAMPLE.Sample_Out_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sample_Out_Number\' in table \'OUT_SAMPLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOUT_SAMPLE.Sample_Out_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Patient_Id_Number {
                get {
                    return ((int)(this[this.tableOUT_SAMPLE.Patient_Id_NumberColumn]));
                }
                set {
                    this[this.tableOUT_SAMPLE.Patient_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Sample_Type {
                get {
                    return ((string)(this[this.tableOUT_SAMPLE.Sample_TypeColumn]));
                }
                set {
                    this[this.tableOUT_SAMPLE.Sample_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Specialist_Doctor_Id {
                get {
                    return ((string)(this[this.tableOUT_SAMPLE.Specialist_Doctor_IdColumn]));
                }
                set {
                    this[this.tableOUT_SAMPLE.Specialist_Doctor_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Laboratory_Staff_Id {
                get {
                    return ((string)(this[this.tableOUT_SAMPLE.Laboratory_Staff_IdColumn]));
                }
                set {
                    this[this.tableOUT_SAMPLE.Laboratory_Staff_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Received_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableOUT_SAMPLE.Received_DateColumn]));
                }
                set {
                    this[this.tableOUT_SAMPLE.Received_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Received_Time {
                get {
                    return ((global::System.TimeSpan)(this[this.tableOUT_SAMPLE.Received_TimeColumn]));
                }
                set {
                    this[this.tableOUT_SAMPLE.Received_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow SPECIALIST_DOCTORRow {
                get {
                    return ((SPECIALIST_DOCTORRow)(this.GetParentRow(this.Table.ParentRelations["FK__OUT_SAMPL__Speci__0F624AF8"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__OUT_SAMPL__Speci__0F624AF8"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow PATIENT_PRIVATE_DETAILRow {
                get {
                    return ((PATIENT_PRIVATE_DETAILRow)(this.GetParentRow(this.Table.ParentRelations["fk_OUT_SAMPLE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_OUT_SAMPLE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSample_Out_NumberNull() {
                return this.IsNull(this.tableOUT_SAMPLE.Sample_Out_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSample_Out_NumberNull() {
                this[this.tableOUT_SAMPLE.Sample_Out_NumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PATIENT_APPOINTMENT_DETAILSRow : global::System.Data.DataRow {
            
            private PATIENT_APPOINTMENT_DETAILSDataTable tablePATIENT_APPOINTMENT_DETAILS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PATIENT_APPOINTMENT_DETAILSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePATIENT_APPOINTMENT_DETAILS = ((PATIENT_APPOINTMENT_DETAILSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Patient_Id_Number {
                get {
                    return ((int)(this[this.tablePATIENT_APPOINTMENT_DETAILS.Patient_Id_NumberColumn]));
                }
                set {
                    this[this.tablePATIENT_APPOINTMENT_DETAILS.Patient_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Invoice_Number {
                get {
                    return ((string)(this[this.tablePATIENT_APPOINTMENT_DETAILS.Invoice_NumberColumn]));
                }
                set {
                    this[this.tablePATIENT_APPOINTMENT_DETAILS.Invoice_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CUSTOMERRow CUSTOMERRow {
                get {
                    return ((CUSTOMERRow)(this.GetParentRow(this.Table.ParentRelations["FK__PATIENT_A__Invoi__59063A47"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__PATIENT_A__Invoi__59063A47"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow PATIENT_PRIVATE_DETAILRow {
                get {
                    return ((PATIENT_PRIVATE_DETAILRow)(this.GetParentRow(this.Table.ParentRelations["fk_PATIENT_APPOINTMENT_DETAILS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_PATIENT_APPOINTMENT_DETAILS"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PATIENT_PRIVATE_DETAILRow : global::System.Data.DataRow {
            
            private PATIENT_PRIVATE_DETAILDataTable tablePATIENT_PRIVATE_DETAIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PATIENT_PRIVATE_DETAILRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePATIENT_PRIVATE_DETAIL = ((PATIENT_PRIVATE_DETAILDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Patient_Id_Number {
                get {
                    return ((int)(this[this.tablePATIENT_PRIVATE_DETAIL.Patient_Id_NumberColumn]));
                }
                set {
                    this[this.tablePATIENT_PRIVATE_DETAIL.Patient_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Patient_Full_Name {
                get {
                    return ((string)(this[this.tablePATIENT_PRIVATE_DETAIL.Patient_Full_NameColumn]));
                }
                set {
                    this[this.tablePATIENT_PRIVATE_DETAIL.Patient_Full_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Gender {
                get {
                    return ((string)(this[this.tablePATIENT_PRIVATE_DETAIL.GenderColumn]));
                }
                set {
                    this[this.tablePATIENT_PRIVATE_DETAIL.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Date_Of_Birth {
                get {
                    return ((global::System.DateTime)(this[this.tablePATIENT_PRIVATE_DETAIL.Date_Of_BirthColumn]));
                }
                set {
                    this[this.tablePATIENT_PRIVATE_DETAIL.Date_Of_BirthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Age {
                get {
                    return ((int)(this[this.tablePATIENT_PRIVATE_DETAIL.AgeColumn]));
                }
                set {
                    this[this.tablePATIENT_PRIVATE_DETAIL.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Blood_Group {
                get {
                    return ((string)(this[this.tablePATIENT_PRIVATE_DETAIL.Blood_GroupColumn]));
                }
                set {
                    this[this.tablePATIENT_PRIVATE_DETAIL.Blood_GroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Guardian_Id_Number {
                get {
                    return ((string)(this[this.tablePATIENT_PRIVATE_DETAIL.Guardian_Id_NumberColumn]));
                }
                set {
                    this[this.tablePATIENT_PRIVATE_DETAIL.Guardian_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Specialist_Doctor_Id {
                get {
                    return ((string)(this[this.tablePATIENT_PRIVATE_DETAIL.Specialist_Doctor_IdColumn]));
                }
                set {
                    this[this.tablePATIENT_PRIVATE_DETAIL.Specialist_Doctor_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow SPECIALIST_DOCTORRow {
                get {
                    return ((SPECIALIST_DOCTORRow)(this.GetParentRow(this.Table.ParentRelations["FK__PATIENT_P__Speci__5070F446"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__PATIENT_P__Speci__5070F446"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GUARDIANRow GUARDIANRow {
                get {
                    return ((GUARDIANRow)(this.GetParentRow(this.Table.ParentRelations["fk_PATIENT_PRIVATE_DETAIL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_PATIENT_PRIVATE_DETAIL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HOSPITAL_CUSTOMERRow[] GetHOSPITAL_CUSTOMERRows() {
                if ((this.Table.ChildRelations["fk_HOSPITAL_CUSTOMER"] == null)) {
                    return new HOSPITAL_CUSTOMERRow[0];
                }
                else {
                    return ((HOSPITAL_CUSTOMERRow[])(base.GetChildRows(this.Table.ChildRelations["fk_HOSPITAL_CUSTOMER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTRow[] GetIN_PATIENTRows() {
                if ((this.Table.ChildRelations["FK__IN_PATIEN__Patie__5EBF139D"] == null)) {
                    return new IN_PATIENTRow[0];
                }
                else {
                    return ((IN_PATIENTRow[])(base.GetChildRows(this.Table.ChildRelations["FK__IN_PATIEN__Patie__5EBF139D"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_SAMPLERow[] GetIN_SAMPLERows() {
                if ((this.Table.ChildRelations["fk_IN_SAMPLE"] == null)) {
                    return new IN_SAMPLERow[0];
                }
                else {
                    return ((IN_SAMPLERow[])(base.GetChildRows(this.Table.ChildRelations["fk_IN_SAMPLE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_REPORTRow[] GetOUT_PATIENT_REPORTRows() {
                if ((this.Table.ChildRelations["fk_OUT_PATIENT_REPORT"] == null)) {
                    return new OUT_PATIENT_REPORTRow[0];
                }
                else {
                    return ((OUT_PATIENT_REPORTRow[])(base.GetChildRows(this.Table.ChildRelations["fk_OUT_PATIENT_REPORT"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_SCANRow[] GetOUT_PATIENT_SCANRows() {
                if ((this.Table.ChildRelations["fk_OUT_PATIENT_SCAN"] == null)) {
                    return new OUT_PATIENT_SCANRow[0];
                }
                else {
                    return ((OUT_PATIENT_SCANRow[])(base.GetChildRows(this.Table.ChildRelations["fk_OUT_PATIENT_SCAN"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_XRAYRow[] GetOUT_PATIENT_XRAYRows() {
                if ((this.Table.ChildRelations["fk_OUT_PATIENT_XRAY"] == null)) {
                    return new OUT_PATIENT_XRAYRow[0];
                }
                else {
                    return ((OUT_PATIENT_XRAYRow[])(base.GetChildRows(this.Table.ChildRelations["fk_OUT_PATIENT_XRAY"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_SAMPLERow[] GetOUT_SAMPLERows() {
                if ((this.Table.ChildRelations["fk_OUT_SAMPLE"] == null)) {
                    return new OUT_SAMPLERow[0];
                }
                else {
                    return ((OUT_SAMPLERow[])(base.GetChildRows(this.Table.ChildRelations["fk_OUT_SAMPLE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_APPOINTMENT_DETAILSRow[] GetPATIENT_APPOINTMENT_DETAILSRows() {
                if ((this.Table.ChildRelations["fk_PATIENT_APPOINTMENT_DETAILS"] == null)) {
                    return new PATIENT_APPOINTMENT_DETAILSRow[0];
                }
                else {
                    return ((PATIENT_APPOINTMENT_DETAILSRow[])(base.GetChildRows(this.Table.ChildRelations["fk_PATIENT_APPOINTMENT_DETAILS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PHARMACY_MEDICINESRow : global::System.Data.DataRow {
            
            private PHARMACY_MEDICINESDataTable tablePHARMACY_MEDICINES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PHARMACY_MEDICINESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePHARMACY_MEDICINES = ((PHARMACY_MEDICINESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pharmacy_Invoice_Number {
                get {
                    return ((string)(this[this.tablePHARMACY_MEDICINES.Pharmacy_Invoice_NumberColumn]));
                }
                set {
                    this[this.tablePHARMACY_MEDICINES.Pharmacy_Invoice_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Drug_Code {
                get {
                    return ((string)(this[this.tablePHARMACY_MEDICINES.Drug_CodeColumn]));
                }
                set {
                    this[this.tablePHARMACY_MEDICINES.Drug_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Quantity {
                get {
                    return ((int)(this[this.tablePHARMACY_MEDICINES.QuantityColumn]));
                }
                set {
                    this[this.tablePHARMACY_MEDICINES.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number_Of_Days {
                get {
                    return ((int)(this[this.tablePHARMACY_MEDICINES.Number_Of_DaysColumn]));
                }
                set {
                    this[this.tablePHARMACY_MEDICINES.Number_Of_DaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUGRow DRUGRow {
                get {
                    return ((DRUGRow)(this.GetParentRow(this.Table.ParentRelations["FK__PHARMACY___Drug___7C4F7684"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__PHARMACY___Drug___7C4F7684"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HOSPITAL_CUSTOMERRow HOSPITAL_CUSTOMERRow {
                get {
                    return ((HOSPITAL_CUSTOMERRow)(this.GetParentRow(this.Table.ParentRelations["fk_PHARMACY_MEDICINES"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_PHARMACY_MEDICINES"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PHARMACY_STAFFRow : global::System.Data.DataRow {
            
            private PHARMACY_STAFFDataTable tablePHARMACY_STAFF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PHARMACY_STAFFRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePHARMACY_STAFF = ((PHARMACY_STAFFDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tablePHARMACY_STAFF.NumberColumn]));
                }
                set {
                    this[this.tablePHARMACY_STAFF.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pharmacy_Staff_Id {
                get {
                    try {
                        return ((string)(this[this.tablePHARMACY_STAFF.Pharmacy_Staff_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pharmacy_Staff_Id\' in table \'PHARMACY_STAFF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHARMACY_STAFF.Pharmacy_Staff_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string P_Officer_First_Name {
                get {
                    return ((string)(this[this.tablePHARMACY_STAFF.P_Officer_First_NameColumn]));
                }
                set {
                    this[this.tablePHARMACY_STAFF.P_Officer_First_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string P_Officer_Middle_Name {
                get {
                    try {
                        return ((string)(this[this.tablePHARMACY_STAFF.P_Officer_Middle_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P_Officer_Middle_Name\' in table \'PHARMACY_STAFF\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePHARMACY_STAFF.P_Officer_Middle_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string P_Officer_Last_Name {
                get {
                    return ((string)(this[this.tablePHARMACY_STAFF.P_Officer_Last_NameColumn]));
                }
                set {
                    this[this.tablePHARMACY_STAFF.P_Officer_Last_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string P_Officer_Address {
                get {
                    return ((string)(this[this.tablePHARMACY_STAFF.P_Officer_AddressColumn]));
                }
                set {
                    this[this.tablePHARMACY_STAFF.P_Officer_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int P_Officer_Tele_Number {
                get {
                    return ((int)(this[this.tablePHARMACY_STAFF.P_Officer_Tele_NumberColumn]));
                }
                set {
                    this[this.tablePHARMACY_STAFF.P_Officer_Tele_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime P_Officer_DOB {
                get {
                    return ((global::System.DateTime)(this[this.tablePHARMACY_STAFF.P_Officer_DOBColumn]));
                }
                set {
                    this[this.tablePHARMACY_STAFF.P_Officer_DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal P_Officer_Salary {
                get {
                    return ((decimal)(this[this.tablePHARMACY_STAFF.P_Officer_SalaryColumn]));
                }
                set {
                    this[this.tablePHARMACY_STAFF.P_Officer_SalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Designation {
                get {
                    return ((string)(this[this.tablePHARMACY_STAFF.DesignationColumn]));
                }
                set {
                    this[this.tablePHARMACY_STAFF.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime P_Job_Start_Date {
                get {
                    return ((global::System.DateTime)(this[this.tablePHARMACY_STAFF.P_Job_Start_DateColumn]));
                }
                set {
                    this[this.tablePHARMACY_STAFF.P_Job_Start_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Roll_Id {
                get {
                    try {
                        return ((string)(this[this.tablePHARMACY_STAFF.Roll_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roll_Id\' in table \'PHARMACY_STAFF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHARMACY_STAFF.Roll_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCOUNTRow ACCOUNTRow {
                get {
                    return ((ACCOUNTRow)(this.GetParentRow(this.Table.ParentRelations["fk_PHARMACY_STAFF"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_PHARMACY_STAFF"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPharmacy_Staff_IdNull() {
                return this.IsNull(this.tablePHARMACY_STAFF.Pharmacy_Staff_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPharmacy_Staff_IdNull() {
                this[this.tablePHARMACY_STAFF.Pharmacy_Staff_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP_Officer_Middle_NameNull() {
                return this.IsNull(this.tablePHARMACY_STAFF.P_Officer_Middle_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP_Officer_Middle_NameNull() {
                this[this.tablePHARMACY_STAFF.P_Officer_Middle_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRoll_IdNull() {
                return this.IsNull(this.tablePHARMACY_STAFF.Roll_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRoll_IdNull() {
                this[this.tablePHARMACY_STAFF.Roll_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HOSPITAL_CUSTOMERRow[] GetHOSPITAL_CUSTOMERRows() {
                if ((this.Table.ChildRelations["FK__HOSPITAL___Pharm__787EE5A0"] == null)) {
                    return new HOSPITAL_CUSTOMERRow[0];
                }
                else {
                    return ((HOSPITAL_CUSTOMERRow[])(base.GetChildRows(this.Table.ChildRelations["FK__HOSPITAL___Pharm__787EE5A0"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QUALIFICATIONRow : global::System.Data.DataRow {
            
            private QUALIFICATIONDataTable tableQUALIFICATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal QUALIFICATIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQUALIFICATION = ((QUALIFICATIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Specialist_Doctor_Id {
                get {
                    return ((string)(this[this.tableQUALIFICATION.Specialist_Doctor_IdColumn]));
                }
                set {
                    this[this.tableQUALIFICATION.Specialist_Doctor_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Qualification {
                get {
                    return ((string)(this[this.tableQUALIFICATION.QualificationColumn]));
                }
                set {
                    this[this.tableQUALIFICATION.QualificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow SPECIALIST_DOCTORRow {
                get {
                    return ((SPECIALIST_DOCTORRow)(this.GetParentRow(this.Table.ParentRelations["fk_QUALIFICATION"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_QUALIFICATION"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class REPORT_IN_PATIENTRow : global::System.Data.DataRow {
            
            private REPORT_IN_PATIENTDataTable tableREPORT_IN_PATIENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal REPORT_IN_PATIENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableREPORT_IN_PATIENT = ((REPORT_IN_PATIENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Admission_Number {
                get {
                    return ((string)(this[this.tableREPORT_IN_PATIENT.Admission_NumberColumn]));
                }
                set {
                    this[this.tableREPORT_IN_PATIENT.Admission_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string In_Patient_Report_No {
                get {
                    return ((string)(this[this.tableREPORT_IN_PATIENT.In_Patient_Report_NoColumn]));
                }
                set {
                    this[this.tableREPORT_IN_PATIENT.In_Patient_Report_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string In_Patient_Xray_No {
                get {
                    try {
                        return ((string)(this[this.tableREPORT_IN_PATIENT.In_Patient_Xray_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'In_Patient_Xray_No\' in table \'REPORT_IN_PATIENT\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableREPORT_IN_PATIENT.In_Patient_Xray_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string In_Patient_Scan_No {
                get {
                    try {
                        return ((string)(this[this.tableREPORT_IN_PATIENT.In_Patient_Scan_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'In_Patient_Scan_No\' in table \'REPORT_IN_PATIENT\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableREPORT_IN_PATIENT.In_Patient_Scan_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_REPORTRow IN_PATIENT_REPORTRow {
                get {
                    return ((IN_PATIENT_REPORTRow)(this.GetParentRow(this.Table.ParentRelations["FK__REPORT_IN__In_Pa__2EDAF651"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__REPORT_IN__In_Pa__2EDAF651"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_XRAYRow IN_PATIENT_XRAYRow {
                get {
                    return ((IN_PATIENT_XRAYRow)(this.GetParentRow(this.Table.ParentRelations["FK__REPORT_IN__In_Pa__2FCF1A8A"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__REPORT_IN__In_Pa__2FCF1A8A"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_SCANRow IN_PATIENT_SCANRow {
                get {
                    return ((IN_PATIENT_SCANRow)(this.GetParentRow(this.Table.ParentRelations["FK__REPORT_IN__In_Pa__30C33EC3"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__REPORT_IN__In_Pa__30C33EC3"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTRow IN_PATIENTRow {
                get {
                    return ((IN_PATIENTRow)(this.GetParentRow(this.Table.ParentRelations["fk_REPORT_IN_PATIENT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_REPORT_IN_PATIENT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIn_Patient_Xray_NoNull() {
                return this.IsNull(this.tableREPORT_IN_PATIENT.In_Patient_Xray_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIn_Patient_Xray_NoNull() {
                this[this.tableREPORT_IN_PATIENT.In_Patient_Xray_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIn_Patient_Scan_NoNull() {
                return this.IsNull(this.tableREPORT_IN_PATIENT.In_Patient_Scan_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIn_Patient_Scan_NoNull() {
                this[this.tableREPORT_IN_PATIENT.In_Patient_Scan_NoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class REPORT_OUT_PATIENTRow : global::System.Data.DataRow {
            
            private REPORT_OUT_PATIENTDataTable tableREPORT_OUT_PATIENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal REPORT_OUT_PATIENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableREPORT_OUT_PATIENT = ((REPORT_OUT_PATIENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Out_Patient_Id_Number {
                get {
                    return ((int)(this[this.tableREPORT_OUT_PATIENT.Out_Patient_Id_NumberColumn]));
                }
                set {
                    this[this.tableREPORT_OUT_PATIENT.Out_Patient_Id_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Out_Patient_Report_No {
                get {
                    return ((string)(this[this.tableREPORT_OUT_PATIENT.Out_Patient_Report_NoColumn]));
                }
                set {
                    this[this.tableREPORT_OUT_PATIENT.Out_Patient_Report_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Out_Patient_Xray_No {
                get {
                    try {
                        return ((string)(this[this.tableREPORT_OUT_PATIENT.Out_Patient_Xray_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Out_Patient_Xray_No\' in table \'REPORT_OUT_PATIENT\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableREPORT_OUT_PATIENT.Out_Patient_Xray_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Out_Patient_Scan_No {
                get {
                    try {
                        return ((string)(this[this.tableREPORT_OUT_PATIENT.Out_Patient_Scan_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Out_Patient_Scan_No\' in table \'REPORT_OUT_PATIENT\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableREPORT_OUT_PATIENT.Out_Patient_Scan_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_REPORTRow OUT_PATIENT_REPORTRow {
                get {
                    return ((OUT_PATIENT_REPORTRow)(this.GetParentRow(this.Table.ParentRelations["FK__REPORT_OU__Out_P__3493CFA7"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__REPORT_OU__Out_P__3493CFA7"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_XRAYRow OUT_PATIENT_XRAYRow {
                get {
                    return ((OUT_PATIENT_XRAYRow)(this.GetParentRow(this.Table.ParentRelations["FK__REPORT_OU__Out_P__3587F3E0"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__REPORT_OU__Out_P__3587F3E0"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_SCANRow OUT_PATIENT_SCANRow {
                get {
                    return ((OUT_PATIENT_SCANRow)(this.GetParentRow(this.Table.ParentRelations["FK__REPORT_OU__Out_P__367C1819"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__REPORT_OU__Out_P__367C1819"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENTRow OUT_PATIENTRow {
                get {
                    return ((OUT_PATIENTRow)(this.GetParentRow(this.Table.ParentRelations["fk_REPORT_OUT_PATIENT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_REPORT_OUT_PATIENT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOut_Patient_Xray_NoNull() {
                return this.IsNull(this.tableREPORT_OUT_PATIENT.Out_Patient_Xray_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOut_Patient_Xray_NoNull() {
                this[this.tableREPORT_OUT_PATIENT.Out_Patient_Xray_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOut_Patient_Scan_NoNull() {
                return this.IsNull(this.tableREPORT_OUT_PATIENT.Out_Patient_Scan_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOut_Patient_Scan_NoNull() {
                this[this.tableREPORT_OUT_PATIENT.Out_Patient_Scan_NoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ROOMRow : global::System.Data.DataRow {
            
            private ROOMDataTable tableROOM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ROOMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableROOM = ((ROOMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Room_Number {
                get {
                    return ((string)(this[this.tableROOM.Room_NumberColumn]));
                }
                set {
                    this[this.tableROOM.Room_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Room_Name {
                get {
                    return ((string)(this[this.tableROOM.Room_NameColumn]));
                }
                set {
                    this[this.tableROOM.Room_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Room_Type {
                get {
                    return ((string)(this[this.tableROOM.Room_TypeColumn]));
                }
                set {
                    this[this.tableROOM.Room_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Room_Availability {
                get {
                    return ((string)(this[this.tableROOM.Room_AvailabilityColumn]));
                }
                set {
                    this[this.tableROOM.Room_AvailabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ward_Number {
                get {
                    return ((string)(this[this.tableROOM.Ward_NumberColumn]));
                }
                set {
                    this[this.tableROOM.Ward_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARDRow WARDRow {
                get {
                    return ((WARDRow)(this.GetParentRow(this.Table.ParentRelations["fk_ROOM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_ROOM"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTRow[] GetIN_PATIENTRows() {
                if ((this.Table.ChildRelations["FK__IN_PATIEN__Room___5DCAEF64"] == null)) {
                    return new IN_PATIENTRow[0];
                }
                else {
                    return ((IN_PATIENTRow[])(base.GetChildRows(this.Table.ChildRelations["FK__IN_PATIEN__Room___5DCAEF64"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_SCANRow[] GetIN_PATIENT_SCANRows() {
                if ((this.Table.ChildRelations["FK__IN_PATIEN__Room___2645B050"] == null)) {
                    return new IN_PATIENT_SCANRow[0];
                }
                else {
                    return ((IN_PATIENT_SCANRow[])(base.GetChildRows(this.Table.ChildRelations["FK__IN_PATIEN__Room___2645B050"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_XRAYRow[] GetIN_PATIENT_XRAYRows() {
                if ((this.Table.ChildRelations["FK__IN_PATIEN__Room___1BC821DD"] == null)) {
                    return new IN_PATIENT_XRAYRow[0];
                }
                else {
                    return ((IN_PATIENT_XRAYRow[])(base.GetChildRows(this.Table.ChildRelations["FK__IN_PATIEN__Room___1BC821DD"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SCAN_ROOMRow : global::System.Data.DataRow {
            
            private SCAN_ROOMDataTable tableSCAN_ROOM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SCAN_ROOMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSCAN_ROOM = ((SCAN_ROOMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableSCAN_ROOM.NumberColumn]));
                }
                set {
                    this[this.tableSCAN_ROOM.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string S_Staff_Id {
                get {
                    try {
                        return ((string)(this[this.tableSCAN_ROOM.S_Staff_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S_Staff_Id\' in table \'SCAN_ROOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCAN_ROOM.S_Staff_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string S_Officer_First_Name {
                get {
                    return ((string)(this[this.tableSCAN_ROOM.S_Officer_First_NameColumn]));
                }
                set {
                    this[this.tableSCAN_ROOM.S_Officer_First_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string S_Officer_Middle_Name {
                get {
                    try {
                        return ((string)(this[this.tableSCAN_ROOM.S_Officer_Middle_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'S_Officer_Middle_Name\' in table \'SCAN_ROOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSCAN_ROOM.S_Officer_Middle_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string S_Officer_Last_Name {
                get {
                    return ((string)(this[this.tableSCAN_ROOM.S_Officer_Last_NameColumn]));
                }
                set {
                    this[this.tableSCAN_ROOM.S_Officer_Last_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string S_Officer_Address {
                get {
                    return ((string)(this[this.tableSCAN_ROOM.S_Officer_AddressColumn]));
                }
                set {
                    this[this.tableSCAN_ROOM.S_Officer_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int S_Officer_Tele_Number {
                get {
                    return ((int)(this[this.tableSCAN_ROOM.S_Officer_Tele_NumberColumn]));
                }
                set {
                    this[this.tableSCAN_ROOM.S_Officer_Tele_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime S_Officer_DOB {
                get {
                    return ((global::System.DateTime)(this[this.tableSCAN_ROOM.S_Officer_DOBColumn]));
                }
                set {
                    this[this.tableSCAN_ROOM.S_Officer_DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal S_Officer_Salary {
                get {
                    return ((decimal)(this[this.tableSCAN_ROOM.S_Officer_SalaryColumn]));
                }
                set {
                    this[this.tableSCAN_ROOM.S_Officer_SalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Designation {
                get {
                    return ((string)(this[this.tableSCAN_ROOM.DesignationColumn]));
                }
                set {
                    this[this.tableSCAN_ROOM.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime S_Job_Start_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableSCAN_ROOM.S_Job_Start_DateColumn]));
                }
                set {
                    this[this.tableSCAN_ROOM.S_Job_Start_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsS_Staff_IdNull() {
                return this.IsNull(this.tableSCAN_ROOM.S_Staff_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetS_Staff_IdNull() {
                this[this.tableSCAN_ROOM.S_Staff_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsS_Officer_Middle_NameNull() {
                return this.IsNull(this.tableSCAN_ROOM.S_Officer_Middle_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetS_Officer_Middle_NameNull() {
                this[this.tableSCAN_ROOM.S_Officer_Middle_NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SPECIALIST_DOCTORRow : global::System.Data.DataRow {
            
            private SPECIALIST_DOCTORDataTable tableSPECIALIST_DOCTOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SPECIALIST_DOCTORRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSPECIALIST_DOCTOR = ((SPECIALIST_DOCTORDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableSPECIALIST_DOCTOR.NumberColumn]));
                }
                set {
                    this[this.tableSPECIALIST_DOCTOR.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Specialist_Doctor_Id {
                get {
                    try {
                        return ((string)(this[this.tableSPECIALIST_DOCTOR.Specialist_Doctor_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Specialist_Doctor_Id\' in table \'SPECIALIST_DOCTOR\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSPECIALIST_DOCTOR.Specialist_Doctor_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SLMC_Reg_Number {
                get {
                    return ((string)(this[this.tableSPECIALIST_DOCTOR.SLMC_Reg_NumberColumn]));
                }
                set {
                    this[this.tableSPECIALIST_DOCTOR.SLMC_Reg_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Title {
                get {
                    return ((string)(this[this.tableSPECIALIST_DOCTOR.TitleColumn]));
                }
                set {
                    this[this.tableSPECIALIST_DOCTOR.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string S_Doctor_Name {
                get {
                    return ((string)(this[this.tableSPECIALIST_DOCTOR.S_Doctor_NameColumn]));
                }
                set {
                    this[this.tableSPECIALIST_DOCTOR.S_Doctor_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string S_Field {
                get {
                    return ((string)(this[this.tableSPECIALIST_DOCTOR.S_FieldColumn]));
                }
                set {
                    this[this.tableSPECIALIST_DOCTOR.S_FieldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string S_Doctor_Type {
                get {
                    return ((string)(this[this.tableSPECIALIST_DOCTOR.S_Doctor_TypeColumn]));
                }
                set {
                    this[this.tableSPECIALIST_DOCTOR.S_Doctor_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string S_Doctor_Address {
                get {
                    return ((string)(this[this.tableSPECIALIST_DOCTOR.S_Doctor_AddressColumn]));
                }
                set {
                    this[this.tableSPECIALIST_DOCTOR.S_Doctor_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int S_Doctor_Tele_Number {
                get {
                    return ((int)(this[this.tableSPECIALIST_DOCTOR.S_Doctor_Tele_NumberColumn]));
                }
                set {
                    this[this.tableSPECIALIST_DOCTOR.S_Doctor_Tele_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal S_Doctor_Monthly_Salary {
                get {
                    return ((decimal)(this[this.tableSPECIALIST_DOCTOR.S_Doctor_Monthly_SalaryColumn]));
                }
                set {
                    this[this.tableSPECIALIST_DOCTOR.S_Doctor_Monthly_SalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime S_Doctor_Job_Start_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableSPECIALIST_DOCTOR.S_Doctor_Job_Start_DateColumn]));
                }
                set {
                    this[this.tableSPECIALIST_DOCTOR.S_Doctor_Job_Start_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ward_Number {
                get {
                    return ((string)(this[this.tableSPECIALIST_DOCTOR.Ward_NumberColumn]));
                }
                set {
                    this[this.tableSPECIALIST_DOCTOR.Ward_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARDRow WARDRow {
                get {
                    return ((WARDRow)(this.GetParentRow(this.Table.ParentRelations["fk_SPECIALIST_DOCTOR"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_SPECIALIST_DOCTOR"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSpecialist_Doctor_IdNull() {
                return this.IsNull(this.tableSPECIALIST_DOCTOR.Specialist_Doctor_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSpecialist_Doctor_IdNull() {
                this[this.tableSPECIALIST_DOCTOR.Specialist_Doctor_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CUSTOMERRow[] GetCUSTOMERRows() {
                if ((this.Table.ChildRelations["FK__CUSTOMER__Specia__5535A963"] == null)) {
                    return new CUSTOMERRow[0];
                }
                else {
                    return ((CUSTOMERRow[])(base.GetChildRows(this.Table.ChildRelations["FK__CUSTOMER__Specia__5535A963"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HOSPITAL_CUSTOMERRow[] GetHOSPITAL_CUSTOMERRows() {
                if ((this.Table.ChildRelations["FK__HOSPITAL___Speci__778AC167"] == null)) {
                    return new HOSPITAL_CUSTOMERRow[0];
                }
                else {
                    return ((HOSPITAL_CUSTOMERRow[])(base.GetChildRows(this.Table.ChildRelations["FK__HOSPITAL___Speci__778AC167"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTRow[] GetIN_PATIENTRows() {
                if ((this.Table.ChildRelations["fk_IN_PATIENT"] == null)) {
                    return new IN_PATIENTRow[0];
                }
                else {
                    return ((IN_PATIENTRow[])(base.GetChildRows(this.Table.ChildRelations["fk_IN_PATIENT"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_SCANRow[] GetIN_PATIENT_SCANRows() {
                if ((this.Table.ChildRelations["FK__IN_PATIEN__Speci__2739D489"] == null)) {
                    return new IN_PATIENT_SCANRow[0];
                }
                else {
                    return ((IN_PATIENT_SCANRow[])(base.GetChildRows(this.Table.ChildRelations["FK__IN_PATIEN__Speci__2739D489"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_XRAYRow[] GetIN_PATIENT_XRAYRows() {
                if ((this.Table.ChildRelations["FK__IN_PATIEN__Speci__1CBC4616"] == null)) {
                    return new IN_PATIENT_XRAYRow[0];
                }
                else {
                    return ((IN_PATIENT_XRAYRow[])(base.GetChildRows(this.Table.ChildRelations["FK__IN_PATIEN__Speci__1CBC4616"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_SAMPLERow[] GetIN_SAMPLERows() {
                if ((this.Table.ChildRelations["FK__IN_SAMPLE__Speci__0B91BA14"] == null)) {
                    return new IN_SAMPLERow[0];
                }
                else {
                    return ((IN_SAMPLERow[])(base.GetChildRows(this.Table.ChildRelations["FK__IN_SAMPLE__Speci__0B91BA14"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_SCANRow[] GetOUT_PATIENT_SCANRows() {
                if ((this.Table.ChildRelations["FK__OUT_PATIE__Speci__2B0A656D"] == null)) {
                    return new OUT_PATIENT_SCANRow[0];
                }
                else {
                    return ((OUT_PATIENT_SCANRow[])(base.GetChildRows(this.Table.ChildRelations["FK__OUT_PATIE__Speci__2B0A656D"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_SAMPLERow[] GetOUT_SAMPLERows() {
                if ((this.Table.ChildRelations["FK__OUT_SAMPL__Speci__0F624AF8"] == null)) {
                    return new OUT_SAMPLERow[0];
                }
                else {
                    return ((OUT_SAMPLERow[])(base.GetChildRows(this.Table.ChildRelations["FK__OUT_SAMPL__Speci__0F624AF8"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow[] GetPATIENT_PRIVATE_DETAILRows() {
                if ((this.Table.ChildRelations["FK__PATIENT_P__Speci__5070F446"] == null)) {
                    return new PATIENT_PRIVATE_DETAILRow[0];
                }
                else {
                    return ((PATIENT_PRIVATE_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["FK__PATIENT_P__Speci__5070F446"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public QUALIFICATIONRow[] GetQUALIFICATIONRows() {
                if ((this.Table.ChildRelations["fk_QUALIFICATION"] == null)) {
                    return new QUALIFICATIONRow[0];
                }
                else {
                    return ((QUALIFICATIONRow[])(base.GetChildRows(this.Table.ChildRelations["fk_QUALIFICATION"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WARDRow : global::System.Data.DataRow {
            
            private WARDDataTable tableWARD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal WARDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWARD = ((WARDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ward_Number {
                get {
                    return ((string)(this[this.tableWARD.Ward_NumberColumn]));
                }
                set {
                    this[this.tableWARD.Ward_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ward_Name {
                get {
                    return ((string)(this[this.tableWARD.Ward_NameColumn]));
                }
                set {
                    this[this.tableWARD.Ward_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTRow[] GetIN_PATIENTRows() {
                if ((this.Table.ChildRelations["FK__IN_PATIEN__Ward___5CD6CB2B"] == null)) {
                    return new IN_PATIENTRow[0];
                }
                else {
                    return ((IN_PATIENTRow[])(base.GetChildRows(this.Table.ChildRelations["FK__IN_PATIEN__Ward___5CD6CB2B"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_SCANRow[] GetIN_PATIENT_SCANRows() {
                if ((this.Table.ChildRelations["FK__IN_PATIEN__Ward___25518C17"] == null)) {
                    return new IN_PATIENT_SCANRow[0];
                }
                else {
                    return ((IN_PATIENT_SCANRow[])(base.GetChildRows(this.Table.ChildRelations["FK__IN_PATIEN__Ward___25518C17"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_XRAYRow[] GetIN_PATIENT_XRAYRows() {
                if ((this.Table.ChildRelations["FK__IN_PATIEN__Ward___1AD3FDA4"] == null)) {
                    return new IN_PATIENT_XRAYRow[0];
                }
                else {
                    return ((IN_PATIENT_XRAYRow[])(base.GetChildRows(this.Table.ChildRelations["FK__IN_PATIEN__Ward___1AD3FDA4"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROOMRow[] GetROOMRows() {
                if ((this.Table.ChildRelations["fk_ROOM"] == null)) {
                    return new ROOMRow[0];
                }
                else {
                    return ((ROOMRow[])(base.GetChildRows(this.Table.ChildRelations["fk_ROOM"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow[] GetSPECIALIST_DOCTORRows() {
                if ((this.Table.ChildRelations["fk_SPECIALIST_DOCTOR"] == null)) {
                    return new SPECIALIST_DOCTORRow[0];
                }
                else {
                    return ((SPECIALIST_DOCTORRow[])(base.GetChildRows(this.Table.ChildRelations["fk_SPECIALIST_DOCTOR"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARD_STAFFRow[] GetWARD_STAFFRows() {
                if ((this.Table.ChildRelations["fk_WARD_STAFF"] == null)) {
                    return new WARD_STAFFRow[0];
                }
                else {
                    return ((WARD_STAFFRow[])(base.GetChildRows(this.Table.ChildRelations["fk_WARD_STAFF"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WARD_STAFFRow : global::System.Data.DataRow {
            
            private WARD_STAFFDataTable tableWARD_STAFF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal WARD_STAFFRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWARD_STAFF = ((WARD_STAFFDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableWARD_STAFF.NumberColumn]));
                }
                set {
                    this[this.tableWARD_STAFF.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ward_Staff_Id {
                get {
                    try {
                        return ((string)(this[this.tableWARD_STAFF.Ward_Staff_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ward_Staff_Id\' in table \'WARD_STAFF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWARD_STAFF.Ward_Staff_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string W_Officer_First_Name {
                get {
                    return ((string)(this[this.tableWARD_STAFF.W_Officer_First_NameColumn]));
                }
                set {
                    this[this.tableWARD_STAFF.W_Officer_First_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string W_Officer_Middle_Name {
                get {
                    try {
                        return ((string)(this[this.tableWARD_STAFF.W_Officer_Middle_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'W_Officer_Middle_Name\' in table \'WARD_STAFF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWARD_STAFF.W_Officer_Middle_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string W_Officer_Last_Name {
                get {
                    return ((string)(this[this.tableWARD_STAFF.W_Officer_Last_NameColumn]));
                }
                set {
                    this[this.tableWARD_STAFF.W_Officer_Last_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string W_Officer_Address {
                get {
                    return ((string)(this[this.tableWARD_STAFF.W_Officer_AddressColumn]));
                }
                set {
                    this[this.tableWARD_STAFF.W_Officer_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int W_Officer_Tele_Number {
                get {
                    return ((int)(this[this.tableWARD_STAFF.W_Officer_Tele_NumberColumn]));
                }
                set {
                    this[this.tableWARD_STAFF.W_Officer_Tele_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime W_Officer_DOB {
                get {
                    return ((global::System.DateTime)(this[this.tableWARD_STAFF.W_Officer_DOBColumn]));
                }
                set {
                    this[this.tableWARD_STAFF.W_Officer_DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal W_Officer_Salary {
                get {
                    return ((decimal)(this[this.tableWARD_STAFF.W_Officer_SalaryColumn]));
                }
                set {
                    this[this.tableWARD_STAFF.W_Officer_SalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Designation {
                get {
                    return ((string)(this[this.tableWARD_STAFF.DesignationColumn]));
                }
                set {
                    this[this.tableWARD_STAFF.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime W_Job_Start_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableWARD_STAFF.W_Job_Start_DateColumn]));
                }
                set {
                    this[this.tableWARD_STAFF.W_Job_Start_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ward_Number {
                get {
                    return ((string)(this[this.tableWARD_STAFF.Ward_NumberColumn]));
                }
                set {
                    this[this.tableWARD_STAFF.Ward_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Roll_Id {
                get {
                    try {
                        return ((string)(this[this.tableWARD_STAFF.Roll_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roll_Id\' in table \'WARD_STAFF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWARD_STAFF.Roll_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCOUNTRow ACCOUNTRow {
                get {
                    return ((ACCOUNTRow)(this.GetParentRow(this.Table.ParentRelations["FK__WARD_STAF__Roll___47DBAE45"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__WARD_STAF__Roll___47DBAE45"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARDRow WARDRow {
                get {
                    return ((WARDRow)(this.GetParentRow(this.Table.ParentRelations["fk_WARD_STAFF"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_WARD_STAFF"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWard_Staff_IdNull() {
                return this.IsNull(this.tableWARD_STAFF.Ward_Staff_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWard_Staff_IdNull() {
                this[this.tableWARD_STAFF.Ward_Staff_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsW_Officer_Middle_NameNull() {
                return this.IsNull(this.tableWARD_STAFF.W_Officer_Middle_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetW_Officer_Middle_NameNull() {
                this[this.tableWARD_STAFF.W_Officer_Middle_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRoll_IdNull() {
                return this.IsNull(this.tableWARD_STAFF.Roll_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRoll_IdNull() {
                this[this.tableWARD_STAFF.Roll_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class X_RAY_ROOMRow : global::System.Data.DataRow {
            
            private X_RAY_ROOMDataTable tableX_RAY_ROOM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal X_RAY_ROOMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableX_RAY_ROOM = ((X_RAY_ROOMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Number {
                get {
                    return ((int)(this[this.tableX_RAY_ROOM.NumberColumn]));
                }
                set {
                    this[this.tableX_RAY_ROOM.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Staff_Id {
                get {
                    try {
                        return ((string)(this[this.tableX_RAY_ROOM.Staff_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Staff_Id\' in table \'X_RAY_ROOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableX_RAY_ROOM.Staff_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string X_Officer_First_Name {
                get {
                    return ((string)(this[this.tableX_RAY_ROOM.X_Officer_First_NameColumn]));
                }
                set {
                    this[this.tableX_RAY_ROOM.X_Officer_First_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string X_Officer_Middle_Name {
                get {
                    try {
                        return ((string)(this[this.tableX_RAY_ROOM.X_Officer_Middle_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'X_Officer_Middle_Name\' in table \'X_RAY_ROOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableX_RAY_ROOM.X_Officer_Middle_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string X_Officer_Last_Name {
                get {
                    return ((string)(this[this.tableX_RAY_ROOM.X_Officer_Last_NameColumn]));
                }
                set {
                    this[this.tableX_RAY_ROOM.X_Officer_Last_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string X_Officer_Address {
                get {
                    return ((string)(this[this.tableX_RAY_ROOM.X_Officer_AddressColumn]));
                }
                set {
                    this[this.tableX_RAY_ROOM.X_Officer_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int X_Officer_Tele_Number {
                get {
                    return ((int)(this[this.tableX_RAY_ROOM.X_Officer_Tele_NumberColumn]));
                }
                set {
                    this[this.tableX_RAY_ROOM.X_Officer_Tele_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime X_Officer_DOB {
                get {
                    return ((global::System.DateTime)(this[this.tableX_RAY_ROOM.X_Officer_DOBColumn]));
                }
                set {
                    this[this.tableX_RAY_ROOM.X_Officer_DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal X_Officer_Salary {
                get {
                    return ((decimal)(this[this.tableX_RAY_ROOM.X_Officer_SalaryColumn]));
                }
                set {
                    this[this.tableX_RAY_ROOM.X_Officer_SalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Designation {
                get {
                    return ((string)(this[this.tableX_RAY_ROOM.DesignationColumn]));
                }
                set {
                    this[this.tableX_RAY_ROOM.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime X_Job_Start_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableX_RAY_ROOM.X_Job_Start_DateColumn]));
                }
                set {
                    this[this.tableX_RAY_ROOM.X_Job_Start_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStaff_IdNull() {
                return this.IsNull(this.tableX_RAY_ROOM.Staff_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStaff_IdNull() {
                this[this.tableX_RAY_ROOM.Staff_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsX_Officer_Middle_NameNull() {
                return this.IsNull(this.tableX_RAY_ROOM.X_Officer_Middle_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetX_Officer_Middle_NameNull() {
                this[this.tableX_RAY_ROOM.X_Officer_Middle_NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ACCOUNTRowChangeEvent : global::System.EventArgs {
            
            private ACCOUNTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCOUNTRowChangeEvent(ACCOUNTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCOUNTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ADMISSION_OFFICERRowChangeEvent : global::System.EventArgs {
            
            private ADMISSION_OFFICERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMISSION_OFFICERRowChangeEvent(ADMISSION_OFFICERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMISSION_OFFICERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BILLRowChangeEvent : global::System.EventArgs {
            
            private BILLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLRowChangeEvent(BILLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BILLING_OFFICERRowChangeEvent : global::System.EventArgs {
            
            private BILLING_OFFICERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLING_OFFICERRowChangeEvent(BILLING_OFFICERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BILLING_OFFICERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CHANNELING_OFFICERRowChangeEvent : global::System.EventArgs {
            
            private CHANNELING_OFFICERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CHANNELING_OFFICERRowChangeEvent(CHANNELING_OFFICERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CHANNELING_OFFICERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CUSTOMERRowChangeEvent : global::System.EventArgs {
            
            private CUSTOMERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CUSTOMERRowChangeEvent(CUSTOMERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CUSTOMERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class DRUGRowChangeEvent : global::System.EventArgs {
            
            private DRUGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUGRowChangeEvent(DRUGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class DRUG_ORDERRowChangeEvent : global::System.EventArgs {
            
            private DRUG_ORDERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_ORDERRowChangeEvent(DRUG_ORDERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_ORDERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class DRUG_SUPPLIERRowChangeEvent : global::System.EventArgs {
            
            private DRUG_SUPPLIERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_SUPPLIERRowChangeEvent(DRUG_SUPPLIERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DRUG_SUPPLIERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class GUARDIANRowChangeEvent : global::System.EventArgs {
            
            private GUARDIANRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GUARDIANRowChangeEvent(GUARDIANRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GUARDIANRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class HOSPITAL_CUSTOMERRowChangeEvent : global::System.EventArgs {
            
            private HOSPITAL_CUSTOMERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HOSPITAL_CUSTOMERRowChangeEvent(HOSPITAL_CUSTOMERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HOSPITAL_CUSTOMERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class IN_PATIENTRowChangeEvent : global::System.EventArgs {
            
            private IN_PATIENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTRowChangeEvent(IN_PATIENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class IN_PATIENT_MEDICINERowChangeEvent : global::System.EventArgs {
            
            private IN_PATIENT_MEDICINERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_MEDICINERowChangeEvent(IN_PATIENT_MEDICINERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_MEDICINERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class IN_PATIENT_REPORTRowChangeEvent : global::System.EventArgs {
            
            private IN_PATIENT_REPORTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_REPORTRowChangeEvent(IN_PATIENT_REPORTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_REPORTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class IN_PATIENT_SCANRowChangeEvent : global::System.EventArgs {
            
            private IN_PATIENT_SCANRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_SCANRowChangeEvent(IN_PATIENT_SCANRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_SCANRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class IN_PATIENT_XRAYRowChangeEvent : global::System.EventArgs {
            
            private IN_PATIENT_XRAYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_XRAYRowChangeEvent(IN_PATIENT_XRAYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_PATIENT_XRAYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class IN_SAMPLERowChangeEvent : global::System.EventArgs {
            
            private IN_SAMPLERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_SAMPLERowChangeEvent(IN_SAMPLERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public IN_SAMPLERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class LABORATORY_STAFFRowChangeEvent : global::System.EventArgs {
            
            private LABORATORY_STAFFRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LABORATORY_STAFFRowChangeEvent(LABORATORY_STAFFRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LABORATORY_STAFFRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class LOG_IN_DETAILRowChangeEvent : global::System.EventArgs {
            
            private LOG_IN_DETAILRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_DETAILRowChangeEvent(LOG_IN_DETAILRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_DETAILRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class LOG_IN_USERRowChangeEvent : global::System.EventArgs {
            
            private LOG_IN_USERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_USERRowChangeEvent(LOG_IN_USERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LOG_IN_USERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ORGANIZATIONRowChangeEvent : global::System.EventArgs {
            
            private ORGANIZATIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORGANIZATIONRowChangeEvent(ORGANIZATIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORGANIZATIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class OUT_PATIENTRowChangeEvent : global::System.EventArgs {
            
            private OUT_PATIENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENTRowChangeEvent(OUT_PATIENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class OUT_PATIENT_MEDICINERowChangeEvent : global::System.EventArgs {
            
            private OUT_PATIENT_MEDICINERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_MEDICINERowChangeEvent(OUT_PATIENT_MEDICINERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_MEDICINERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class OUT_PATIENT_REPORTRowChangeEvent : global::System.EventArgs {
            
            private OUT_PATIENT_REPORTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_REPORTRowChangeEvent(OUT_PATIENT_REPORTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_REPORTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class OUT_PATIENT_SCANRowChangeEvent : global::System.EventArgs {
            
            private OUT_PATIENT_SCANRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_SCANRowChangeEvent(OUT_PATIENT_SCANRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_SCANRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class OUT_PATIENT_XRAYRowChangeEvent : global::System.EventArgs {
            
            private OUT_PATIENT_XRAYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_XRAYRowChangeEvent(OUT_PATIENT_XRAYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_PATIENT_XRAYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class OUT_SAMPLERowChangeEvent : global::System.EventArgs {
            
            private OUT_SAMPLERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_SAMPLERowChangeEvent(OUT_SAMPLERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OUT_SAMPLERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PATIENT_APPOINTMENT_DETAILSRowChangeEvent : global::System.EventArgs {
            
            private PATIENT_APPOINTMENT_DETAILSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_APPOINTMENT_DETAILSRowChangeEvent(PATIENT_APPOINTMENT_DETAILSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_APPOINTMENT_DETAILSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PATIENT_PRIVATE_DETAILRowChangeEvent : global::System.EventArgs {
            
            private PATIENT_PRIVATE_DETAILRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRowChangeEvent(PATIENT_PRIVATE_DETAILRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PATIENT_PRIVATE_DETAILRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PHARMACY_MEDICINESRowChangeEvent : global::System.EventArgs {
            
            private PHARMACY_MEDICINESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_MEDICINESRowChangeEvent(PHARMACY_MEDICINESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_MEDICINESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PHARMACY_STAFFRowChangeEvent : global::System.EventArgs {
            
            private PHARMACY_STAFFRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_STAFFRowChangeEvent(PHARMACY_STAFFRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PHARMACY_STAFFRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class QUALIFICATIONRowChangeEvent : global::System.EventArgs {
            
            private QUALIFICATIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public QUALIFICATIONRowChangeEvent(QUALIFICATIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public QUALIFICATIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class REPORT_IN_PATIENTRowChangeEvent : global::System.EventArgs {
            
            private REPORT_IN_PATIENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_IN_PATIENTRowChangeEvent(REPORT_IN_PATIENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_IN_PATIENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class REPORT_OUT_PATIENTRowChangeEvent : global::System.EventArgs {
            
            private REPORT_OUT_PATIENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_OUT_PATIENTRowChangeEvent(REPORT_OUT_PATIENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REPORT_OUT_PATIENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ROOMRowChangeEvent : global::System.EventArgs {
            
            private ROOMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROOMRowChangeEvent(ROOMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROOMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SCAN_ROOMRowChangeEvent : global::System.EventArgs {
            
            private SCAN_ROOMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SCAN_ROOMRowChangeEvent(SCAN_ROOMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SCAN_ROOMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SPECIALIST_DOCTORRowChangeEvent : global::System.EventArgs {
            
            private SPECIALIST_DOCTORRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRowChangeEvent(SPECIALIST_DOCTORRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SPECIALIST_DOCTORRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class WARDRowChangeEvent : global::System.EventArgs {
            
            private WARDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARDRowChangeEvent(WARDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class WARD_STAFFRowChangeEvent : global::System.EventArgs {
            
            private WARD_STAFFRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARD_STAFFRowChangeEvent(WARD_STAFFRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WARD_STAFFRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class X_RAY_ROOMRowChangeEvent : global::System.EventArgs {
            
            private X_RAY_ROOMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public X_RAY_ROOMRowChangeEvent(X_RAY_ROOMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public X_RAY_ROOMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Health_Street.GUI_Hospital_Management_SystemDataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ACCOUNTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ACCOUNTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ACCOUNT";
            tableMapping.ColumnMappings.Add("Num", "Num");
            tableMapping.ColumnMappings.Add("Roll_Id", "Roll_Id");
            tableMapping.ColumnMappings.Add("Roll_Name", "Roll_Name");
            tableMapping.ColumnMappings.Add("Login_Username", "Login_Username");
            tableMapping.ColumnMappings.Add("Login_Password", "Login_Password");
            tableMapping.ColumnMappings.Add("E_mail", "E_mail");
            tableMapping.ColumnMappings.Add("A_Create_Date", "A_Create_Date");
            tableMapping.ColumnMappings.Add("A_Create_Time", "A_Create_Time");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ACCOUNT] WHERE (([Num] = @Original_Num) AND ((@IsNull_Roll_Id = 1 AND [Roll_Id] IS NULL) OR ([Roll_Id] = @Original_Roll_Id)) AND ([Roll_Name] = @Original_Roll_Name) AND ([Login_Username] = @Original_Login_Username) AND ([Login_Password] = @Original_Login_Password) AND ((@IsNull_E_mail = 1 AND [E_mail] IS NULL) OR ([E_mail] = @Original_E_mail)) AND ((@IsNull_A_Create_Date = 1 AND [A_Create_Date] IS NULL) OR ([A_Create_Date] = @Original_A_Create_Date)) AND ((@IsNull_A_Create_Time = 1 AND [A_Create_Time] IS NULL) OR ([A_Create_Time] = @Original_A_Create_Time)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Roll_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Login_Username", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login_Username", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Login_Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login_Password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_mail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_mail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_mail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_mail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A_Create_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Create_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Create_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Create_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A_Create_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Create_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Create_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Create_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ACCOUNT] ([Roll_Name], [Login_Username], [Login_Password], [E_mail], [A_Create_Date], [A_Create_Time]) VALUES (@Roll_Name, @Login_Username, @Login_Password, @E_mail, @A_Create_Date, @A_Create_Time);
SELECT Num, Roll_Id, Roll_Name, Login_Username, Login_Password, E_mail, A_Create_Date, A_Create_Time FROM ACCOUNT WHERE (Roll_Id = @Roll_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Login_Username", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login_Username", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Login_Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login_Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_mail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_mail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Create_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Create_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Create_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ACCOUNT] SET [Roll_Name] = @Roll_Name, [Login_Username] = @Login_Username, [Login_Password] = @Login_Password, [E_mail] = @E_mail, [A_Create_Date] = @A_Create_Date, [A_Create_Time] = @A_Create_Time WHERE (([Num] = @Original_Num) AND ((@IsNull_Roll_Id = 1 AND [Roll_Id] IS NULL) OR ([Roll_Id] = @Original_Roll_Id)) AND ([Roll_Name] = @Original_Roll_Name) AND ([Login_Username] = @Original_Login_Username) AND ([Login_Password] = @Original_Login_Password) AND ((@IsNull_E_mail = 1 AND [E_mail] IS NULL) OR ([E_mail] = @Original_E_mail)) AND ((@IsNull_A_Create_Date = 1 AND [A_Create_Date] IS NULL) OR ([A_Create_Date] = @Original_A_Create_Date)) AND ((@IsNull_A_Create_Time = 1 AND [A_Create_Time] IS NULL) OR ([A_Create_Time] = @Original_A_Create_Time)));
SELECT Num, Roll_Id, Roll_Name, Login_Username, Login_Password, E_mail, A_Create_Date, A_Create_Time FROM ACCOUNT WHERE (Roll_Id = @Roll_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Login_Username", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login_Username", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Login_Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login_Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_mail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_mail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Create_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Create_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Create_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Roll_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Login_Username", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login_Username", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Login_Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login_Password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_mail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_mail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_mail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_mail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A_Create_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Create_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Create_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Create_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A_Create_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Create_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Create_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Create_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Num, Roll_Id, Roll_Name, Login_Username, Login_Password, E_mail, A_Create_" +
                "Date, A_Create_Time FROM dbo.ACCOUNT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.ACCOUNTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.ACCOUNTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.ACCOUNTDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.ACCOUNTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.ACCOUNTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ACCOUNT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Num, string Original_Roll_Id, string Original_Roll_Name, string Original_Login_Username, string Original_Login_Password, string Original_E_mail, global::System.Nullable<global::System.DateTime> Original_A_Create_Date, global::System.Nullable<global::System.TimeSpan> Original_A_Create_Time) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Num));
            if ((Original_Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Roll_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Roll_Id));
            }
            if ((Original_Roll_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Roll_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Roll_Name));
            }
            if ((Original_Login_Username == null)) {
                throw new global::System.ArgumentNullException("Original_Login_Username");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Login_Username));
            }
            if ((Original_Login_Password == null)) {
                throw new global::System.ArgumentNullException("Original_Login_Password");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Login_Password));
            }
            if ((Original_E_mail == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_E_mail));
            }
            if ((Original_A_Create_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_A_Create_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_A_Create_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((System.TimeSpan)(Original_A_Create_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Roll_Name, string Login_Username, string Login_Password, string E_mail, global::System.Nullable<global::System.DateTime> A_Create_Date, global::System.Nullable<global::System.TimeSpan> A_Create_Time, string Roll_Id) {
            if ((Roll_Name == null)) {
                throw new global::System.ArgumentNullException("Roll_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Roll_Name));
            }
            if ((Login_Username == null)) {
                throw new global::System.ArgumentNullException("Login_Username");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Login_Username));
            }
            if ((Login_Password == null)) {
                throw new global::System.ArgumentNullException("Login_Password");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Login_Password));
            }
            if ((E_mail == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(E_mail));
            }
            if ((A_Create_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(A_Create_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((A_Create_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.TimeSpan)(A_Create_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Roll_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Roll_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Roll_Name, string Login_Username, string Login_Password, string E_mail, global::System.Nullable<global::System.DateTime> A_Create_Date, global::System.Nullable<global::System.TimeSpan> A_Create_Time, int Original_Num, string Original_Roll_Id, string Original_Roll_Name, string Original_Login_Username, string Original_Login_Password, string Original_E_mail, global::System.Nullable<global::System.DateTime> Original_A_Create_Date, global::System.Nullable<global::System.TimeSpan> Original_A_Create_Time, string Roll_Id) {
            if ((Roll_Name == null)) {
                throw new global::System.ArgumentNullException("Roll_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Roll_Name));
            }
            if ((Login_Username == null)) {
                throw new global::System.ArgumentNullException("Login_Username");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Login_Username));
            }
            if ((Login_Password == null)) {
                throw new global::System.ArgumentNullException("Login_Password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Login_Password));
            }
            if ((E_mail == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(E_mail));
            }
            if ((A_Create_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(A_Create_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((A_Create_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.TimeSpan)(A_Create_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Num));
            if ((Original_Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Roll_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Roll_Id));
            }
            if ((Original_Roll_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Roll_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Roll_Name));
            }
            if ((Original_Login_Username == null)) {
                throw new global::System.ArgumentNullException("Original_Login_Username");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Login_Username));
            }
            if ((Original_Login_Password == null)) {
                throw new global::System.ArgumentNullException("Original_Login_Password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Login_Password));
            }
            if ((Original_E_mail == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_E_mail));
            }
            if ((Original_A_Create_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_A_Create_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_A_Create_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.TimeSpan)(Original_A_Create_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Roll_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Roll_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ADMISSION_OFFICERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ADMISSION_OFFICERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ADMISSION_OFFICER";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Admission_Officer_Id", "Admission_Officer_Id");
            tableMapping.ColumnMappings.Add("A_Officer_First_Name", "A_Officer_First_Name");
            tableMapping.ColumnMappings.Add("A_Officer_Middle_Name", "A_Officer_Middle_Name");
            tableMapping.ColumnMappings.Add("A_Officer_Last_Name", "A_Officer_Last_Name");
            tableMapping.ColumnMappings.Add("A_Officer_Address", "A_Officer_Address");
            tableMapping.ColumnMappings.Add("A_Officer_Tele_Number", "A_Officer_Tele_Number");
            tableMapping.ColumnMappings.Add("A_Officer_DOB", "A_Officer_DOB");
            tableMapping.ColumnMappings.Add("A_Officer_Salary", "A_Officer_Salary");
            tableMapping.ColumnMappings.Add("A_Job_Start_Date", "A_Job_Start_Date");
            tableMapping.ColumnMappings.Add("Roll_Id", "Roll_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ADMISSION_OFFICER] WHERE (([Number] = @Original_Number) AND ((@IsNull_Admission_Officer_Id = 1 AND [Admission_Officer_Id] IS NULL) OR ([Admission_Officer_Id] = @Original_Admission_Officer_Id)) AND ([A_Officer_First_Name] = @Original_A_Officer_First_Name) AND ((@IsNull_A_Officer_Middle_Name = 1 AND [A_Officer_Middle_Name] IS NULL) OR ([A_Officer_Middle_Name] = @Original_A_Officer_Middle_Name)) AND ([A_Officer_Last_Name] = @Original_A_Officer_Last_Name) AND ([A_Officer_Address] = @Original_A_Officer_Address) AND ([A_Officer_Tele_Number] = @Original_A_Officer_Tele_Number) AND ([A_Officer_DOB] = @Original_A_Officer_DOB) AND ([A_Officer_Salary] = @Original_A_Officer_Salary) AND ([A_Job_Start_Date] = @Original_A_Job_Start_Date) AND ([Roll_Id] = @Original_Roll_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Admission_Officer_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Officer_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "A_Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Job_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ADMISSION_OFFICER] ([A_Officer_First_Name], [A_Officer_Middle_Name], [A_Officer_Last_Name], [A_Officer_Address], [A_Officer_Tele_Number], [A_Officer_DOB], [A_Officer_Salary], [A_Job_Start_Date], [Roll_Id]) VALUES (@A_Officer_First_Name, @A_Officer_Middle_Name, @A_Officer_Last_Name, @A_Officer_Address, @A_Officer_Tele_Number, @A_Officer_DOB, @A_Officer_Salary, @A_Job_Start_Date, @Roll_Id);
SELECT Number, Admission_Officer_Id, A_Officer_First_Name, A_Officer_Middle_Name, A_Officer_Last_Name, A_Officer_Address, A_Officer_Tele_Number, A_Officer_DOB, A_Officer_Salary, A_Job_Start_Date, Roll_Id FROM ADMISSION_OFFICER WHERE (Admission_Officer_Id = @Admission_Officer_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "A_Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Job_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Officer_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ADMISSION_OFFICER] SET [A_Officer_First_Name] = @A_Officer_First_Name, [A_Officer_Middle_Name] = @A_Officer_Middle_Name, [A_Officer_Last_Name] = @A_Officer_Last_Name, [A_Officer_Address] = @A_Officer_Address, [A_Officer_Tele_Number] = @A_Officer_Tele_Number, [A_Officer_DOB] = @A_Officer_DOB, [A_Officer_Salary] = @A_Officer_Salary, [A_Job_Start_Date] = @A_Job_Start_Date, [Roll_Id] = @Roll_Id WHERE (([Number] = @Original_Number) AND ((@IsNull_Admission_Officer_Id = 1 AND [Admission_Officer_Id] IS NULL) OR ([Admission_Officer_Id] = @Original_Admission_Officer_Id)) AND ([A_Officer_First_Name] = @Original_A_Officer_First_Name) AND ((@IsNull_A_Officer_Middle_Name = 1 AND [A_Officer_Middle_Name] IS NULL) OR ([A_Officer_Middle_Name] = @Original_A_Officer_Middle_Name)) AND ([A_Officer_Last_Name] = @Original_A_Officer_Last_Name) AND ([A_Officer_Address] = @Original_A_Officer_Address) AND ([A_Officer_Tele_Number] = @Original_A_Officer_Tele_Number) AND ([A_Officer_DOB] = @Original_A_Officer_DOB) AND ([A_Officer_Salary] = @Original_A_Officer_Salary) AND ([A_Job_Start_Date] = @Original_A_Job_Start_Date) AND ([Roll_Id] = @Original_Roll_Id));
SELECT Number, Admission_Officer_Id, A_Officer_First_Name, A_Officer_Middle_Name, A_Officer_Last_Name, A_Officer_Address, A_Officer_Tele_Number, A_Officer_DOB, A_Officer_Salary, A_Job_Start_Date, Roll_Id FROM ADMISSION_OFFICER WHERE (Admission_Officer_Id = @Admission_Officer_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "A_Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Job_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Admission_Officer_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Officer_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "A_Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A_Job_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Officer_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Admission_Officer_Id, A_Officer_First_Name, A_Officer_Middle_Name," +
                " A_Officer_Last_Name, A_Officer_Address, A_Officer_Tele_Number, A_Officer_DOB, A" +
                "_Officer_Salary, A_Job_Start_Date, Roll_Id FROM dbo.ADMISSION_OFFICER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.ADMISSION_OFFICERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.ADMISSION_OFFICERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.ADMISSION_OFFICERDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.ADMISSION_OFFICERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.ADMISSION_OFFICERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ADMISSION_OFFICER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Admission_Officer_Id, string Original_A_Officer_First_Name, string Original_A_Officer_Middle_Name, string Original_A_Officer_Last_Name, string Original_A_Officer_Address, int Original_A_Officer_Tele_Number, System.DateTime Original_A_Officer_DOB, decimal Original_A_Officer_Salary, System.DateTime Original_A_Job_Start_Date, string Original_Roll_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Admission_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Officer_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Admission_Officer_Id));
            }
            if ((Original_A_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_A_Officer_First_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_A_Officer_First_Name));
            }
            if ((Original_A_Officer_Middle_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_A_Officer_Middle_Name));
            }
            if ((Original_A_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_A_Officer_Last_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_A_Officer_Last_Name));
            }
            if ((Original_A_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_A_Officer_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_A_Officer_Address));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_A_Officer_Tele_Number));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_A_Officer_DOB));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_A_Officer_Salary));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_A_Job_Start_Date));
            if ((Original_Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Roll_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Roll_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string A_Officer_First_Name, string A_Officer_Middle_Name, string A_Officer_Last_Name, string A_Officer_Address, int A_Officer_Tele_Number, System.DateTime A_Officer_DOB, decimal A_Officer_Salary, System.DateTime A_Job_Start_Date, string Roll_Id, string Admission_Officer_Id) {
            if ((A_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("A_Officer_First_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(A_Officer_First_Name));
            }
            if ((A_Officer_Middle_Name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(A_Officer_Middle_Name));
            }
            if ((A_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("A_Officer_Last_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(A_Officer_Last_Name));
            }
            if ((A_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("A_Officer_Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(A_Officer_Address));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(A_Officer_Tele_Number));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(A_Officer_DOB));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(A_Officer_Salary));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(A_Job_Start_Date));
            if ((Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Roll_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Roll_Id));
            }
            if ((Admission_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Admission_Officer_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Admission_Officer_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string A_Officer_First_Name, 
                    string A_Officer_Middle_Name, 
                    string A_Officer_Last_Name, 
                    string A_Officer_Address, 
                    int A_Officer_Tele_Number, 
                    System.DateTime A_Officer_DOB, 
                    decimal A_Officer_Salary, 
                    System.DateTime A_Job_Start_Date, 
                    string Roll_Id, 
                    int Original_Number, 
                    string Original_Admission_Officer_Id, 
                    string Original_A_Officer_First_Name, 
                    string Original_A_Officer_Middle_Name, 
                    string Original_A_Officer_Last_Name, 
                    string Original_A_Officer_Address, 
                    int Original_A_Officer_Tele_Number, 
                    System.DateTime Original_A_Officer_DOB, 
                    decimal Original_A_Officer_Salary, 
                    System.DateTime Original_A_Job_Start_Date, 
                    string Original_Roll_Id, 
                    string Admission_Officer_Id) {
            if ((A_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("A_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(A_Officer_First_Name));
            }
            if ((A_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(A_Officer_Middle_Name));
            }
            if ((A_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("A_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(A_Officer_Last_Name));
            }
            if ((A_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("A_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(A_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(A_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(A_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(A_Officer_Salary));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(A_Job_Start_Date));
            if ((Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Roll_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Roll_Id));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Number));
            if ((Original_Admission_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Officer_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Admission_Officer_Id));
            }
            if ((Original_A_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_A_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_A_Officer_First_Name));
            }
            if ((Original_A_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_A_Officer_Middle_Name));
            }
            if ((Original_A_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_A_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_A_Officer_Last_Name));
            }
            if ((Original_A_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_A_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_A_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_A_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_A_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_A_Officer_Salary));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_A_Job_Start_Date));
            if ((Original_Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Roll_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Roll_Id));
            }
            if ((Admission_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Admission_Officer_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Admission_Officer_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BILLTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BILLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BILL";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Bill_Number", "Bill_Number");
            tableMapping.ColumnMappings.Add("Bill_Amount", "Bill_Amount");
            tableMapping.ColumnMappings.Add("Payment_Date", "Payment_Date");
            tableMapping.ColumnMappings.Add("Payment_Time", "Payment_Time");
            tableMapping.ColumnMappings.Add("Payment_Type", "Payment_Type");
            tableMapping.ColumnMappings.Add("Billing_Officer_Id", "Billing_Officer_Id");
            tableMapping.ColumnMappings.Add("Guardian_Id_Number", "Guardian_Id_Number");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[BILL] WHERE (([Number] = @Original_Number) AND ((@IsNull_Bill_Number = 1 AND [Bill_Number] IS NULL) OR ([Bill_Number] = @Original_Bill_Number)) AND ([Bill_Amount] = @Original_Bill_Amount) AND ([Payment_Date] = @Original_Payment_Date) AND ([Payment_Time] = @Original_Payment_Time) AND ([Payment_Type] = @Original_Payment_Type) AND ([Billing_Officer_Id] = @Original_Billing_Officer_Id) AND ([Guardian_Id_Number] = @Original_Guardian_Id_Number))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bill_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bill_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bill_Amount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Payment_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Payment_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Payment_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Payment_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Payment_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Payment_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Id_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[BILL] ([Bill_Amount], [Payment_Date], [Payment_Time], [Payment_Type], [Billing_Officer_Id], [Guardian_Id_Number]) VALUES (@Bill_Amount, @Payment_Date, @Payment_Time, @Payment_Type, @Billing_Officer_Id, @Guardian_Id_Number);
SELECT Number, Bill_Number, Bill_Amount, Payment_Date, Payment_Time, Payment_Type, Billing_Officer_Id, Guardian_Id_Number FROM BILL WHERE (Bill_Number = @Bill_Number)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bill_Amount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Payment_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Payment_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Payment_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Payment_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Payment_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Payment_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Id_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bill_Number", global::System.Data.SqlDbType.VarChar, 11, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[BILL] SET [Bill_Amount] = @Bill_Amount, [Payment_Date] = @Payment_Date, [Payment_Time] = @Payment_Time, [Payment_Type] = @Payment_Type, [Billing_Officer_Id] = @Billing_Officer_Id, [Guardian_Id_Number] = @Guardian_Id_Number WHERE (([Number] = @Original_Number) AND ((@IsNull_Bill_Number = 1 AND [Bill_Number] IS NULL) OR ([Bill_Number] = @Original_Bill_Number)) AND ([Bill_Amount] = @Original_Bill_Amount) AND ([Payment_Date] = @Original_Payment_Date) AND ([Payment_Time] = @Original_Payment_Time) AND ([Payment_Type] = @Original_Payment_Type) AND ([Billing_Officer_Id] = @Original_Billing_Officer_Id) AND ([Guardian_Id_Number] = @Original_Guardian_Id_Number));
SELECT Number, Bill_Number, Bill_Amount, Payment_Date, Payment_Time, Payment_Type, Billing_Officer_Id, Guardian_Id_Number FROM BILL WHERE (Bill_Number = @Bill_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bill_Amount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Payment_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Payment_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Payment_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Payment_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Payment_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Payment_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Id_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bill_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bill_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bill_Amount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Payment_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Payment_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Payment_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Payment_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Payment_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Payment_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Id_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bill_Number", global::System.Data.SqlDbType.VarChar, 11, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Bill_Number, Bill_Amount, Payment_Date, Payment_Time, Payment_Type" +
                ", Billing_Officer_Id, Guardian_Id_Number FROM dbo.BILL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.BILLDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.BILLDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.BILLDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.BILLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.BILLDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "BILL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Bill_Number, double Original_Bill_Amount, System.DateTime Original_Payment_Date, System.TimeSpan Original_Payment_Time, string Original_Payment_Type, string Original_Billing_Officer_Id, string Original_Guardian_Id_Number) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Bill_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Bill_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Bill_Number));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_Bill_Amount));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Payment_Date));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.TimeSpan)(Original_Payment_Time));
            if ((Original_Payment_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Payment_Type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Payment_Type));
            }
            if ((Original_Billing_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Billing_Officer_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Billing_Officer_Id));
            }
            if ((Original_Guardian_Id_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Id_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Guardian_Id_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(double Bill_Amount, System.DateTime Payment_Date, System.TimeSpan Payment_Time, string Payment_Type, string Billing_Officer_Id, string Guardian_Id_Number, string Bill_Number) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((double)(Bill_Amount));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Payment_Date));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.TimeSpan)(Payment_Time));
            if ((Payment_Type == null)) {
                throw new global::System.ArgumentNullException("Payment_Type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Payment_Type));
            }
            if ((Billing_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Billing_Officer_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Billing_Officer_Id));
            }
            if ((Guardian_Id_Number == null)) {
                throw new global::System.ArgumentNullException("Guardian_Id_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Guardian_Id_Number));
            }
            if ((Bill_Number == null)) {
                throw new global::System.ArgumentNullException("Bill_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Bill_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(double Bill_Amount, System.DateTime Payment_Date, System.TimeSpan Payment_Time, string Payment_Type, string Billing_Officer_Id, string Guardian_Id_Number, int Original_Number, string Original_Bill_Number, double Original_Bill_Amount, System.DateTime Original_Payment_Date, System.TimeSpan Original_Payment_Time, string Original_Payment_Type, string Original_Billing_Officer_Id, string Original_Guardian_Id_Number, string Bill_Number) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((double)(Bill_Amount));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Payment_Date));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.TimeSpan)(Payment_Time));
            if ((Payment_Type == null)) {
                throw new global::System.ArgumentNullException("Payment_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Payment_Type));
            }
            if ((Billing_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Billing_Officer_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Billing_Officer_Id));
            }
            if ((Guardian_Id_Number == null)) {
                throw new global::System.ArgumentNullException("Guardian_Id_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Guardian_Id_Number));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Number));
            if ((Original_Bill_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Bill_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Bill_Number));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_Bill_Amount));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_Payment_Date));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.TimeSpan)(Original_Payment_Time));
            if ((Original_Payment_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Payment_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Payment_Type));
            }
            if ((Original_Billing_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Billing_Officer_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Billing_Officer_Id));
            }
            if ((Original_Guardian_Id_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Id_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Guardian_Id_Number));
            }
            if ((Bill_Number == null)) {
                throw new global::System.ArgumentNullException("Bill_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Bill_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BILLING_OFFICERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BILLING_OFFICERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BILLING_OFFICER";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Billing_Officer_Id", "Billing_Officer_Id");
            tableMapping.ColumnMappings.Add("B_Officer_First_Name", "B_Officer_First_Name");
            tableMapping.ColumnMappings.Add("B_Officer_Middle_Name", "B_Officer_Middle_Name");
            tableMapping.ColumnMappings.Add("B_Officer_Last_Name", "B_Officer_Last_Name");
            tableMapping.ColumnMappings.Add("B_Officer_Address", "B_Officer_Address");
            tableMapping.ColumnMappings.Add("B_Officer_Tele_Number", "B_Officer_Tele_Number");
            tableMapping.ColumnMappings.Add("B_Officer_DOB", "B_Officer_DOB");
            tableMapping.ColumnMappings.Add("B_Officer_Salary", "B_Officer_Salary");
            tableMapping.ColumnMappings.Add("Roll_Id", "Roll_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[BILLING_OFFICER] WHERE (([Number] = @Original_Number) AND ((@IsNull_Billing_Officer_Id = 1 AND [Billing_Officer_Id] IS NULL) OR ([Billing_Officer_Id] = @Original_Billing_Officer_Id)) AND ([B_Officer_First_Name] = @Original_B_Officer_First_Name) AND ((@IsNull_B_Officer_Middle_Name = 1 AND [B_Officer_Middle_Name] IS NULL) OR ([B_Officer_Middle_Name] = @Original_B_Officer_Middle_Name)) AND ([B_Officer_Last_Name] = @Original_B_Officer_Last_Name) AND ([B_Officer_Address] = @Original_B_Officer_Address) AND ([B_Officer_Tele_Number] = @Original_B_Officer_Tele_Number) AND ([B_Officer_DOB] = @Original_B_Officer_DOB) AND ([B_Officer_Salary] = @Original_B_Officer_Salary) AND ((@IsNull_Roll_Id = 1 AND [Roll_Id] IS NULL) OR ([Roll_Id] = @Original_Roll_Id)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Billing_Officer_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_B_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "B_Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Roll_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[BILLING_OFFICER] ([B_Officer_First_Name], [B_Officer_Middle_Name], [B_Officer_Last_Name], [B_Officer_Address], [B_Officer_Tele_Number], [B_Officer_DOB], [B_Officer_Salary], [Roll_Id]) VALUES (@B_Officer_First_Name, @B_Officer_Middle_Name, @B_Officer_Last_Name, @B_Officer_Address, @B_Officer_Tele_Number, @B_Officer_DOB, @B_Officer_Salary, @Roll_Id);
SELECT Number, Billing_Officer_Id, B_Officer_First_Name, B_Officer_Middle_Name, B_Officer_Last_Name, B_Officer_Address, B_Officer_Tele_Number, B_Officer_DOB, B_Officer_Salary, Roll_Id FROM BILLING_OFFICER WHERE (Billing_Officer_Id = @Billing_Officer_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "B_Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[BILLING_OFFICER] SET [B_Officer_First_Name] = @B_Officer_First_Name, [B_Officer_Middle_Name] = @B_Officer_Middle_Name, [B_Officer_Last_Name] = @B_Officer_Last_Name, [B_Officer_Address] = @B_Officer_Address, [B_Officer_Tele_Number] = @B_Officer_Tele_Number, [B_Officer_DOB] = @B_Officer_DOB, [B_Officer_Salary] = @B_Officer_Salary, [Roll_Id] = @Roll_Id WHERE (([Number] = @Original_Number) AND ((@IsNull_Billing_Officer_Id = 1 AND [Billing_Officer_Id] IS NULL) OR ([Billing_Officer_Id] = @Original_Billing_Officer_Id)) AND ([B_Officer_First_Name] = @Original_B_Officer_First_Name) AND ((@IsNull_B_Officer_Middle_Name = 1 AND [B_Officer_Middle_Name] IS NULL) OR ([B_Officer_Middle_Name] = @Original_B_Officer_Middle_Name)) AND ([B_Officer_Last_Name] = @Original_B_Officer_Last_Name) AND ([B_Officer_Address] = @Original_B_Officer_Address) AND ([B_Officer_Tele_Number] = @Original_B_Officer_Tele_Number) AND ([B_Officer_DOB] = @Original_B_Officer_DOB) AND ([B_Officer_Salary] = @Original_B_Officer_Salary) AND ((@IsNull_Roll_Id = 1 AND [Roll_Id] IS NULL) OR ([Roll_Id] = @Original_Roll_Id)));
SELECT Number, Billing_Officer_Id, B_Officer_First_Name, B_Officer_Middle_Name, B_Officer_Last_Name, B_Officer_Address, B_Officer_Tele_Number, B_Officer_DOB, B_Officer_Salary, Roll_Id FROM BILLING_OFFICER WHERE (Billing_Officer_Id = @Billing_Officer_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "B_Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Billing_Officer_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_B_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B_Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "B_Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Roll_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Billing_Officer_Id, B_Officer_First_Name, B_Officer_Middle_Name, B" +
                "_Officer_Last_Name, B_Officer_Address, B_Officer_Tele_Number, B_Officer_DOB, B_O" +
                "fficer_Salary, Roll_Id FROM dbo.BILLING_OFFICER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.BILLING_OFFICERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.BILLING_OFFICERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.BILLING_OFFICERDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.BILLING_OFFICERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.BILLING_OFFICERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "BILLING_OFFICER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Billing_Officer_Id, string Original_B_Officer_First_Name, string Original_B_Officer_Middle_Name, string Original_B_Officer_Last_Name, string Original_B_Officer_Address, int Original_B_Officer_Tele_Number, System.DateTime Original_B_Officer_DOB, decimal Original_B_Officer_Salary, string Original_Roll_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Billing_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Billing_Officer_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Billing_Officer_Id));
            }
            if ((Original_B_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_B_Officer_First_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_B_Officer_First_Name));
            }
            if ((Original_B_Officer_Middle_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_B_Officer_Middle_Name));
            }
            if ((Original_B_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_B_Officer_Last_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_B_Officer_Last_Name));
            }
            if ((Original_B_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_B_Officer_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_B_Officer_Address));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_B_Officer_Tele_Number));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_B_Officer_DOB));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_B_Officer_Salary));
            if ((Original_Roll_Id == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Roll_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string B_Officer_First_Name, string B_Officer_Middle_Name, string B_Officer_Last_Name, string B_Officer_Address, int B_Officer_Tele_Number, System.DateTime B_Officer_DOB, decimal B_Officer_Salary, string Roll_Id, string Billing_Officer_Id) {
            if ((B_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("B_Officer_First_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(B_Officer_First_Name));
            }
            if ((B_Officer_Middle_Name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(B_Officer_Middle_Name));
            }
            if ((B_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("B_Officer_Last_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(B_Officer_Last_Name));
            }
            if ((B_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("B_Officer_Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(B_Officer_Address));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(B_Officer_Tele_Number));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(B_Officer_DOB));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(B_Officer_Salary));
            if ((Roll_Id == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Roll_Id));
            }
            if ((Billing_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Billing_Officer_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Billing_Officer_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string B_Officer_First_Name, 
                    string B_Officer_Middle_Name, 
                    string B_Officer_Last_Name, 
                    string B_Officer_Address, 
                    int B_Officer_Tele_Number, 
                    System.DateTime B_Officer_DOB, 
                    decimal B_Officer_Salary, 
                    string Roll_Id, 
                    int Original_Number, 
                    string Original_Billing_Officer_Id, 
                    string Original_B_Officer_First_Name, 
                    string Original_B_Officer_Middle_Name, 
                    string Original_B_Officer_Last_Name, 
                    string Original_B_Officer_Address, 
                    int Original_B_Officer_Tele_Number, 
                    System.DateTime Original_B_Officer_DOB, 
                    decimal Original_B_Officer_Salary, 
                    string Original_Roll_Id, 
                    string Billing_Officer_Id) {
            if ((B_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("B_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(B_Officer_First_Name));
            }
            if ((B_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(B_Officer_Middle_Name));
            }
            if ((B_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("B_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(B_Officer_Last_Name));
            }
            if ((B_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("B_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(B_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(B_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(B_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(B_Officer_Salary));
            if ((Roll_Id == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Roll_Id));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Number));
            if ((Original_Billing_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Billing_Officer_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Billing_Officer_Id));
            }
            if ((Original_B_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_B_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_B_Officer_First_Name));
            }
            if ((Original_B_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_B_Officer_Middle_Name));
            }
            if ((Original_B_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_B_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_B_Officer_Last_Name));
            }
            if ((Original_B_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_B_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_B_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_B_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_B_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_B_Officer_Salary));
            if ((Original_Roll_Id == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Roll_Id));
            }
            if ((Billing_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Billing_Officer_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Billing_Officer_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CHANNELING_OFFICERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CHANNELING_OFFICERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CHANNELING_OFFICER";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Channneling_Officer_Id", "Channneling_Officer_Id");
            tableMapping.ColumnMappings.Add("Officer_First_Name", "Officer_First_Name");
            tableMapping.ColumnMappings.Add("Officer_Middle_Name", "Officer_Middle_Name");
            tableMapping.ColumnMappings.Add("Officer_Last_Name", "Officer_Last_Name");
            tableMapping.ColumnMappings.Add("Officer_Address", "Officer_Address");
            tableMapping.ColumnMappings.Add("Officer_Tele_Number", "Officer_Tele_Number");
            tableMapping.ColumnMappings.Add("Officer_DOB", "Officer_DOB");
            tableMapping.ColumnMappings.Add("Officer_Salary", "Officer_Salary");
            tableMapping.ColumnMappings.Add("Roll_Id", "Roll_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CHANNELING_OFFICER] WHERE (([Number] = @Original_Number) AND ((@IsNull_Channneling_Officer_Id = 1 AND [Channneling_Officer_Id] IS NULL) OR ([Channneling_Officer_Id] = @Original_Channneling_Officer_Id)) AND ([Officer_First_Name] = @Original_Officer_First_Name) AND ((@IsNull_Officer_Middle_Name = 1 AND [Officer_Middle_Name] IS NULL) OR ([Officer_Middle_Name] = @Original_Officer_Middle_Name)) AND ([Officer_Last_Name] = @Original_Officer_Last_Name) AND ([Officer_Address] = @Original_Officer_Address) AND ([Officer_Tele_Number] = @Original_Officer_Tele_Number) AND ([Officer_DOB] = @Original_Officer_DOB) AND ([Officer_Salary] = @Original_Officer_Salary) AND ((@IsNull_Roll_Id = 1 AND [Roll_Id] IS NULL) OR ([Roll_Id] = @Original_Roll_Id)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Channneling_Officer_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Channneling_Officer_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Channneling_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Channneling_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Roll_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CHANNELING_OFFICER] ([Officer_First_Name], [Officer_Middle_Name], [Officer_Last_Name], [Officer_Address], [Officer_Tele_Number], [Officer_DOB], [Officer_Salary], [Roll_Id]) VALUES (@Officer_First_Name, @Officer_Middle_Name, @Officer_Last_Name, @Officer_Address, @Officer_Tele_Number, @Officer_DOB, @Officer_Salary, @Roll_Id);
SELECT Number, Channneling_Officer_Id, Officer_First_Name, Officer_Middle_Name, Officer_Last_Name, Officer_Address, Officer_Tele_Number, Officer_DOB, Officer_Salary, Roll_Id FROM CHANNELING_OFFICER WHERE (Channneling_Officer_Id = @Channneling_Officer_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Channneling_Officer_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Channneling_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CHANNELING_OFFICER] SET [Officer_First_Name] = @Officer_First_Name, [Officer_Middle_Name] = @Officer_Middle_Name, [Officer_Last_Name] = @Officer_Last_Name, [Officer_Address] = @Officer_Address, [Officer_Tele_Number] = @Officer_Tele_Number, [Officer_DOB] = @Officer_DOB, [Officer_Salary] = @Officer_Salary, [Roll_Id] = @Roll_Id WHERE (([Number] = @Original_Number) AND ((@IsNull_Channneling_Officer_Id = 1 AND [Channneling_Officer_Id] IS NULL) OR ([Channneling_Officer_Id] = @Original_Channneling_Officer_Id)) AND ([Officer_First_Name] = @Original_Officer_First_Name) AND ((@IsNull_Officer_Middle_Name = 1 AND [Officer_Middle_Name] IS NULL) OR ([Officer_Middle_Name] = @Original_Officer_Middle_Name)) AND ([Officer_Last_Name] = @Original_Officer_Last_Name) AND ([Officer_Address] = @Original_Officer_Address) AND ([Officer_Tele_Number] = @Original_Officer_Tele_Number) AND ([Officer_DOB] = @Original_Officer_DOB) AND ([Officer_Salary] = @Original_Officer_Salary) AND ((@IsNull_Roll_Id = 1 AND [Roll_Id] IS NULL) OR ([Roll_Id] = @Original_Roll_Id)));
SELECT Number, Channneling_Officer_Id, Officer_First_Name, Officer_Middle_Name, Officer_Last_Name, Officer_Address, Officer_Tele_Number, Officer_DOB, Officer_Salary, Roll_Id FROM CHANNELING_OFFICER WHERE (Channneling_Officer_Id = @Channneling_Officer_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Channneling_Officer_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Channneling_Officer_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Channneling_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Channneling_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Roll_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Channneling_Officer_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Channneling_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Channneling_Officer_Id, Officer_First_Name, Officer_Middle_Name, O" +
                "fficer_Last_Name, Officer_Address, Officer_Tele_Number, Officer_DOB, Officer_Sal" +
                "ary, Roll_Id FROM dbo.CHANNELING_OFFICER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.CHANNELING_OFFICERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.CHANNELING_OFFICERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.CHANNELING_OFFICERDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.CHANNELING_OFFICERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.CHANNELING_OFFICERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "CHANNELING_OFFICER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Channneling_Officer_Id, string Original_Officer_First_Name, string Original_Officer_Middle_Name, string Original_Officer_Last_Name, string Original_Officer_Address, int Original_Officer_Tele_Number, System.DateTime Original_Officer_DOB, decimal Original_Officer_Salary, string Original_Roll_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Channneling_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Channneling_Officer_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Channneling_Officer_Id));
            }
            if ((Original_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Officer_First_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Officer_First_Name));
            }
            if ((Original_Officer_Middle_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Officer_Middle_Name));
            }
            if ((Original_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Officer_Last_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Officer_Last_Name));
            }
            if ((Original_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Officer_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Officer_Address));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Officer_Tele_Number));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_Officer_DOB));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_Officer_Salary));
            if ((Original_Roll_Id == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Roll_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Officer_First_Name, string Officer_Middle_Name, string Officer_Last_Name, string Officer_Address, int Officer_Tele_Number, System.DateTime Officer_DOB, decimal Officer_Salary, string Roll_Id, string Channneling_Officer_Id) {
            if ((Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Officer_First_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Officer_First_Name));
            }
            if ((Officer_Middle_Name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Officer_Middle_Name));
            }
            if ((Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Officer_Last_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Officer_Last_Name));
            }
            if ((Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Officer_Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Officer_Address));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Officer_Tele_Number));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Officer_DOB));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(Officer_Salary));
            if ((Roll_Id == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Roll_Id));
            }
            if ((Channneling_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Channneling_Officer_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Channneling_Officer_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Officer_First_Name, 
                    string Officer_Middle_Name, 
                    string Officer_Last_Name, 
                    string Officer_Address, 
                    int Officer_Tele_Number, 
                    System.DateTime Officer_DOB, 
                    decimal Officer_Salary, 
                    string Roll_Id, 
                    int Original_Number, 
                    string Original_Channneling_Officer_Id, 
                    string Original_Officer_First_Name, 
                    string Original_Officer_Middle_Name, 
                    string Original_Officer_Last_Name, 
                    string Original_Officer_Address, 
                    int Original_Officer_Tele_Number, 
                    System.DateTime Original_Officer_DOB, 
                    decimal Original_Officer_Salary, 
                    string Original_Roll_Id, 
                    string Channneling_Officer_Id) {
            if ((Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Officer_First_Name));
            }
            if ((Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Officer_Middle_Name));
            }
            if ((Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Officer_Last_Name));
            }
            if ((Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Officer_Salary));
            if ((Roll_Id == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Roll_Id));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Number));
            if ((Original_Channneling_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Channneling_Officer_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Channneling_Officer_Id));
            }
            if ((Original_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Officer_First_Name));
            }
            if ((Original_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Officer_Middle_Name));
            }
            if ((Original_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Officer_Last_Name));
            }
            if ((Original_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_Officer_Salary));
            if ((Original_Roll_Id == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Roll_Id));
            }
            if ((Channneling_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Channneling_Officer_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Channneling_Officer_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CUSTOMERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CUSTOMERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CUSTOMER";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Invoice_Number", "Invoice_Number");
            tableMapping.ColumnMappings.Add("Appointment_Number", "Appointment_Number");
            tableMapping.ColumnMappings.Add("Consultant_Name", "Consultant_Name");
            tableMapping.ColumnMappings.Add("Specialist_Doctor_Id", "Specialist_Doctor_Id");
            tableMapping.ColumnMappings.Add("Session_Date", "Session_Date");
            tableMapping.ColumnMappings.Add("Patient_Name", "Patient_Name");
            tableMapping.ColumnMappings.Add("Contact_Number", "Contact_Number");
            tableMapping.ColumnMappings.Add("Hospital_Fee", "Hospital_Fee");
            tableMapping.ColumnMappings.Add("Doctor_Fee", "Doctor_Fee");
            tableMapping.ColumnMappings.Add("Issue_Time", "Issue_Time");
            tableMapping.ColumnMappings.Add("Issue_Date", "Issue_Date");
            tableMapping.ColumnMappings.Add("Channneling_Officer_Id", "Channneling_Officer_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CUSTOMER] WHERE (([Number] = @Original_Number) AND ((@IsNull_Invoice_Number = 1 AND [Invoice_Number] IS NULL) OR ([Invoice_Number] = @Original_Invoice_Number)) AND ([Appointment_Number] = @Original_Appointment_Number) AND ([Consultant_Name] = @Original_Consultant_Name) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id) AND ([Session_Date] = @Original_Session_Date) AND ([Patient_Name] = @Original_Patient_Name) AND ([Contact_Number] = @Original_Contact_Number) AND ([Hospital_Fee] = @Original_Hospital_Fee) AND ([Doctor_Fee] = @Original_Doctor_Fee) AND ([Issue_Time] = @Original_Issue_Time) AND ([Issue_Date] = @Original_Issue_Date) AND ([Channneling_Officer_Id] = @Original_Channneling_Officer_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Invoice_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Invoice_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Invoice_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Invoice_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Appointment_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Appointment_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Consultant_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Consultant_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Session_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Session_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hospital_Fee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hospital_Fee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Doctor_Fee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Doctor_Fee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Channneling_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Channneling_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CUSTOMER] ([Appointment_Number], [Consultant_Name], [Specialist_Doctor_Id], [Session_Date], [Patient_Name], [Contact_Number], [Hospital_Fee], [Doctor_Fee], [Issue_Time], [Issue_Date], [Channneling_Officer_Id]) VALUES (@Appointment_Number, @Consultant_Name, @Specialist_Doctor_Id, @Session_Date, @Patient_Name, @Contact_Number, @Hospital_Fee, @Doctor_Fee, @Issue_Time, @Issue_Date, @Channneling_Officer_Id);
SELECT Number, Invoice_Number, Appointment_Number, Consultant_Name, Specialist_Doctor_Id, Session_Date, Patient_Name, Contact_Number, Hospital_Fee, Doctor_Fee, Issue_Time, Issue_Date, Channneling_Officer_Id FROM CUSTOMER WHERE (Invoice_Number = @Invoice_Number)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Appointment_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Appointment_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Consultant_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Consultant_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Session_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Session_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hospital_Fee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hospital_Fee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Doctor_Fee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Doctor_Fee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Channneling_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Channneling_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Invoice_Number", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Invoice_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CUSTOMER] SET [Appointment_Number] = @Appointment_Number, [Consultant_Name] = @Consultant_Name, [Specialist_Doctor_Id] = @Specialist_Doctor_Id, [Session_Date] = @Session_Date, [Patient_Name] = @Patient_Name, [Contact_Number] = @Contact_Number, [Hospital_Fee] = @Hospital_Fee, [Doctor_Fee] = @Doctor_Fee, [Issue_Time] = @Issue_Time, [Issue_Date] = @Issue_Date, [Channneling_Officer_Id] = @Channneling_Officer_Id WHERE (([Number] = @Original_Number) AND ((@IsNull_Invoice_Number = 1 AND [Invoice_Number] IS NULL) OR ([Invoice_Number] = @Original_Invoice_Number)) AND ([Appointment_Number] = @Original_Appointment_Number) AND ([Consultant_Name] = @Original_Consultant_Name) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id) AND ([Session_Date] = @Original_Session_Date) AND ([Patient_Name] = @Original_Patient_Name) AND ([Contact_Number] = @Original_Contact_Number) AND ([Hospital_Fee] = @Original_Hospital_Fee) AND ([Doctor_Fee] = @Original_Doctor_Fee) AND ([Issue_Time] = @Original_Issue_Time) AND ([Issue_Date] = @Original_Issue_Date) AND ([Channneling_Officer_Id] = @Original_Channneling_Officer_Id));
SELECT Number, Invoice_Number, Appointment_Number, Consultant_Name, Specialist_Doctor_Id, Session_Date, Patient_Name, Contact_Number, Hospital_Fee, Doctor_Fee, Issue_Time, Issue_Date, Channneling_Officer_Id FROM CUSTOMER WHERE (Invoice_Number = @Invoice_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Appointment_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Appointment_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Consultant_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Consultant_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Session_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Session_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hospital_Fee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hospital_Fee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Doctor_Fee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Doctor_Fee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Channneling_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Channneling_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Invoice_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Invoice_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Invoice_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Invoice_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Appointment_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Appointment_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Consultant_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Consultant_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Session_Date", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Session_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Hospital_Fee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hospital_Fee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Doctor_Fee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Doctor_Fee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Channneling_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Channneling_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Invoice_Number", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Invoice_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Invoice_Number, Appointment_Number, Consultant_Name, Specialist_Do" +
                "ctor_Id, Session_Date, Patient_Name, Contact_Number, Hospital_Fee, Doctor_Fee, I" +
                "ssue_Time, Issue_Date, Channneling_Officer_Id FROM dbo.CUSTOMER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.CUSTOMERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.CUSTOMERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.CUSTOMERDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.CUSTOMERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.CUSTOMERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "CUSTOMER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Invoice_Number, int Original_Appointment_Number, string Original_Consultant_Name, string Original_Specialist_Doctor_Id, string Original_Session_Date, string Original_Patient_Name, int Original_Contact_Number, int Original_Hospital_Fee, int Original_Doctor_Fee, System.TimeSpan Original_Issue_Time, System.DateTime Original_Issue_Date, string Original_Channneling_Officer_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Invoice_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Invoice_Number));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Appointment_Number));
            if ((Original_Consultant_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Consultant_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Consultant_Name));
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((Original_Session_Date == null)) {
                throw new global::System.ArgumentNullException("Original_Session_Date");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Session_Date));
            }
            if ((Original_Patient_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Patient_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Patient_Name));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Contact_Number));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Hospital_Fee));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_Doctor_Fee));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.TimeSpan)(Original_Issue_Time));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_Issue_Date));
            if ((Original_Channneling_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Channneling_Officer_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Channneling_Officer_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Appointment_Number, string Consultant_Name, string Specialist_Doctor_Id, string Session_Date, string Patient_Name, int Contact_Number, int Hospital_Fee, int Doctor_Fee, System.TimeSpan Issue_Time, System.DateTime Issue_Date, string Channneling_Officer_Id, string Invoice_Number) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Appointment_Number));
            if ((Consultant_Name == null)) {
                throw new global::System.ArgumentNullException("Consultant_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Consultant_Name));
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Specialist_Doctor_Id));
            }
            if ((Session_Date == null)) {
                throw new global::System.ArgumentNullException("Session_Date");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Session_Date));
            }
            if ((Patient_Name == null)) {
                throw new global::System.ArgumentNullException("Patient_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Patient_Name));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Contact_Number));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Hospital_Fee));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Doctor_Fee));
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.TimeSpan)(Issue_Time));
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(Issue_Date));
            if ((Channneling_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Channneling_Officer_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Channneling_Officer_Id));
            }
            if ((Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Invoice_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Invoice_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Appointment_Number, 
                    string Consultant_Name, 
                    string Specialist_Doctor_Id, 
                    string Session_Date, 
                    string Patient_Name, 
                    int Contact_Number, 
                    int Hospital_Fee, 
                    int Doctor_Fee, 
                    System.TimeSpan Issue_Time, 
                    System.DateTime Issue_Date, 
                    string Channneling_Officer_Id, 
                    int Original_Number, 
                    string Original_Invoice_Number, 
                    int Original_Appointment_Number, 
                    string Original_Consultant_Name, 
                    string Original_Specialist_Doctor_Id, 
                    string Original_Session_Date, 
                    string Original_Patient_Name, 
                    int Original_Contact_Number, 
                    int Original_Hospital_Fee, 
                    int Original_Doctor_Fee, 
                    System.TimeSpan Original_Issue_Time, 
                    System.DateTime Original_Issue_Date, 
                    string Original_Channneling_Officer_Id, 
                    string Invoice_Number) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Appointment_Number));
            if ((Consultant_Name == null)) {
                throw new global::System.ArgumentNullException("Consultant_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Consultant_Name));
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Specialist_Doctor_Id));
            }
            if ((Session_Date == null)) {
                throw new global::System.ArgumentNullException("Session_Date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Session_Date));
            }
            if ((Patient_Name == null)) {
                throw new global::System.ArgumentNullException("Patient_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Patient_Name));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Contact_Number));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Hospital_Fee));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Doctor_Fee));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.TimeSpan)(Issue_Time));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Issue_Date));
            if ((Channneling_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Channneling_Officer_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Channneling_Officer_Id));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Number));
            if ((Original_Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Invoice_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Invoice_Number));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_Appointment_Number));
            if ((Original_Consultant_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Consultant_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Consultant_Name));
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((Original_Session_Date == null)) {
                throw new global::System.ArgumentNullException("Original_Session_Date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Session_Date));
            }
            if ((Original_Patient_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Patient_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Patient_Name));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_Contact_Number));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_Hospital_Fee));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_Doctor_Fee));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.TimeSpan)(Original_Issue_Time));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_Issue_Date));
            if ((Original_Channneling_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Channneling_Officer_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Channneling_Officer_Id));
            }
            if ((Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Invoice_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Invoice_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DRUGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DRUGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DRUG";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Drug_Code", "Drug_Code");
            tableMapping.ColumnMappings.Add("Drug_Name", "Drug_Name");
            tableMapping.ColumnMappings.Add("Trade_Number", "Trade_Number");
            tableMapping.ColumnMappings.Add("Store_Place", "Store_Place");
            tableMapping.ColumnMappings.Add("Drug_Price", "Drug_Price");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DRUG] WHERE (([Number] = @Original_Number) AND ((@IsNull_Drug_Code = 1 AND [Drug_Code] IS NULL) OR ([Drug_Code] = @Original_Drug_Code)) AND ([Drug_Name] = @Original_Drug_Name) AND ([Trade_Number] = @Original_Trade_Number) AND ([Store_Place] = @Original_Store_Place) AND ([Drug_Price] = @Original_Drug_Price))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Drug_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trade_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trade_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Store_Place", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Store_Place", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Price", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DRUG] ([Drug_Name], [Trade_Number], [Store_Place], [Drug_Price]) VALUES (@Drug_Name, @Trade_Number, @Store_Place, @Drug_Price);
SELECT Number, Drug_Code, Drug_Name, Trade_Number, Store_Place, Drug_Price FROM DRUG WHERE (Drug_Code = @Drug_Code)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trade_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trade_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Store_Place", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Store_Place", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Price", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Code", global::System.Data.SqlDbType.VarChar, 11, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DRUG] SET [Drug_Name] = @Drug_Name, [Trade_Number] = @Trade_Number, [Store_Place] = @Store_Place, [Drug_Price] = @Drug_Price WHERE (([Number] = @Original_Number) AND ((@IsNull_Drug_Code = 1 AND [Drug_Code] IS NULL) OR ([Drug_Code] = @Original_Drug_Code)) AND ([Drug_Name] = @Original_Drug_Name) AND ([Trade_Number] = @Original_Trade_Number) AND ([Store_Place] = @Original_Store_Place) AND ([Drug_Price] = @Original_Drug_Price));
SELECT Number, Drug_Code, Drug_Name, Trade_Number, Store_Place, Drug_Price FROM DRUG WHERE (Drug_Code = @Drug_Code)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trade_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trade_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Store_Place", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Store_Place", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Price", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Drug_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trade_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trade_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Store_Place", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Store_Place", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Price", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Code", global::System.Data.SqlDbType.VarChar, 11, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Drug_Code, Drug_Name, Trade_Number, Store_Place, Drug_Price FROM d" +
                "bo.DRUG";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.DRUGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.DRUGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.DRUGDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.DRUGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.DRUGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "DRUG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Drug_Code, string Original_Drug_Name, string Original_Trade_Number, string Original_Store_Place, double Original_Drug_Price) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Drug_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Drug_Code));
            }
            if ((Original_Drug_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Drug_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Drug_Name));
            }
            if ((Original_Trade_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Trade_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Trade_Number));
            }
            if ((Original_Store_Place == null)) {
                throw new global::System.ArgumentNullException("Original_Store_Place");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Store_Place));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_Drug_Price));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Drug_Name, string Trade_Number, string Store_Place, double Drug_Price, string Drug_Code) {
            if ((Drug_Name == null)) {
                throw new global::System.ArgumentNullException("Drug_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Drug_Name));
            }
            if ((Trade_Number == null)) {
                throw new global::System.ArgumentNullException("Trade_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Trade_Number));
            }
            if ((Store_Place == null)) {
                throw new global::System.ArgumentNullException("Store_Place");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Store_Place));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Drug_Price));
            if ((Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Drug_Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Drug_Code));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Drug_Name, string Trade_Number, string Store_Place, double Drug_Price, int Original_Number, string Original_Drug_Code, string Original_Drug_Name, string Original_Trade_Number, string Original_Store_Place, double Original_Drug_Price, string Drug_Code) {
            if ((Drug_Name == null)) {
                throw new global::System.ArgumentNullException("Drug_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Drug_Name));
            }
            if ((Trade_Number == null)) {
                throw new global::System.ArgumentNullException("Trade_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Trade_Number));
            }
            if ((Store_Place == null)) {
                throw new global::System.ArgumentNullException("Store_Place");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Store_Place));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Drug_Price));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Number));
            if ((Original_Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Drug_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Drug_Code));
            }
            if ((Original_Drug_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Drug_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Drug_Name));
            }
            if ((Original_Trade_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Trade_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Trade_Number));
            }
            if ((Original_Store_Place == null)) {
                throw new global::System.ArgumentNullException("Original_Store_Place");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Store_Place));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_Drug_Price));
            if ((Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Drug_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Drug_Code));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DRUG_ORDERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DRUG_ORDERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DRUG_ORDER";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Order_Number", "Order_Number");
            tableMapping.ColumnMappings.Add("Drug_Code", "Drug_Code");
            tableMapping.ColumnMappings.Add("Drug_Name", "Drug_Name");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Order_Date", "Order_Date");
            tableMapping.ColumnMappings.Add("Supplier_Id", "Supplier_Id");
            tableMapping.ColumnMappings.Add("Supply_Date", "Supply_Date");
            tableMapping.ColumnMappings.Add("Supply_Time", "Supply_Time");
            tableMapping.ColumnMappings.Add("Supply_Quantity", "Supply_Quantity");
            tableMapping.ColumnMappings.Add("Manufacture_Date", "Manufacture_Date");
            tableMapping.ColumnMappings.Add("Expire_Date", "Expire_Date");
            tableMapping.ColumnMappings.Add("Total_Bill_Amount", "Total_Bill_Amount");
            tableMapping.ColumnMappings.Add("Pharmacy_Staff_Id", "Pharmacy_Staff_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DRUG_ORDER] WHERE (([Number] = @Original_Number) AND ((@IsNull_Order_Number = 1 AND [Order_Number] IS NULL) OR ([Order_Number] = @Original_Order_Number)) AND ([Drug_Code] = @Original_Drug_Code) AND ([Drug_Name] = @Original_Drug_Name) AND ([Quantity] = @Original_Quantity) AND ([Order_Date] = @Original_Order_Date) AND ([Supplier_Id] = @Original_Supplier_Id) AND ([Supply_Date] = @Original_Supply_Date) AND ([Supply_Time] = @Original_Supply_Time) AND ([Supply_Quantity] = @Original_Supply_Quantity) AND ([Manufacture_Date] = @Original_Manufacture_Date) AND ([Expire_Date] = @Original_Expire_Date) AND ([Total_Bill_Amount] = @Original_Total_Bill_Amount) AND ([Pharmacy_Staff_Id] = @Original_Pharmacy_Staff_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Order_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Order_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Order_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Order_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Order_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Order_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supply_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supply_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supply_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supply_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supply_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supply_Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Manufacture_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Expire_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Expire_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Bill_Amount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Bill_Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pharmacy_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DRUG_ORDER] ([Drug_Code], [Drug_Name], [Quantity], [Order_Date], [Supplier_Id], [Supply_Date], [Supply_Time], [Supply_Quantity], [Manufacture_Date], [Expire_Date], [Total_Bill_Amount], [Pharmacy_Staff_Id]) VALUES (@Drug_Code, @Drug_Name, @Quantity, @Order_Date, @Supplier_Id, @Supply_Date, @Supply_Time, @Supply_Quantity, @Manufacture_Date, @Expire_Date, @Total_Bill_Amount, @Pharmacy_Staff_Id);
SELECT Number, Order_Number, Drug_Code, Drug_Name, Quantity, Order_Date, Supplier_Id, Supply_Date, Supply_Time, Supply_Quantity, Manufacture_Date, Expire_Date, Total_Bill_Amount, Pharmacy_Staff_Id FROM DRUG_ORDER WHERE (Order_Number = @Order_Number)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Order_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Order_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supply_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supply_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supply_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supply_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supply_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supply_Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Manufacture_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Expire_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Expire_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Bill_Amount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Bill_Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pharmacy_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Order_Number", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Order_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DRUG_ORDER] SET [Drug_Code] = @Drug_Code, [Drug_Name] = @Drug_Name, [Quantity] = @Quantity, [Order_Date] = @Order_Date, [Supplier_Id] = @Supplier_Id, [Supply_Date] = @Supply_Date, [Supply_Time] = @Supply_Time, [Supply_Quantity] = @Supply_Quantity, [Manufacture_Date] = @Manufacture_Date, [Expire_Date] = @Expire_Date, [Total_Bill_Amount] = @Total_Bill_Amount, [Pharmacy_Staff_Id] = @Pharmacy_Staff_Id WHERE (([Number] = @Original_Number) AND ((@IsNull_Order_Number = 1 AND [Order_Number] IS NULL) OR ([Order_Number] = @Original_Order_Number)) AND ([Drug_Code] = @Original_Drug_Code) AND ([Drug_Name] = @Original_Drug_Name) AND ([Quantity] = @Original_Quantity) AND ([Order_Date] = @Original_Order_Date) AND ([Supplier_Id] = @Original_Supplier_Id) AND ([Supply_Date] = @Original_Supply_Date) AND ([Supply_Time] = @Original_Supply_Time) AND ([Supply_Quantity] = @Original_Supply_Quantity) AND ([Manufacture_Date] = @Original_Manufacture_Date) AND ([Expire_Date] = @Original_Expire_Date) AND ([Total_Bill_Amount] = @Original_Total_Bill_Amount) AND ([Pharmacy_Staff_Id] = @Original_Pharmacy_Staff_Id));
SELECT Number, Order_Number, Drug_Code, Drug_Name, Quantity, Order_Date, Supplier_Id, Supply_Date, Supply_Time, Supply_Quantity, Manufacture_Date, Expire_Date, Total_Bill_Amount, Pharmacy_Staff_Id FROM DRUG_ORDER WHERE (Order_Number = @Order_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Order_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Order_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supply_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supply_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supply_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supply_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supply_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supply_Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Manufacture_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Expire_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Expire_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Bill_Amount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Bill_Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pharmacy_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Order_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Order_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Order_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Order_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Order_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Order_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supply_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supply_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supply_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supply_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supply_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supply_Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Manufacture_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Expire_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Expire_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Bill_Amount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Bill_Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pharmacy_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Order_Number", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Order_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Order_Number, Drug_Code, Drug_Name, Quantity, Order_Date, Supplier" +
                "_Id, Supply_Date, Supply_Time, Supply_Quantity, Manufacture_Date, Expire_Date, T" +
                "otal_Bill_Amount, Pharmacy_Staff_Id FROM dbo.DRUG_ORDER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.DRUG_ORDERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.DRUG_ORDERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.DRUG_ORDERDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.DRUG_ORDERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.DRUG_ORDERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "DRUG_ORDER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Order_Number, string Original_Drug_Code, string Original_Drug_Name, int Original_Quantity, System.DateTime Original_Order_Date, string Original_Supplier_Id, System.DateTime Original_Supply_Date, System.TimeSpan Original_Supply_Time, int Original_Supply_Quantity, System.DateTime Original_Manufacture_Date, System.DateTime Original_Expire_Date, double Original_Total_Bill_Amount, string Original_Pharmacy_Staff_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Order_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Order_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Order_Number));
            }
            if ((Original_Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Drug_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Drug_Code));
            }
            if ((Original_Drug_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Drug_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Drug_Name));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Quantity));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_Order_Date));
            if ((Original_Supplier_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Supplier_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Supplier_Id));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_Supply_Date));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.TimeSpan)(Original_Supply_Time));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_Supply_Quantity));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_Manufacture_Date));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_Expire_Date));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_Total_Bill_Amount));
            if ((Original_Pharmacy_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Pharmacy_Staff_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Pharmacy_Staff_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Drug_Code, string Drug_Name, int Quantity, System.DateTime Order_Date, string Supplier_Id, System.DateTime Supply_Date, System.TimeSpan Supply_Time, int Supply_Quantity, System.DateTime Manufacture_Date, System.DateTime Expire_Date, double Total_Bill_Amount, string Pharmacy_Staff_Id, string Order_Number) {
            if ((Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Drug_Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Drug_Code));
            }
            if ((Drug_Name == null)) {
                throw new global::System.ArgumentNullException("Drug_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Drug_Name));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Quantity));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Order_Date));
            if ((Supplier_Id == null)) {
                throw new global::System.ArgumentNullException("Supplier_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Supplier_Id));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Supply_Date));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.TimeSpan)(Supply_Time));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Supply_Quantity));
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(Manufacture_Date));
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(Expire_Date));
            this.Adapter.InsertCommand.Parameters[10].Value = ((double)(Total_Bill_Amount));
            if ((Pharmacy_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Pharmacy_Staff_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Pharmacy_Staff_Id));
            }
            if ((Order_Number == null)) {
                throw new global::System.ArgumentNullException("Order_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Order_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Drug_Code, 
                    string Drug_Name, 
                    int Quantity, 
                    System.DateTime Order_Date, 
                    string Supplier_Id, 
                    System.DateTime Supply_Date, 
                    System.TimeSpan Supply_Time, 
                    int Supply_Quantity, 
                    System.DateTime Manufacture_Date, 
                    System.DateTime Expire_Date, 
                    double Total_Bill_Amount, 
                    string Pharmacy_Staff_Id, 
                    int Original_Number, 
                    string Original_Order_Number, 
                    string Original_Drug_Code, 
                    string Original_Drug_Name, 
                    int Original_Quantity, 
                    System.DateTime Original_Order_Date, 
                    string Original_Supplier_Id, 
                    System.DateTime Original_Supply_Date, 
                    System.TimeSpan Original_Supply_Time, 
                    int Original_Supply_Quantity, 
                    System.DateTime Original_Manufacture_Date, 
                    System.DateTime Original_Expire_Date, 
                    double Original_Total_Bill_Amount, 
                    string Original_Pharmacy_Staff_Id, 
                    string Order_Number) {
            if ((Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Drug_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Drug_Code));
            }
            if ((Drug_Name == null)) {
                throw new global::System.ArgumentNullException("Drug_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Drug_Name));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Quantity));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Order_Date));
            if ((Supplier_Id == null)) {
                throw new global::System.ArgumentNullException("Supplier_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Supplier_Id));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Supply_Date));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.TimeSpan)(Supply_Time));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Supply_Quantity));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Manufacture_Date));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Expire_Date));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Total_Bill_Amount));
            if ((Pharmacy_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Pharmacy_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Pharmacy_Staff_Id));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Number));
            if ((Original_Order_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Order_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Order_Number));
            }
            if ((Original_Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Drug_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Drug_Code));
            }
            if ((Original_Drug_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Drug_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Drug_Name));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Quantity));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_Order_Date));
            if ((Original_Supplier_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Supplier_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Supplier_Id));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_Supply_Date));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.TimeSpan)(Original_Supply_Time));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_Supply_Quantity));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_Manufacture_Date));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_Expire_Date));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Original_Total_Bill_Amount));
            if ((Original_Pharmacy_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Pharmacy_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Pharmacy_Staff_Id));
            }
            if ((Order_Number == null)) {
                throw new global::System.ArgumentNullException("Order_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Order_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DRUG_SUPPLIERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DRUG_SUPPLIERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DRUG_SUPPLIER";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Supplier_Id", "Supplier_Id");
            tableMapping.ColumnMappings.Add("Supplier_Name", "Supplier_Name");
            tableMapping.ColumnMappings.Add("Manufacture_Company", "Manufacture_Company");
            tableMapping.ColumnMappings.Add("Manufacture_Country", "Manufacture_Country");
            tableMapping.ColumnMappings.Add("Manufacture_Reg_Number", "Manufacture_Reg_Number");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DRUG_SUPPLIER] WHERE (([Number] = @Original_Number) AND ((@IsNull_Supplier_Id = 1 AND [Supplier_Id] IS NULL) OR ([Supplier_Id] = @Original_Supplier_Id)) AND ([Supplier_Name] = @Original_Supplier_Name) AND ([Manufacture_Company] = @Original_Manufacture_Company) AND ([Manufacture_Country] = @Original_Manufacture_Country) AND ([Manufacture_Reg_Number] = @Original_Manufacture_Reg_Number))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supplier_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Manufacture_Company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Company", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Manufacture_Country", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Country", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Manufacture_Reg_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Reg_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DRUG_SUPPLIER] ([Supplier_Name], [Manufacture_Company], [Manufacture_Country], [Manufacture_Reg_Number]) VALUES (@Supplier_Name, @Manufacture_Company, @Manufacture_Country, @Manufacture_Reg_Number);
SELECT Number, Supplier_Id, Supplier_Name, Manufacture_Company, Manufacture_Country, Manufacture_Reg_Number FROM DRUG_SUPPLIER WHERE (Supplier_Id = @Supplier_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Manufacture_Company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Manufacture_Country", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Country", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Manufacture_Reg_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Reg_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DRUG_SUPPLIER] SET [Supplier_Name] = @Supplier_Name, [Manufacture_Company] = @Manufacture_Company, [Manufacture_Country] = @Manufacture_Country, [Manufacture_Reg_Number] = @Manufacture_Reg_Number WHERE (([Number] = @Original_Number) AND ((@IsNull_Supplier_Id = 1 AND [Supplier_Id] IS NULL) OR ([Supplier_Id] = @Original_Supplier_Id)) AND ([Supplier_Name] = @Original_Supplier_Name) AND ([Manufacture_Company] = @Original_Manufacture_Company) AND ([Manufacture_Country] = @Original_Manufacture_Country) AND ([Manufacture_Reg_Number] = @Original_Manufacture_Reg_Number));
SELECT Number, Supplier_Id, Supplier_Name, Manufacture_Company, Manufacture_Country, Manufacture_Reg_Number FROM DRUG_SUPPLIER WHERE (Supplier_Id = @Supplier_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Manufacture_Company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Manufacture_Country", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Country", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Manufacture_Reg_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Reg_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supplier_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supplier_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Manufacture_Company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Company", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Manufacture_Country", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Country", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Manufacture_Reg_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacture_Reg_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supplier_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Supplier_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Supplier_Id, Supplier_Name, Manufacture_Company, Manufacture_Count" +
                "ry, Manufacture_Reg_Number FROM dbo.DRUG_SUPPLIER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.DRUG_SUPPLIERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.DRUG_SUPPLIERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.DRUG_SUPPLIERDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.DRUG_SUPPLIERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.DRUG_SUPPLIERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "DRUG_SUPPLIER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Supplier_Id, string Original_Supplier_Name, string Original_Manufacture_Company, string Original_Manufacture_Country, string Original_Manufacture_Reg_Number) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Supplier_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Supplier_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Supplier_Id));
            }
            if ((Original_Supplier_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Supplier_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Supplier_Name));
            }
            if ((Original_Manufacture_Company == null)) {
                throw new global::System.ArgumentNullException("Original_Manufacture_Company");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Manufacture_Company));
            }
            if ((Original_Manufacture_Country == null)) {
                throw new global::System.ArgumentNullException("Original_Manufacture_Country");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Manufacture_Country));
            }
            if ((Original_Manufacture_Reg_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Manufacture_Reg_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Manufacture_Reg_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Supplier_Name, string Manufacture_Company, string Manufacture_Country, string Manufacture_Reg_Number, string Supplier_Id) {
            if ((Supplier_Name == null)) {
                throw new global::System.ArgumentNullException("Supplier_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Supplier_Name));
            }
            if ((Manufacture_Company == null)) {
                throw new global::System.ArgumentNullException("Manufacture_Company");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Manufacture_Company));
            }
            if ((Manufacture_Country == null)) {
                throw new global::System.ArgumentNullException("Manufacture_Country");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Manufacture_Country));
            }
            if ((Manufacture_Reg_Number == null)) {
                throw new global::System.ArgumentNullException("Manufacture_Reg_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Manufacture_Reg_Number));
            }
            if ((Supplier_Id == null)) {
                throw new global::System.ArgumentNullException("Supplier_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Supplier_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Supplier_Name, string Manufacture_Company, string Manufacture_Country, string Manufacture_Reg_Number, int Original_Number, string Original_Supplier_Id, string Original_Supplier_Name, string Original_Manufacture_Company, string Original_Manufacture_Country, string Original_Manufacture_Reg_Number, string Supplier_Id) {
            if ((Supplier_Name == null)) {
                throw new global::System.ArgumentNullException("Supplier_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Supplier_Name));
            }
            if ((Manufacture_Company == null)) {
                throw new global::System.ArgumentNullException("Manufacture_Company");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Manufacture_Company));
            }
            if ((Manufacture_Country == null)) {
                throw new global::System.ArgumentNullException("Manufacture_Country");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Manufacture_Country));
            }
            if ((Manufacture_Reg_Number == null)) {
                throw new global::System.ArgumentNullException("Manufacture_Reg_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Manufacture_Reg_Number));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Number));
            if ((Original_Supplier_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Supplier_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Supplier_Id));
            }
            if ((Original_Supplier_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Supplier_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Supplier_Name));
            }
            if ((Original_Manufacture_Company == null)) {
                throw new global::System.ArgumentNullException("Original_Manufacture_Company");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Manufacture_Company));
            }
            if ((Original_Manufacture_Country == null)) {
                throw new global::System.ArgumentNullException("Original_Manufacture_Country");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Manufacture_Country));
            }
            if ((Original_Manufacture_Reg_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Manufacture_Reg_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Manufacture_Reg_Number));
            }
            if ((Supplier_Id == null)) {
                throw new global::System.ArgumentNullException("Supplier_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Supplier_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GUARDIANTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public GUARDIANTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GUARDIAN";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Guardian_Id_Number", "Guardian_Id_Number");
            tableMapping.ColumnMappings.Add("Guardian_NIC", "Guardian_NIC");
            tableMapping.ColumnMappings.Add("Guardian_Name", "Guardian_Name");
            tableMapping.ColumnMappings.Add("Guardian_Address", "Guardian_Address");
            tableMapping.ColumnMappings.Add("Gurdian_Tele_No", "Gurdian_Tele_No");
            tableMapping.ColumnMappings.Add("Relationship", "Relationship");
            tableMapping.ColumnMappings.Add("Admission_Officer_Id", "Admission_Officer_Id");
            tableMapping.ColumnMappings.Add("Billing_Officer_Id", "Billing_Officer_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[GUARDIAN] WHERE (([Number] = @Original_Number) AND ((@IsNull_Guardian_Id_Number = 1 AND [Guardian_Id_Number] IS NULL) OR ([Guardian_Id_Number] = @Original_Guardian_Id_Number)) AND ([Guardian_NIC] = @Original_Guardian_NIC) AND ([Guardian_Name] = @Original_Guardian_Name) AND ([Guardian_Address] = @Original_Guardian_Address) AND ([Gurdian_Tele_No] = @Original_Gurdian_Tele_No) AND ([Relationship] = @Original_Relationship) AND ([Admission_Officer_Id] = @Original_Admission_Officer_Id) AND ((@IsNull_Billing_Officer_Id = 1 AND [Billing_Officer_Id] IS NULL) OR ([Billing_Officer_Id] = @Original_Billing_Officer_Id)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Guardian_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Id_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Id_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_NIC", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_NIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gurdian_Tele_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gurdian_Tele_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Relationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Relationship", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Billing_Officer_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[GUARDIAN] ([Guardian_NIC], [Guardian_Name], [Guardian_Address], [Gurdian_Tele_No], [Relationship], [Admission_Officer_Id], [Billing_Officer_Id]) VALUES (@Guardian_NIC, @Guardian_Name, @Guardian_Address, @Gurdian_Tele_No, @Relationship, @Admission_Officer_Id, @Billing_Officer_Id);
SELECT Number, Guardian_Id_Number, Guardian_NIC, Guardian_Name, Guardian_Address, Gurdian_Tele_No, Relationship, Admission_Officer_Id, Billing_Officer_Id FROM GUARDIAN WHERE (Guardian_Id_Number = @Guardian_Id_Number)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_NIC", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_NIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gurdian_Tele_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gurdian_Tele_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Relationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Relationship", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Id_Number", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[GUARDIAN] SET [Guardian_NIC] = @Guardian_NIC, [Guardian_Name] = @Guardian_Name, [Guardian_Address] = @Guardian_Address, [Gurdian_Tele_No] = @Gurdian_Tele_No, [Relationship] = @Relationship, [Admission_Officer_Id] = @Admission_Officer_Id, [Billing_Officer_Id] = @Billing_Officer_Id WHERE (([Number] = @Original_Number) AND ((@IsNull_Guardian_Id_Number = 1 AND [Guardian_Id_Number] IS NULL) OR ([Guardian_Id_Number] = @Original_Guardian_Id_Number)) AND ([Guardian_NIC] = @Original_Guardian_NIC) AND ([Guardian_Name] = @Original_Guardian_Name) AND ([Guardian_Address] = @Original_Guardian_Address) AND ([Gurdian_Tele_No] = @Original_Gurdian_Tele_No) AND ([Relationship] = @Original_Relationship) AND ([Admission_Officer_Id] = @Original_Admission_Officer_Id) AND ((@IsNull_Billing_Officer_Id = 1 AND [Billing_Officer_Id] IS NULL) OR ([Billing_Officer_Id] = @Original_Billing_Officer_Id)));
SELECT Number, Guardian_Id_Number, Guardian_NIC, Guardian_Name, Guardian_Address, Gurdian_Tele_No, Relationship, Admission_Officer_Id, Billing_Officer_Id FROM GUARDIAN WHERE (Guardian_Id_Number = @Guardian_Id_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_NIC", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_NIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gurdian_Tele_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gurdian_Tele_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Relationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Relationship", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Guardian_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Id_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Id_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_NIC", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_NIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gurdian_Tele_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gurdian_Tele_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Relationship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Relationship", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Billing_Officer_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Id_Number", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Guardian_Id_Number, Guardian_NIC, Guardian_Name, Guardian_Address," +
                " Gurdian_Tele_No, Relationship, Admission_Officer_Id, Billing_Officer_Id FROM db" +
                "o.GUARDIAN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.GUARDIANDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.GUARDIANDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.GUARDIANDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.GUARDIANDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.GUARDIANDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "GUARDIAN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Guardian_Id_Number, string Original_Guardian_NIC, string Original_Guardian_Name, string Original_Guardian_Address, int Original_Gurdian_Tele_No, string Original_Relationship, string Original_Admission_Officer_Id, string Original_Billing_Officer_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Guardian_Id_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Id_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Guardian_Id_Number));
            }
            if ((Original_Guardian_NIC == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_NIC");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Guardian_NIC));
            }
            if ((Original_Guardian_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Guardian_Name));
            }
            if ((Original_Guardian_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Guardian_Address));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Gurdian_Tele_No));
            if ((Original_Relationship == null)) {
                throw new global::System.ArgumentNullException("Original_Relationship");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Relationship));
            }
            if ((Original_Admission_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Officer_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Admission_Officer_Id));
            }
            if ((Original_Billing_Officer_Id == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Billing_Officer_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Guardian_NIC, string Guardian_Name, string Guardian_Address, int Gurdian_Tele_No, string Relationship, string Admission_Officer_Id, string Billing_Officer_Id, string Guardian_Id_Number) {
            if ((Guardian_NIC == null)) {
                throw new global::System.ArgumentNullException("Guardian_NIC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Guardian_NIC));
            }
            if ((Guardian_Name == null)) {
                throw new global::System.ArgumentNullException("Guardian_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Guardian_Name));
            }
            if ((Guardian_Address == null)) {
                throw new global::System.ArgumentNullException("Guardian_Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Guardian_Address));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Gurdian_Tele_No));
            if ((Relationship == null)) {
                throw new global::System.ArgumentNullException("Relationship");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Relationship));
            }
            if ((Admission_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Admission_Officer_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Admission_Officer_Id));
            }
            if ((Billing_Officer_Id == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Billing_Officer_Id));
            }
            if ((Guardian_Id_Number == null)) {
                throw new global::System.ArgumentNullException("Guardian_Id_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Guardian_Id_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Guardian_NIC, 
                    string Guardian_Name, 
                    string Guardian_Address, 
                    int Gurdian_Tele_No, 
                    string Relationship, 
                    string Admission_Officer_Id, 
                    string Billing_Officer_Id, 
                    int Original_Number, 
                    string Original_Guardian_Id_Number, 
                    string Original_Guardian_NIC, 
                    string Original_Guardian_Name, 
                    string Original_Guardian_Address, 
                    int Original_Gurdian_Tele_No, 
                    string Original_Relationship, 
                    string Original_Admission_Officer_Id, 
                    string Original_Billing_Officer_Id, 
                    string Guardian_Id_Number) {
            if ((Guardian_NIC == null)) {
                throw new global::System.ArgumentNullException("Guardian_NIC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Guardian_NIC));
            }
            if ((Guardian_Name == null)) {
                throw new global::System.ArgumentNullException("Guardian_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Guardian_Name));
            }
            if ((Guardian_Address == null)) {
                throw new global::System.ArgumentNullException("Guardian_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Guardian_Address));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Gurdian_Tele_No));
            if ((Relationship == null)) {
                throw new global::System.ArgumentNullException("Relationship");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Relationship));
            }
            if ((Admission_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Admission_Officer_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Admission_Officer_Id));
            }
            if ((Billing_Officer_Id == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Billing_Officer_Id));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Number));
            if ((Original_Guardian_Id_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Id_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Guardian_Id_Number));
            }
            if ((Original_Guardian_NIC == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_NIC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Guardian_NIC));
            }
            if ((Original_Guardian_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Guardian_Name));
            }
            if ((Original_Guardian_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Guardian_Address));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_Gurdian_Tele_No));
            if ((Original_Relationship == null)) {
                throw new global::System.ArgumentNullException("Original_Relationship");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Relationship));
            }
            if ((Original_Admission_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Officer_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Admission_Officer_Id));
            }
            if ((Original_Billing_Officer_Id == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Billing_Officer_Id));
            }
            if ((Guardian_Id_Number == null)) {
                throw new global::System.ArgumentNullException("Guardian_Id_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Guardian_Id_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HOSPITAL_CUSTOMERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public HOSPITAL_CUSTOMERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HOSPITAL_CUSTOMER";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Pharmacy_Invoice_Number", "Pharmacy_Invoice_Number");
            tableMapping.ColumnMappings.Add("Patient_Id_Number", "Patient_Id_Number");
            tableMapping.ColumnMappings.Add("Specialist_Doctor_Id", "Specialist_Doctor_Id");
            tableMapping.ColumnMappings.Add("Total_Bill", "Total_Bill");
            tableMapping.ColumnMappings.Add("Issue_Date", "Issue_Date");
            tableMapping.ColumnMappings.Add("Issue_Time", "Issue_Time");
            tableMapping.ColumnMappings.Add("Pharmacy_Staff_Id", "Pharmacy_Staff_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[HOSPITAL_CUSTOMER] WHERE (([Number] = @Original_Number) AND ((@IsNull_Pharmacy_Invoice_Number = 1 AND [Pharmacy_Invoice_Number] IS NULL) OR ([Pharmacy_Invoice_Number] = @Original_Pharmacy_Invoice_Number)) AND ([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id) AND ([Total_Bill] = @Original_Total_Bill) AND ([Issue_Date] = @Original_Issue_Date) AND ([Issue_Time] = @Original_Issue_Time) AND ([Pharmacy_Staff_Id] = @Original_Pharmacy_Staff_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pharmacy_Invoice_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Invoice_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pharmacy_Invoice_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Invoice_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Bill", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Total_Bill", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pharmacy_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[HOSPITAL_CUSTOMER] ([Patient_Id_Number], [Specialist_Doctor_Id], [Total_Bill], [Issue_Date], [Issue_Time], [Pharmacy_Staff_Id]) VALUES (@Patient_Id_Number, @Specialist_Doctor_Id, @Total_Bill, @Issue_Date, @Issue_Time, @Pharmacy_Staff_Id);
SELECT Number, Pharmacy_Invoice_Number, Patient_Id_Number, Specialist_Doctor_Id, Total_Bill, Issue_Date, Issue_Time, Pharmacy_Staff_Id FROM HOSPITAL_CUSTOMER WHERE (Pharmacy_Invoice_Number = @Pharmacy_Invoice_Number)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Bill", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Total_Bill", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pharmacy_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pharmacy_Invoice_Number", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Invoice_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[HOSPITAL_CUSTOMER] SET [Patient_Id_Number] = @Patient_Id_Number, [Specialist_Doctor_Id] = @Specialist_Doctor_Id, [Total_Bill] = @Total_Bill, [Issue_Date] = @Issue_Date, [Issue_Time] = @Issue_Time, [Pharmacy_Staff_Id] = @Pharmacy_Staff_Id WHERE (([Number] = @Original_Number) AND ((@IsNull_Pharmacy_Invoice_Number = 1 AND [Pharmacy_Invoice_Number] IS NULL) OR ([Pharmacy_Invoice_Number] = @Original_Pharmacy_Invoice_Number)) AND ([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id) AND ([Total_Bill] = @Original_Total_Bill) AND ([Issue_Date] = @Original_Issue_Date) AND ([Issue_Time] = @Original_Issue_Time) AND ([Pharmacy_Staff_Id] = @Original_Pharmacy_Staff_Id));
SELECT Number, Pharmacy_Invoice_Number, Patient_Id_Number, Specialist_Doctor_Id, Total_Bill, Issue_Date, Issue_Time, Pharmacy_Staff_Id FROM HOSPITAL_CUSTOMER WHERE (Pharmacy_Invoice_Number = @Pharmacy_Invoice_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Bill", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Total_Bill", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pharmacy_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pharmacy_Invoice_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Invoice_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pharmacy_Invoice_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Invoice_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Bill", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Total_Bill", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pharmacy_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pharmacy_Invoice_Number", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Invoice_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Pharmacy_Invoice_Number, Patient_Id_Number, Specialist_Doctor_Id, " +
                "Total_Bill, Issue_Date, Issue_Time, Pharmacy_Staff_Id FROM dbo.HOSPITAL_CUSTOMER" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.HOSPITAL_CUSTOMERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.HOSPITAL_CUSTOMERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.HOSPITAL_CUSTOMERDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.HOSPITAL_CUSTOMERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.HOSPITAL_CUSTOMERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "HOSPITAL_CUSTOMER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Pharmacy_Invoice_Number, int Original_Patient_Id_Number, string Original_Specialist_Doctor_Id, decimal Original_Total_Bill, System.DateTime Original_Issue_Date, System.TimeSpan Original_Issue_Time, string Original_Pharmacy_Staff_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Pharmacy_Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Pharmacy_Invoice_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Pharmacy_Invoice_Number));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Patient_Id_Number));
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_Total_Bill));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_Issue_Date));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.TimeSpan)(Original_Issue_Time));
            if ((Original_Pharmacy_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Pharmacy_Staff_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Pharmacy_Staff_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Patient_Id_Number, string Specialist_Doctor_Id, decimal Total_Bill, System.DateTime Issue_Date, System.TimeSpan Issue_Time, string Pharmacy_Staff_Id, string Pharmacy_Invoice_Number) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Specialist_Doctor_Id));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Total_Bill));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.TimeSpan)(Issue_Time));
            if ((Pharmacy_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Pharmacy_Staff_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Pharmacy_Staff_Id));
            }
            if ((Pharmacy_Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Pharmacy_Invoice_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Pharmacy_Invoice_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Patient_Id_Number, string Specialist_Doctor_Id, decimal Total_Bill, System.DateTime Issue_Date, System.TimeSpan Issue_Time, string Pharmacy_Staff_Id, int Original_Number, string Original_Pharmacy_Invoice_Number, int Original_Patient_Id_Number, string Original_Specialist_Doctor_Id, decimal Original_Total_Bill, System.DateTime Original_Issue_Date, System.TimeSpan Original_Issue_Time, string Original_Pharmacy_Staff_Id, string Pharmacy_Invoice_Number) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Specialist_Doctor_Id));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Total_Bill));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.TimeSpan)(Issue_Time));
            if ((Pharmacy_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Pharmacy_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Pharmacy_Staff_Id));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Number));
            if ((Original_Pharmacy_Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Pharmacy_Invoice_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Pharmacy_Invoice_Number));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Patient_Id_Number));
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_Total_Bill));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_Issue_Date));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.TimeSpan)(Original_Issue_Time));
            if ((Original_Pharmacy_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Pharmacy_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Pharmacy_Staff_Id));
            }
            if ((Pharmacy_Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Pharmacy_Invoice_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Pharmacy_Invoice_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class IN_PATIENTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public IN_PATIENTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "IN_PATIENT";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Admission_Number", "Admission_Number");
            tableMapping.ColumnMappings.Add("Patient_Id_Number", "Patient_Id_Number");
            tableMapping.ColumnMappings.Add("Reason", "Reason");
            tableMapping.ColumnMappings.Add("Admit_Time", "Admit_Time");
            tableMapping.ColumnMappings.Add("Admit_Date", "Admit_Date");
            tableMapping.ColumnMappings.Add("Discharge_Time", "Discharge_Time");
            tableMapping.ColumnMappings.Add("Discharge_Date", "Discharge_Date");
            tableMapping.ColumnMappings.Add("Specialist_Doctor_Id", "Specialist_Doctor_Id");
            tableMapping.ColumnMappings.Add("Ward_Number", "Ward_Number");
            tableMapping.ColumnMappings.Add("Room_Number", "Room_Number");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[IN_PATIENT] WHERE (([Number] = @Original_Number) AND ((@IsNull_Admission_Number = 1 AND [Admission_Number] IS NULL) OR ([Admission_Number] = @Original_Admission_Number)) AND ([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Reason] = @Original_Reason) AND ((@IsNull_Admit_Time = 1 AND [Admit_Time] IS NULL) OR ([Admit_Time] = @Original_Admit_Time)) AND ((@IsNull_Admit_Date = 1 AND [Admit_Date] IS NULL) OR ([Admit_Date] = @Original_Admit_Date)) AND ((@IsNull_Discharge_Time = 1 AND [Discharge_Time] IS NULL) OR ([Discharge_Time] = @Original_Discharge_Time)) AND ((@IsNull_Discharge_Date = 1 AND [Discharge_Date] IS NULL) OR ([Discharge_Date] = @Original_Discharge_Date)) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id) AND ([Ward_Number] = @Original_Ward_Number) AND ([Room_Number] = @Original_Room_Number))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Admission_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Admit_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admit_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admit_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admit_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Admit_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admit_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admit_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admit_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Discharge_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discharge_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Discharge_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discharge_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Discharge_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discharge_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Discharge_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discharge_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[IN_PATIENT] ([Patient_Id_Number], [Reason], [Admit_Time], [Admit_Date], [Discharge_Time], [Discharge_Date], [Specialist_Doctor_Id], [Ward_Number], [Room_Number]) VALUES (@Patient_Id_Number, @Reason, @Admit_Time, @Admit_Date, @Discharge_Time, @Discharge_Date, @Specialist_Doctor_Id, @Ward_Number, @Room_Number);
SELECT Number, Admission_Number, Patient_Id_Number, Reason, Admit_Time, Admit_Date, Discharge_Time, Discharge_Date, Specialist_Doctor_Id, Ward_Number, Room_Number FROM IN_PATIENT WHERE (Admission_Number = @Admission_Number)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admit_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admit_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admit_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admit_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Discharge_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discharge_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Discharge_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discharge_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Number", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[IN_PATIENT] SET [Patient_Id_Number] = @Patient_Id_Number, [Reason] = @Reason, [Admit_Time] = @Admit_Time, [Admit_Date] = @Admit_Date, [Discharge_Time] = @Discharge_Time, [Discharge_Date] = @Discharge_Date, [Specialist_Doctor_Id] = @Specialist_Doctor_Id, [Ward_Number] = @Ward_Number, [Room_Number] = @Room_Number WHERE (([Number] = @Original_Number) AND ((@IsNull_Admission_Number = 1 AND [Admission_Number] IS NULL) OR ([Admission_Number] = @Original_Admission_Number)) AND ([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Reason] = @Original_Reason) AND ((@IsNull_Admit_Time = 1 AND [Admit_Time] IS NULL) OR ([Admit_Time] = @Original_Admit_Time)) AND ((@IsNull_Admit_Date = 1 AND [Admit_Date] IS NULL) OR ([Admit_Date] = @Original_Admit_Date)) AND ((@IsNull_Discharge_Time = 1 AND [Discharge_Time] IS NULL) OR ([Discharge_Time] = @Original_Discharge_Time)) AND ((@IsNull_Discharge_Date = 1 AND [Discharge_Date] IS NULL) OR ([Discharge_Date] = @Original_Discharge_Date)) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id) AND ([Ward_Number] = @Original_Ward_Number) AND ([Room_Number] = @Original_Room_Number));
SELECT Number, Admission_Number, Patient_Id_Number, Reason, Admit_Time, Admit_Date, Discharge_Time, Discharge_Date, Specialist_Doctor_Id, Ward_Number, Room_Number FROM IN_PATIENT WHERE (Admission_Number = @Admission_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admit_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admit_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admit_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admit_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Discharge_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discharge_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Discharge_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discharge_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Admission_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Admit_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admit_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admit_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admit_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Admit_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admit_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admit_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admit_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Discharge_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discharge_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Discharge_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discharge_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Discharge_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discharge_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Discharge_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discharge_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Number", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Admission_Number, Patient_Id_Number, Reason, Admit_Time, Admit_Dat" +
                "e, Discharge_Time, Discharge_Date, Specialist_Doctor_Id, Ward_Number, Room_Numbe" +
                "r FROM dbo.IN_PATIENT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.IN_PATIENTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.IN_PATIENTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.IN_PATIENTDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.IN_PATIENTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.IN_PATIENTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "IN_PATIENT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Admission_Number, int Original_Patient_Id_Number, string Original_Reason, global::System.Nullable<global::System.TimeSpan> Original_Admit_Time, global::System.Nullable<global::System.DateTime> Original_Admit_Date, global::System.Nullable<global::System.TimeSpan> Original_Discharge_Time, global::System.Nullable<global::System.DateTime> Original_Discharge_Date, string Original_Specialist_Doctor_Id, string Original_Ward_Number, string Original_Room_Number) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Admission_Number));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Patient_Id_Number));
            if ((Original_Reason == null)) {
                throw new global::System.ArgumentNullException("Original_Reason");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Reason));
            }
            if ((Original_Admit_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.TimeSpan)(Original_Admit_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Admit_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_Admit_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Discharge_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.TimeSpan)(Original_Discharge_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Discharge_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_Discharge_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Ward_Number));
            }
            if ((Original_Room_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Room_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Patient_Id_Number, string Reason, global::System.Nullable<global::System.TimeSpan> Admit_Time, global::System.Nullable<global::System.DateTime> Admit_Date, global::System.Nullable<global::System.TimeSpan> Discharge_Time, global::System.Nullable<global::System.DateTime> Discharge_Date, string Specialist_Doctor_Id, string Ward_Number, string Room_Number, string Admission_Number) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((Reason == null)) {
                throw new global::System.ArgumentNullException("Reason");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Reason));
            }
            if ((Admit_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.TimeSpan)(Admit_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Admit_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Admit_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Discharge_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.TimeSpan)(Discharge_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Discharge_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Discharge_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Specialist_Doctor_Id));
            }
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Ward_Number));
            }
            if ((Room_Number == null)) {
                throw new global::System.ArgumentNullException("Room_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Room_Number));
            }
            if ((Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Admission_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Admission_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Patient_Id_Number, 
                    string Reason, 
                    global::System.Nullable<global::System.TimeSpan> Admit_Time, 
                    global::System.Nullable<global::System.DateTime> Admit_Date, 
                    global::System.Nullable<global::System.TimeSpan> Discharge_Time, 
                    global::System.Nullable<global::System.DateTime> Discharge_Date, 
                    string Specialist_Doctor_Id, 
                    string Ward_Number, 
                    string Room_Number, 
                    int Original_Number, 
                    string Original_Admission_Number, 
                    int Original_Patient_Id_Number, 
                    string Original_Reason, 
                    global::System.Nullable<global::System.TimeSpan> Original_Admit_Time, 
                    global::System.Nullable<global::System.DateTime> Original_Admit_Date, 
                    global::System.Nullable<global::System.TimeSpan> Original_Discharge_Time, 
                    global::System.Nullable<global::System.DateTime> Original_Discharge_Date, 
                    string Original_Specialist_Doctor_Id, 
                    string Original_Ward_Number, 
                    string Original_Room_Number, 
                    string Admission_Number) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((Reason == null)) {
                throw new global::System.ArgumentNullException("Reason");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Reason));
            }
            if ((Admit_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.TimeSpan)(Admit_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Admit_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Admit_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Discharge_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.TimeSpan)(Discharge_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Discharge_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Discharge_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Specialist_Doctor_Id));
            }
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Ward_Number));
            }
            if ((Room_Number == null)) {
                throw new global::System.ArgumentNullException("Room_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Room_Number));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Number));
            if ((Original_Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Admission_Number));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Patient_Id_Number));
            if ((Original_Reason == null)) {
                throw new global::System.ArgumentNullException("Original_Reason");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Reason));
            }
            if ((Original_Admit_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.TimeSpan)(Original_Admit_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Admit_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_Admit_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Discharge_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.TimeSpan)(Original_Discharge_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Discharge_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_Discharge_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Ward_Number));
            }
            if ((Original_Room_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Room_Number));
            }
            if ((Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Admission_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Admission_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class IN_PATIENT_MEDICINETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public IN_PATIENT_MEDICINETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "IN_PATIENT_MEDICINE";
            tableMapping.ColumnMappings.Add("Admission_Number", "Admission_Number");
            tableMapping.ColumnMappings.Add("Drug_Code", "Drug_Code");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Given_Time", "Given_Time");
            tableMapping.ColumnMappings.Add("Given_Date", "Given_Date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[IN_PATIENT_MEDICINE] WHERE (([Admission_Number] = @Original_Admission_Number) AND ([Drug_Code] = @Original_Drug_Code) AND ([Quantity] = @Original_Quantity) AND ([Given_Time] = @Original_Given_Time) AND ([Given_Date] = @Original_Given_Date))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Given_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Given_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Given_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Given_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[IN_PATIENT_MEDICINE] ([Admission_Number], [Drug_Code], [Quantity], [Given_Time], [Given_Date]) VALUES (@Admission_Number, @Drug_Code, @Quantity, @Given_Time, @Given_Date);
SELECT Admission_Number, Drug_Code, Quantity, Given_Time, Given_Date FROM IN_PATIENT_MEDICINE WHERE (Admission_Number = @Admission_Number) AND (Drug_Code = @Drug_Code)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Given_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Given_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Given_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Given_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[IN_PATIENT_MEDICINE] SET [Admission_Number] = @Admission_Number, [Drug_Code] = @Drug_Code, [Quantity] = @Quantity, [Given_Time] = @Given_Time, [Given_Date] = @Given_Date WHERE (([Admission_Number] = @Original_Admission_Number) AND ([Drug_Code] = @Original_Drug_Code) AND ([Quantity] = @Original_Quantity) AND ([Given_Time] = @Original_Given_Time) AND ([Given_Date] = @Original_Given_Date));
SELECT Admission_Number, Drug_Code, Quantity, Given_Time, Given_Date FROM IN_PATIENT_MEDICINE WHERE (Admission_Number = @Admission_Number) AND (Drug_Code = @Drug_Code)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Given_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Given_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Given_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Given_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Given_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Given_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Given_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Given_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Admission_Number, Drug_Code, Quantity, Given_Time, Given_Date FROM dbo.IN_" +
                "PATIENT_MEDICINE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_MEDICINEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_MEDICINEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_MEDICINEDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_MEDICINEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_MEDICINEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "IN_PATIENT_MEDICINE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Admission_Number, string Original_Drug_Code, string Original_Quantity, System.TimeSpan Original_Given_Time, System.DateTime Original_Given_Date) {
            if ((Original_Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Admission_Number));
            }
            if ((Original_Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Drug_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Drug_Code));
            }
            if ((Original_Quantity == null)) {
                throw new global::System.ArgumentNullException("Original_Quantity");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Quantity));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.TimeSpan)(Original_Given_Time));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Given_Date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Admission_Number, string Drug_Code, string Quantity, System.TimeSpan Given_Time, System.DateTime Given_Date) {
            if ((Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Admission_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Admission_Number));
            }
            if ((Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Drug_Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Drug_Code));
            }
            if ((Quantity == null)) {
                throw new global::System.ArgumentNullException("Quantity");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Quantity));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.TimeSpan)(Given_Time));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Given_Date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Admission_Number, string Drug_Code, string Quantity, System.TimeSpan Given_Time, System.DateTime Given_Date, string Original_Admission_Number, string Original_Drug_Code, string Original_Quantity, System.TimeSpan Original_Given_Time, System.DateTime Original_Given_Date) {
            if ((Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Admission_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Admission_Number));
            }
            if ((Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Drug_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Drug_Code));
            }
            if ((Quantity == null)) {
                throw new global::System.ArgumentNullException("Quantity");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Quantity));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.TimeSpan)(Given_Time));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Given_Date));
            if ((Original_Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Admission_Number));
            }
            if ((Original_Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Drug_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Drug_Code));
            }
            if ((Original_Quantity == null)) {
                throw new global::System.ArgumentNullException("Original_Quantity");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Quantity));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.TimeSpan)(Original_Given_Time));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_Given_Date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Quantity, System.TimeSpan Given_Time, System.DateTime Given_Date, string Original_Admission_Number, string Original_Drug_Code, string Original_Quantity, System.TimeSpan Original_Given_Time, System.DateTime Original_Given_Date) {
            return this.Update(Original_Admission_Number, Original_Drug_Code, Quantity, Given_Time, Given_Date, Original_Admission_Number, Original_Drug_Code, Original_Quantity, Original_Given_Time, Original_Given_Date);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class IN_PATIENT_REPORTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public IN_PATIENT_REPORTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "IN_PATIENT_REPORT";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("In_Patient_Report_No", "In_Patient_Report_No");
            tableMapping.ColumnMappings.Add("Admission_Number", "Admission_Number");
            tableMapping.ColumnMappings.Add("Report", "Report");
            tableMapping.ColumnMappings.Add("Issue_Date", "Issue_Date");
            tableMapping.ColumnMappings.Add("Issue_Time", "Issue_Time");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[IN_PATIENT_REPORT] WHERE (([Number] = @Original_Number) AND ((@IsNull_In_Patient_Report_No = 1 AND [In_Patient_Report_No] IS NULL) OR ([In_Patient_Report_No] = @Original_In_Patient_Report_No)) AND ([Admission_Number] = @Original_Admission_Number) AND ([Issue_Date] = @Original_Issue_Date) AND ([Issue_Time] = @Original_Issue_Time))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_In_Patient_Report_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Report_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Report_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[IN_PATIENT_REPORT] ([Admission_Number], [Report], [Issue_Date], [Issue_Time]) VALUES (@Admission_Number, @Report, @Issue_Date, @Issue_Time);
SELECT Number, In_Patient_Report_No, Admission_Number, Report, Issue_Date, Issue_Time FROM IN_PATIENT_REPORT WHERE (In_Patient_Report_No = @In_Patient_Report_No)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Report", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Report", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Report_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[IN_PATIENT_REPORT] SET [Admission_Number] = @Admission_Number, [Report] = @Report, [Issue_Date] = @Issue_Date, [Issue_Time] = @Issue_Time WHERE (([Number] = @Original_Number) AND ((@IsNull_In_Patient_Report_No = 1 AND [In_Patient_Report_No] IS NULL) OR ([In_Patient_Report_No] = @Original_In_Patient_Report_No)) AND ([Admission_Number] = @Original_Admission_Number) AND ([Issue_Date] = @Original_Issue_Date) AND ([Issue_Time] = @Original_Issue_Time));
SELECT Number, In_Patient_Report_No, Admission_Number, Report, Issue_Date, Issue_Time FROM IN_PATIENT_REPORT WHERE (In_Patient_Report_No = @In_Patient_Report_No)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Report", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Report", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_In_Patient_Report_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Report_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Report_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Report_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, In_Patient_Report_No, Admission_Number, Report, Issue_Date, Issue_" +
                "Time FROM dbo.IN_PATIENT_REPORT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_REPORTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_REPORTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_REPORTDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_REPORTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_REPORTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "IN_PATIENT_REPORT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_In_Patient_Report_No, string Original_Admission_Number, System.DateTime Original_Issue_Date, System.TimeSpan Original_Issue_Time) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_In_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("Original_In_Patient_Report_No");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_In_Patient_Report_No));
            }
            if ((Original_Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Admission_Number));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Issue_Date));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.TimeSpan)(Original_Issue_Time));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Admission_Number, byte[] Report, System.DateTime Issue_Date, System.TimeSpan Issue_Time, string In_Patient_Report_No) {
            if ((Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Admission_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Admission_Number));
            }
            if ((Report == null)) {
                throw new global::System.ArgumentNullException("Report");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((byte[])(Report));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.TimeSpan)(Issue_Time));
            if ((In_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("In_Patient_Report_No");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(In_Patient_Report_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Admission_Number, byte[] Report, System.DateTime Issue_Date, System.TimeSpan Issue_Time, int Original_Number, string Original_In_Patient_Report_No, string Original_Admission_Number, System.DateTime Original_Issue_Date, System.TimeSpan Original_Issue_Time, string In_Patient_Report_No) {
            if ((Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Admission_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Admission_Number));
            }
            if ((Report == null)) {
                throw new global::System.ArgumentNullException("Report");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((byte[])(Report));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.TimeSpan)(Issue_Time));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Number));
            if ((Original_In_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("Original_In_Patient_Report_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_In_Patient_Report_No));
            }
            if ((Original_Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Admission_Number));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_Issue_Date));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.TimeSpan)(Original_Issue_Time));
            if ((In_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("In_Patient_Report_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(In_Patient_Report_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class IN_PATIENT_SCANTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public IN_PATIENT_SCANTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "IN_PATIENT_SCAN";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("In_Patient_Scan_No", "In_Patient_Scan_No");
            tableMapping.ColumnMappings.Add("Admission_Number", "Admission_Number");
            tableMapping.ColumnMappings.Add("Scan_Report", "Scan_Report");
            tableMapping.ColumnMappings.Add("Issue_Date", "Issue_Date");
            tableMapping.ColumnMappings.Add("Issue_Time", "Issue_Time");
            tableMapping.ColumnMappings.Add("Ward_Number", "Ward_Number");
            tableMapping.ColumnMappings.Add("Room_Number", "Room_Number");
            tableMapping.ColumnMappings.Add("Specialist_Doctor_Id", "Specialist_Doctor_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[IN_PATIENT_SCAN] WHERE (([Number] = @Original_Number) AND ((@IsNull_In_Patient_Scan_No = 1 AND [In_Patient_Scan_No] IS NULL) OR ([In_Patient_Scan_No] = @Original_In_Patient_Scan_No)) AND ([Admission_Number] = @Original_Admission_Number) AND ([Issue_Date] = @Original_Issue_Date) AND ([Issue_Time] = @Original_Issue_Time) AND ([Ward_Number] = @Original_Ward_Number) AND ([Room_Number] = @Original_Room_Number) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_In_Patient_Scan_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Scan_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Scan_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[IN_PATIENT_SCAN] ([Admission_Number], [Scan_Report], [Issue_Date], [Issue_Time], [Ward_Number], [Room_Number], [Specialist_Doctor_Id]) VALUES (@Admission_Number, @Scan_Report, @Issue_Date, @Issue_Time, @Ward_Number, @Room_Number, @Specialist_Doctor_Id);
SELECT Number, In_Patient_Scan_No, Admission_Number, Scan_Report, Issue_Date, Issue_Time, Ward_Number, Room_Number, Specialist_Doctor_Id FROM IN_PATIENT_SCAN WHERE (In_Patient_Scan_No = @In_Patient_Scan_No)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Scan_Report", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Scan_Report", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Scan_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[IN_PATIENT_SCAN] SET [Admission_Number] = @Admission_Number, [Scan_Report] = @Scan_Report, [Issue_Date] = @Issue_Date, [Issue_Time] = @Issue_Time, [Ward_Number] = @Ward_Number, [Room_Number] = @Room_Number, [Specialist_Doctor_Id] = @Specialist_Doctor_Id WHERE (([Number] = @Original_Number) AND ((@IsNull_In_Patient_Scan_No = 1 AND [In_Patient_Scan_No] IS NULL) OR ([In_Patient_Scan_No] = @Original_In_Patient_Scan_No)) AND ([Admission_Number] = @Original_Admission_Number) AND ([Issue_Date] = @Original_Issue_Date) AND ([Issue_Time] = @Original_Issue_Time) AND ([Ward_Number] = @Original_Ward_Number) AND ([Room_Number] = @Original_Room_Number) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id));
SELECT Number, In_Patient_Scan_No, Admission_Number, Scan_Report, Issue_Date, Issue_Time, Ward_Number, Room_Number, Specialist_Doctor_Id FROM IN_PATIENT_SCAN WHERE (In_Patient_Scan_No = @In_Patient_Scan_No)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Scan_Report", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Scan_Report", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_In_Patient_Scan_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Scan_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Scan_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Scan_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, In_Patient_Scan_No, Admission_Number, Scan_Report, Issue_Date, Iss" +
                "ue_Time, Ward_Number, Room_Number, Specialist_Doctor_Id FROM dbo.IN_PATIENT_SCAN" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_SCANDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_SCANDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_SCANDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_SCANDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_SCANDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "IN_PATIENT_SCAN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_In_Patient_Scan_No, string Original_Admission_Number, System.DateTime Original_Issue_Date, System.TimeSpan Original_Issue_Time, string Original_Ward_Number, string Original_Room_Number, string Original_Specialist_Doctor_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_In_Patient_Scan_No == null)) {
                throw new global::System.ArgumentNullException("Original_In_Patient_Scan_No");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_In_Patient_Scan_No));
            }
            if ((Original_Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Admission_Number));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Issue_Date));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.TimeSpan)(Original_Issue_Time));
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Ward_Number));
            }
            if ((Original_Room_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Room_Number));
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Admission_Number, byte[] Scan_Report, System.DateTime Issue_Date, System.TimeSpan Issue_Time, string Ward_Number, string Room_Number, string Specialist_Doctor_Id, string In_Patient_Scan_No) {
            if ((Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Admission_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Admission_Number));
            }
            if ((Scan_Report == null)) {
                throw new global::System.ArgumentNullException("Scan_Report");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((byte[])(Scan_Report));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.TimeSpan)(Issue_Time));
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Ward_Number));
            }
            if ((Room_Number == null)) {
                throw new global::System.ArgumentNullException("Room_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Room_Number));
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Specialist_Doctor_Id));
            }
            if ((In_Patient_Scan_No == null)) {
                throw new global::System.ArgumentNullException("In_Patient_Scan_No");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(In_Patient_Scan_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Admission_Number, 
                    byte[] Scan_Report, 
                    System.DateTime Issue_Date, 
                    System.TimeSpan Issue_Time, 
                    string Ward_Number, 
                    string Room_Number, 
                    string Specialist_Doctor_Id, 
                    int Original_Number, 
                    string Original_In_Patient_Scan_No, 
                    string Original_Admission_Number, 
                    System.DateTime Original_Issue_Date, 
                    System.TimeSpan Original_Issue_Time, 
                    string Original_Ward_Number, 
                    string Original_Room_Number, 
                    string Original_Specialist_Doctor_Id, 
                    string In_Patient_Scan_No) {
            if ((Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Admission_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Admission_Number));
            }
            if ((Scan_Report == null)) {
                throw new global::System.ArgumentNullException("Scan_Report");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((byte[])(Scan_Report));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.TimeSpan)(Issue_Time));
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Ward_Number));
            }
            if ((Room_Number == null)) {
                throw new global::System.ArgumentNullException("Room_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Room_Number));
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Specialist_Doctor_Id));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Number));
            if ((Original_In_Patient_Scan_No == null)) {
                throw new global::System.ArgumentNullException("Original_In_Patient_Scan_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_In_Patient_Scan_No));
            }
            if ((Original_Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Admission_Number));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_Issue_Date));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.TimeSpan)(Original_Issue_Time));
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Ward_Number));
            }
            if ((Original_Room_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Room_Number));
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((In_Patient_Scan_No == null)) {
                throw new global::System.ArgumentNullException("In_Patient_Scan_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(In_Patient_Scan_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class IN_PATIENT_XRAYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public IN_PATIENT_XRAYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "IN_PATIENT_XRAY";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("In_Patient_X_Ray_No", "In_Patient_X_Ray_No");
            tableMapping.ColumnMappings.Add("Admission_Number", "Admission_Number");
            tableMapping.ColumnMappings.Add("X_Ray", "X_Ray");
            tableMapping.ColumnMappings.Add("Issue_Date", "Issue_Date");
            tableMapping.ColumnMappings.Add("Issue_Time", "Issue_Time");
            tableMapping.ColumnMappings.Add("Ward_Number", "Ward_Number");
            tableMapping.ColumnMappings.Add("Room_Number", "Room_Number");
            tableMapping.ColumnMappings.Add("Specialist_Doctor_Id", "Specialist_Doctor_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[IN_PATIENT_XRAY] WHERE (([Number] = @Original_Number) AND ((@IsNull_In_Patient_X_Ray_No = 1 AND [In_Patient_X_Ray_No] IS NULL) OR ([In_Patient_X_Ray_No] = @Original_In_Patient_X_Ray_No)) AND ([Admission_Number] = @Original_Admission_Number) AND ([Issue_Date] = @Original_Issue_Date) AND ([Issue_Time] = @Original_Issue_Time) AND ([Ward_Number] = @Original_Ward_Number) AND ([Room_Number] = @Original_Room_Number) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_In_Patient_X_Ray_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_X_Ray_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Patient_X_Ray_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_X_Ray_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[IN_PATIENT_XRAY] ([Admission_Number], [X_Ray], [Issue_Date], [Issue_Time], [Ward_Number], [Room_Number], [Specialist_Doctor_Id]) VALUES (@Admission_Number, @X_Ray, @Issue_Date, @Issue_Time, @Ward_Number, @Room_Number, @Specialist_Doctor_Id);
SELECT Number, In_Patient_X_Ray_No, Admission_Number, X_Ray, Issue_Date, Issue_Time, Ward_Number, Room_Number, Specialist_Doctor_Id FROM IN_PATIENT_XRAY WHERE (In_Patient_X_Ray_No = @In_Patient_X_Ray_No)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Ray", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Ray", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Patient_X_Ray_No", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_X_Ray_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[IN_PATIENT_XRAY] SET [Admission_Number] = @Admission_Number, [X_Ray] = @X_Ray, [Issue_Date] = @Issue_Date, [Issue_Time] = @Issue_Time, [Ward_Number] = @Ward_Number, [Room_Number] = @Room_Number, [Specialist_Doctor_Id] = @Specialist_Doctor_Id WHERE (([Number] = @Original_Number) AND ((@IsNull_In_Patient_X_Ray_No = 1 AND [In_Patient_X_Ray_No] IS NULL) OR ([In_Patient_X_Ray_No] = @Original_In_Patient_X_Ray_No)) AND ([Admission_Number] = @Original_Admission_Number) AND ([Issue_Date] = @Original_Issue_Date) AND ([Issue_Time] = @Original_Issue_Time) AND ([Ward_Number] = @Original_Ward_Number) AND ([Room_Number] = @Original_Room_Number) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id));
SELECT Number, In_Patient_X_Ray_No, Admission_Number, X_Ray, Issue_Date, Issue_Time, Ward_Number, Room_Number, Specialist_Doctor_Id FROM IN_PATIENT_XRAY WHERE (In_Patient_X_Ray_No = @In_Patient_X_Ray_No)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Ray", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Ray", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_In_Patient_X_Ray_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_X_Ray_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Patient_X_Ray_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_X_Ray_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Patient_X_Ray_No", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_X_Ray_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, In_Patient_X_Ray_No, Admission_Number, X_Ray, Issue_Date, Issue_Ti" +
                "me, Ward_Number, Room_Number, Specialist_Doctor_Id FROM dbo.IN_PATIENT_XRAY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_XRAYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_XRAYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_XRAYDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_XRAYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.IN_PATIENT_XRAYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "IN_PATIENT_XRAY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_In_Patient_X_Ray_No, string Original_Admission_Number, System.DateTime Original_Issue_Date, System.TimeSpan Original_Issue_Time, string Original_Ward_Number, string Original_Room_Number, string Original_Specialist_Doctor_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_In_Patient_X_Ray_No == null)) {
                throw new global::System.ArgumentNullException("Original_In_Patient_X_Ray_No");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_In_Patient_X_Ray_No));
            }
            if ((Original_Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Admission_Number));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Issue_Date));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.TimeSpan)(Original_Issue_Time));
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Ward_Number));
            }
            if ((Original_Room_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Room_Number));
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Admission_Number, byte[] X_Ray, System.DateTime Issue_Date, System.TimeSpan Issue_Time, string Ward_Number, string Room_Number, string Specialist_Doctor_Id, string In_Patient_X_Ray_No) {
            if ((Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Admission_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Admission_Number));
            }
            if ((X_Ray == null)) {
                throw new global::System.ArgumentNullException("X_Ray");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((byte[])(X_Ray));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.TimeSpan)(Issue_Time));
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Ward_Number));
            }
            if ((Room_Number == null)) {
                throw new global::System.ArgumentNullException("Room_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Room_Number));
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Specialist_Doctor_Id));
            }
            if ((In_Patient_X_Ray_No == null)) {
                throw new global::System.ArgumentNullException("In_Patient_X_Ray_No");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(In_Patient_X_Ray_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Admission_Number, 
                    byte[] X_Ray, 
                    System.DateTime Issue_Date, 
                    System.TimeSpan Issue_Time, 
                    string Ward_Number, 
                    string Room_Number, 
                    string Specialist_Doctor_Id, 
                    int Original_Number, 
                    string Original_In_Patient_X_Ray_No, 
                    string Original_Admission_Number, 
                    System.DateTime Original_Issue_Date, 
                    System.TimeSpan Original_Issue_Time, 
                    string Original_Ward_Number, 
                    string Original_Room_Number, 
                    string Original_Specialist_Doctor_Id, 
                    string In_Patient_X_Ray_No) {
            if ((Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Admission_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Admission_Number));
            }
            if ((X_Ray == null)) {
                throw new global::System.ArgumentNullException("X_Ray");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((byte[])(X_Ray));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.TimeSpan)(Issue_Time));
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Ward_Number));
            }
            if ((Room_Number == null)) {
                throw new global::System.ArgumentNullException("Room_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Room_Number));
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Specialist_Doctor_Id));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Number));
            if ((Original_In_Patient_X_Ray_No == null)) {
                throw new global::System.ArgumentNullException("Original_In_Patient_X_Ray_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_In_Patient_X_Ray_No));
            }
            if ((Original_Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Admission_Number));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_Issue_Date));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.TimeSpan)(Original_Issue_Time));
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Ward_Number));
            }
            if ((Original_Room_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Room_Number));
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((In_Patient_X_Ray_No == null)) {
                throw new global::System.ArgumentNullException("In_Patient_X_Ray_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(In_Patient_X_Ray_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class IN_SAMPLETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public IN_SAMPLETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "IN_SAMPLE";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Sample_In_Number", "Sample_In_Number");
            tableMapping.ColumnMappings.Add("Patient_Id_Number", "Patient_Id_Number");
            tableMapping.ColumnMappings.Add("Sample_Type", "Sample_Type");
            tableMapping.ColumnMappings.Add("Ward_Number", "Ward_Number");
            tableMapping.ColumnMappings.Add("Room_Number", "Room_Number");
            tableMapping.ColumnMappings.Add("Specialist_Doctor_Id", "Specialist_Doctor_Id");
            tableMapping.ColumnMappings.Add("Laboratory_Staff_Id", "Laboratory_Staff_Id");
            tableMapping.ColumnMappings.Add("Received_Date", "Received_Date");
            tableMapping.ColumnMappings.Add("Received_Time", "Received_Time");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[IN_SAMPLE] WHERE (([Number] = @Original_Number) AND ((@IsNull_Sample_In_Number = 1 AND [Sample_In_Number] IS NULL) OR ([Sample_In_Number] = @Original_Sample_In_Number)) AND ([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Sample_Type] = @Original_Sample_Type) AND ([Ward_Number] = @Original_Ward_Number) AND ([Room_Number] = @Original_Room_Number) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id) AND ([Laboratory_Staff_Id] = @Original_Laboratory_Staff_Id) AND ([Received_Date] = @Original_Received_Date) AND ([Received_Time] = @Original_Received_Time))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sample_In_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_In_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sample_In_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_In_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sample_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Laboratory_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Laboratory_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Received_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Received_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[IN_SAMPLE] ([Patient_Id_Number], [Sample_Type], [Ward_Number], [Room_Number], [Specialist_Doctor_Id], [Laboratory_Staff_Id], [Received_Date], [Received_Time]) VALUES (@Patient_Id_Number, @Sample_Type, @Ward_Number, @Room_Number, @Specialist_Doctor_Id, @Laboratory_Staff_Id, @Received_Date, @Received_Time);
SELECT Number, Sample_In_Number, Patient_Id_Number, Sample_Type, Ward_Number, Room_Number, Specialist_Doctor_Id, Laboratory_Staff_Id, Received_Date, Received_Time FROM IN_SAMPLE WHERE (Sample_In_Number = @Sample_In_Number)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sample_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Laboratory_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Laboratory_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Received_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Received_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sample_In_Number", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_In_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[IN_SAMPLE] SET [Patient_Id_Number] = @Patient_Id_Number, [Sample_Type] = @Sample_Type, [Ward_Number] = @Ward_Number, [Room_Number] = @Room_Number, [Specialist_Doctor_Id] = @Specialist_Doctor_Id, [Laboratory_Staff_Id] = @Laboratory_Staff_Id, [Received_Date] = @Received_Date, [Received_Time] = @Received_Time WHERE (([Number] = @Original_Number) AND ((@IsNull_Sample_In_Number = 1 AND [Sample_In_Number] IS NULL) OR ([Sample_In_Number] = @Original_Sample_In_Number)) AND ([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Sample_Type] = @Original_Sample_Type) AND ([Ward_Number] = @Original_Ward_Number) AND ([Room_Number] = @Original_Room_Number) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id) AND ([Laboratory_Staff_Id] = @Original_Laboratory_Staff_Id) AND ([Received_Date] = @Original_Received_Date) AND ([Received_Time] = @Original_Received_Time));
SELECT Number, Sample_In_Number, Patient_Id_Number, Sample_Type, Ward_Number, Room_Number, Specialist_Doctor_Id, Laboratory_Staff_Id, Received_Date, Received_Time FROM IN_SAMPLE WHERE (Sample_In_Number = @Sample_In_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sample_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Laboratory_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Laboratory_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Received_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Received_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sample_In_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_In_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sample_In_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_In_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sample_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Laboratory_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Laboratory_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Received_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Received_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sample_In_Number", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_In_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Sample_In_Number, Patient_Id_Number, Sample_Type, Ward_Number, Roo" +
                "m_Number, Specialist_Doctor_Id, Laboratory_Staff_Id, Received_Date, Received_Tim" +
                "e FROM dbo.IN_SAMPLE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.IN_SAMPLEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.IN_SAMPLEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.IN_SAMPLEDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.IN_SAMPLEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.IN_SAMPLEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "IN_SAMPLE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Sample_In_Number, int Original_Patient_Id_Number, string Original_Sample_Type, string Original_Ward_Number, string Original_Room_Number, string Original_Specialist_Doctor_Id, string Original_Laboratory_Staff_Id, System.DateTime Original_Received_Date, System.TimeSpan Original_Received_Time) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Sample_In_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Sample_In_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Sample_In_Number));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Patient_Id_Number));
            if ((Original_Sample_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Sample_Type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Sample_Type));
            }
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Ward_Number));
            }
            if ((Original_Room_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Room_Number));
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((Original_Laboratory_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Laboratory_Staff_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Laboratory_Staff_Id));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_Received_Date));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.TimeSpan)(Original_Received_Time));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Patient_Id_Number, string Sample_Type, string Ward_Number, string Room_Number, string Specialist_Doctor_Id, string Laboratory_Staff_Id, System.DateTime Received_Date, System.TimeSpan Received_Time, string Sample_In_Number) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((Sample_Type == null)) {
                throw new global::System.ArgumentNullException("Sample_Type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Sample_Type));
            }
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Ward_Number));
            }
            if ((Room_Number == null)) {
                throw new global::System.ArgumentNullException("Room_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Room_Number));
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Specialist_Doctor_Id));
            }
            if ((Laboratory_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Laboratory_Staff_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Laboratory_Staff_Id));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Received_Date));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.TimeSpan)(Received_Time));
            if ((Sample_In_Number == null)) {
                throw new global::System.ArgumentNullException("Sample_In_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Sample_In_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Patient_Id_Number, 
                    string Sample_Type, 
                    string Ward_Number, 
                    string Room_Number, 
                    string Specialist_Doctor_Id, 
                    string Laboratory_Staff_Id, 
                    System.DateTime Received_Date, 
                    System.TimeSpan Received_Time, 
                    int Original_Number, 
                    string Original_Sample_In_Number, 
                    int Original_Patient_Id_Number, 
                    string Original_Sample_Type, 
                    string Original_Ward_Number, 
                    string Original_Room_Number, 
                    string Original_Specialist_Doctor_Id, 
                    string Original_Laboratory_Staff_Id, 
                    System.DateTime Original_Received_Date, 
                    System.TimeSpan Original_Received_Time, 
                    string Sample_In_Number) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((Sample_Type == null)) {
                throw new global::System.ArgumentNullException("Sample_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Sample_Type));
            }
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Ward_Number));
            }
            if ((Room_Number == null)) {
                throw new global::System.ArgumentNullException("Room_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Room_Number));
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Specialist_Doctor_Id));
            }
            if ((Laboratory_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Laboratory_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Laboratory_Staff_Id));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Received_Date));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.TimeSpan)(Received_Time));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Number));
            if ((Original_Sample_In_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Sample_In_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Sample_In_Number));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Patient_Id_Number));
            if ((Original_Sample_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Sample_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Sample_Type));
            }
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Ward_Number));
            }
            if ((Original_Room_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Room_Number));
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((Original_Laboratory_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Laboratory_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Laboratory_Staff_Id));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_Received_Date));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.TimeSpan)(Original_Received_Time));
            if ((Sample_In_Number == null)) {
                throw new global::System.ArgumentNullException("Sample_In_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Sample_In_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LABORATORY_STAFFTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public LABORATORY_STAFFTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LABORATORY_STAFF";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Laboratory_Staff_Id", "Laboratory_Staff_Id");
            tableMapping.ColumnMappings.Add("L_Officer_First_Name", "L_Officer_First_Name");
            tableMapping.ColumnMappings.Add("L_Officer_Middle_Name", "L_Officer_Middle_Name");
            tableMapping.ColumnMappings.Add("L_Officer_Last_Name", "L_Officer_Last_Name");
            tableMapping.ColumnMappings.Add("L_Officer_Address", "L_Officer_Address");
            tableMapping.ColumnMappings.Add("L_Officer_Tele_Number", "L_Officer_Tele_Number");
            tableMapping.ColumnMappings.Add("L_Officer_DOB", "L_Officer_DOB");
            tableMapping.ColumnMappings.Add("L_Officer_Salary", "L_Officer_Salary");
            tableMapping.ColumnMappings.Add("Designation", "Designation");
            tableMapping.ColumnMappings.Add("L_Job_Start_Date", "L_Job_Start_Date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[LABORATORY_STAFF] WHERE (([Number] = @Original_Number) AND ((@IsNull_Laboratory_Staff_Id = 1 AND [Laboratory_Staff_Id] IS NULL) OR ([Laboratory_Staff_Id] = @Original_Laboratory_Staff_Id)) AND ([L_Officer_First_Name] = @Original_L_Officer_First_Name) AND ((@IsNull_L_Officer_Middle_Name = 1 AND [L_Officer_Middle_Name] IS NULL) OR ([L_Officer_Middle_Name] = @Original_L_Officer_Middle_Name)) AND ([L_Officer_Last_Name] = @Original_L_Officer_Last_Name) AND ([L_Officer_Address] = @Original_L_Officer_Address) AND ([L_Officer_Tele_Number] = @Original_L_Officer_Tele_Number) AND ([L_Officer_DOB] = @Original_L_Officer_DOB) AND ([L_Officer_Salary] = @Original_L_Officer_Salary) AND ([Designation] = @Original_Designation) AND ([L_Job_Start_Date] = @Original_L_Job_Start_Date))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Laboratory_Staff_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Laboratory_Staff_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Laboratory_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Laboratory_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_L_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "L_Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Job_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LABORATORY_STAFF] ([L_Officer_First_Name], [L_Officer_Middle_Name], [L_Officer_Last_Name], [L_Officer_Address], [L_Officer_Tele_Number], [L_Officer_DOB], [L_Officer_Salary], [Designation], [L_Job_Start_Date]) VALUES (@L_Officer_First_Name, @L_Officer_Middle_Name, @L_Officer_Last_Name, @L_Officer_Address, @L_Officer_Tele_Number, @L_Officer_DOB, @L_Officer_Salary, @Designation, @L_Job_Start_Date);
SELECT Number, Laboratory_Staff_Id, L_Officer_First_Name, L_Officer_Middle_Name, L_Officer_Last_Name, L_Officer_Address, L_Officer_Tele_Number, L_Officer_DOB, L_Officer_Salary, Designation, L_Job_Start_Date FROM LABORATORY_STAFF WHERE (Laboratory_Staff_Id = @Laboratory_Staff_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "L_Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Job_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Laboratory_Staff_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Laboratory_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LABORATORY_STAFF] SET [L_Officer_First_Name] = @L_Officer_First_Name, [L_Officer_Middle_Name] = @L_Officer_Middle_Name, [L_Officer_Last_Name] = @L_Officer_Last_Name, [L_Officer_Address] = @L_Officer_Address, [L_Officer_Tele_Number] = @L_Officer_Tele_Number, [L_Officer_DOB] = @L_Officer_DOB, [L_Officer_Salary] = @L_Officer_Salary, [Designation] = @Designation, [L_Job_Start_Date] = @L_Job_Start_Date WHERE (([Number] = @Original_Number) AND ((@IsNull_Laboratory_Staff_Id = 1 AND [Laboratory_Staff_Id] IS NULL) OR ([Laboratory_Staff_Id] = @Original_Laboratory_Staff_Id)) AND ([L_Officer_First_Name] = @Original_L_Officer_First_Name) AND ((@IsNull_L_Officer_Middle_Name = 1 AND [L_Officer_Middle_Name] IS NULL) OR ([L_Officer_Middle_Name] = @Original_L_Officer_Middle_Name)) AND ([L_Officer_Last_Name] = @Original_L_Officer_Last_Name) AND ([L_Officer_Address] = @Original_L_Officer_Address) AND ([L_Officer_Tele_Number] = @Original_L_Officer_Tele_Number) AND ([L_Officer_DOB] = @Original_L_Officer_DOB) AND ([L_Officer_Salary] = @Original_L_Officer_Salary) AND ([Designation] = @Original_Designation) AND ([L_Job_Start_Date] = @Original_L_Job_Start_Date));
SELECT Number, Laboratory_Staff_Id, L_Officer_First_Name, L_Officer_Middle_Name, L_Officer_Last_Name, L_Officer_Address, L_Officer_Tele_Number, L_Officer_DOB, L_Officer_Salary, Designation, L_Job_Start_Date FROM LABORATORY_STAFF WHERE (Laboratory_Staff_Id = @Laboratory_Staff_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "L_Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Job_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Laboratory_Staff_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Laboratory_Staff_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Laboratory_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Laboratory_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_L_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "L_Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_L_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "L_Job_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Laboratory_Staff_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Laboratory_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Laboratory_Staff_Id, L_Officer_First_Name, L_Officer_Middle_Name, " +
                "L_Officer_Last_Name, L_Officer_Address, L_Officer_Tele_Number, L_Officer_DOB, L_" +
                "Officer_Salary, Designation, L_Job_Start_Date FROM dbo.LABORATORY_STAFF";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.LABORATORY_STAFFDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.LABORATORY_STAFFDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.LABORATORY_STAFFDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.LABORATORY_STAFFDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.LABORATORY_STAFFDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "LABORATORY_STAFF");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Laboratory_Staff_Id, string Original_L_Officer_First_Name, string Original_L_Officer_Middle_Name, string Original_L_Officer_Last_Name, string Original_L_Officer_Address, int Original_L_Officer_Tele_Number, System.DateTime Original_L_Officer_DOB, decimal Original_L_Officer_Salary, string Original_Designation, System.DateTime Original_L_Job_Start_Date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Laboratory_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Laboratory_Staff_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Laboratory_Staff_Id));
            }
            if ((Original_L_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_L_Officer_First_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_L_Officer_First_Name));
            }
            if ((Original_L_Officer_Middle_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_L_Officer_Middle_Name));
            }
            if ((Original_L_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_L_Officer_Last_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_L_Officer_Last_Name));
            }
            if ((Original_L_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_L_Officer_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_L_Officer_Address));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_L_Officer_Tele_Number));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_L_Officer_DOB));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_L_Officer_Salary));
            if ((Original_Designation == null)) {
                throw new global::System.ArgumentNullException("Original_Designation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Designation));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_L_Job_Start_Date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string L_Officer_First_Name, string L_Officer_Middle_Name, string L_Officer_Last_Name, string L_Officer_Address, int L_Officer_Tele_Number, System.DateTime L_Officer_DOB, decimal L_Officer_Salary, string Designation, System.DateTime L_Job_Start_Date, string Laboratory_Staff_Id) {
            if ((L_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("L_Officer_First_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(L_Officer_First_Name));
            }
            if ((L_Officer_Middle_Name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(L_Officer_Middle_Name));
            }
            if ((L_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("L_Officer_Last_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(L_Officer_Last_Name));
            }
            if ((L_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("L_Officer_Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(L_Officer_Address));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(L_Officer_Tele_Number));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(L_Officer_DOB));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(L_Officer_Salary));
            if ((Designation == null)) {
                throw new global::System.ArgumentNullException("Designation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Designation));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(L_Job_Start_Date));
            if ((Laboratory_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Laboratory_Staff_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Laboratory_Staff_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string L_Officer_First_Name, 
                    string L_Officer_Middle_Name, 
                    string L_Officer_Last_Name, 
                    string L_Officer_Address, 
                    int L_Officer_Tele_Number, 
                    System.DateTime L_Officer_DOB, 
                    decimal L_Officer_Salary, 
                    string Designation, 
                    System.DateTime L_Job_Start_Date, 
                    int Original_Number, 
                    string Original_Laboratory_Staff_Id, 
                    string Original_L_Officer_First_Name, 
                    string Original_L_Officer_Middle_Name, 
                    string Original_L_Officer_Last_Name, 
                    string Original_L_Officer_Address, 
                    int Original_L_Officer_Tele_Number, 
                    System.DateTime Original_L_Officer_DOB, 
                    decimal Original_L_Officer_Salary, 
                    string Original_Designation, 
                    System.DateTime Original_L_Job_Start_Date, 
                    string Laboratory_Staff_Id) {
            if ((L_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("L_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(L_Officer_First_Name));
            }
            if ((L_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(L_Officer_Middle_Name));
            }
            if ((L_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("L_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(L_Officer_Last_Name));
            }
            if ((L_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("L_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(L_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(L_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(L_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(L_Officer_Salary));
            if ((Designation == null)) {
                throw new global::System.ArgumentNullException("Designation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Designation));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(L_Job_Start_Date));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Number));
            if ((Original_Laboratory_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Laboratory_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Laboratory_Staff_Id));
            }
            if ((Original_L_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_L_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_L_Officer_First_Name));
            }
            if ((Original_L_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_L_Officer_Middle_Name));
            }
            if ((Original_L_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_L_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_L_Officer_Last_Name));
            }
            if ((Original_L_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_L_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_L_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_L_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_L_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_L_Officer_Salary));
            if ((Original_Designation == null)) {
                throw new global::System.ArgumentNullException("Original_Designation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Designation));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_L_Job_Start_Date));
            if ((Laboratory_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Laboratory_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Laboratory_Staff_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LOG_IN_DETAILTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public LOG_IN_DETAILTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LOG_IN_DETAIL";
            tableMapping.ColumnMappings.Add("Roll_Id", "Roll_Id");
            tableMapping.ColumnMappings.Add("Log_In_Date", "Log_In_Date");
            tableMapping.ColumnMappings.Add("Log_In_Time", "Log_In_Time");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[LOG_IN_DETAIL] WHERE (([Roll_Id] = @Original_Roll_Id) AND ([Lo" +
                "g_In_Date] = @Original_Log_In_Date) AND ([Log_In_Time] = @Original_Log_In_Time))" +
                "";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Log_In_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Log_In_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Log_In_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Log_In_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[LOG_IN_DETAIL] ([Roll_Id], [Log_In_Date], [Log_In_Time]) VALUE" +
                "S (@Roll_Id, @Log_In_Date, @Log_In_Time);\r\nSELECT Roll_Id, Log_In_Date, Log_In_T" +
                "ime FROM LOG_IN_DETAIL WHERE (Roll_Id = @Roll_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Log_In_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Log_In_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Log_In_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Log_In_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LOG_IN_DETAIL] SET [Roll_Id] = @Roll_Id, [Log_In_Date] = @Log_In_Date, [Log_In_Time] = @Log_In_Time WHERE (([Roll_Id] = @Original_Roll_Id) AND ([Log_In_Date] = @Original_Log_In_Date) AND ([Log_In_Time] = @Original_Log_In_Time));
SELECT Roll_Id, Log_In_Date, Log_In_Time FROM LOG_IN_DETAIL WHERE (Roll_Id = @Roll_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Log_In_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Log_In_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Log_In_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Log_In_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Log_In_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Log_In_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Log_In_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Log_In_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Roll_Id, Log_In_Date, Log_In_Time FROM dbo.LOG_IN_DETAIL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.LOG_IN_DETAILDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.LOG_IN_DETAILDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.LOG_IN_DETAILDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.LOG_IN_DETAILDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.LOG_IN_DETAILDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "LOG_IN_DETAIL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Roll_Id, System.DateTime Original_Log_In_Date, System.TimeSpan Original_Log_In_Time) {
            if ((Original_Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Roll_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Roll_Id));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_Log_In_Date));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.TimeSpan)(Original_Log_In_Time));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Roll_Id, System.DateTime Log_In_Date, System.TimeSpan Log_In_Time) {
            if ((Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Roll_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Roll_Id));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Log_In_Date));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.TimeSpan)(Log_In_Time));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Roll_Id, System.DateTime Log_In_Date, System.TimeSpan Log_In_Time, string Original_Roll_Id, System.DateTime Original_Log_In_Date, System.TimeSpan Original_Log_In_Time) {
            if ((Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Roll_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Roll_Id));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Log_In_Date));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.TimeSpan)(Log_In_Time));
            if ((Original_Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Roll_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Roll_Id));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Original_Log_In_Date));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.TimeSpan)(Original_Log_In_Time));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Log_In_Date, System.TimeSpan Log_In_Time, string Original_Roll_Id, System.DateTime Original_Log_In_Date, System.TimeSpan Original_Log_In_Time) {
            return this.Update(Original_Roll_Id, Log_In_Date, Log_In_Time, Original_Roll_Id, Original_Log_In_Date, Original_Log_In_Time);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LOG_IN_USERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public LOG_IN_USERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LOG_IN_USER";
            tableMapping.ColumnMappings.Add("Roll_Id", "Roll_Id");
            tableMapping.ColumnMappings.Add("Roll_name", "Roll_name");
            tableMapping.ColumnMappings.Add("First_Name", "First_Name");
            tableMapping.ColumnMappings.Add("Middle_Name", "Middle_Name");
            tableMapping.ColumnMappings.Add("Surname", "Surname");
            tableMapping.ColumnMappings.Add("User_Address", "User_Address");
            tableMapping.ColumnMappings.Add("Img", "Img");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("User_Tele_No", "User_Tele_No");
            tableMapping.ColumnMappings.Add("Date_Of_Birth", "Date_Of_Birth");
            tableMapping.ColumnMappings.Add("Designation", "Designation");
            tableMapping.ColumnMappings.Add("Salary", "Salary");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[LOG_IN_USER] WHERE (([Roll_Id] = @Original_Roll_Id) AND ((@IsNull_Roll_name = 1 AND [Roll_name] IS NULL) OR ([Roll_name] = @Original_Roll_name)) AND ([First_Name] = @Original_First_Name) AND ((@IsNull_Middle_Name = 1 AND [Middle_Name] IS NULL) OR ([Middle_Name] = @Original_Middle_Name)) AND ([Surname] = @Original_Surname) AND ((@IsNull_User_Address = 1 AND [User_Address] IS NULL) OR ([User_Address] = @Original_User_Address)) AND ((@IsNull_Gender = 1 AND [Gender] IS NULL) OR ([Gender] = @Original_Gender)) AND ((@IsNull_User_Tele_No = 1 AND [User_Tele_No] IS NULL) OR ([User_Tele_No] = @Original_User_Tele_No)) AND ((@IsNull_Date_Of_Birth = 1 AND [Date_Of_Birth] IS NULL) OR ([Date_Of_Birth] = @Original_Date_Of_Birth)) AND ((@IsNull_Designation = 1 AND [Designation] IS NULL) OR ([Designation] = @Original_Designation)) AND ((@IsNull_Salary = 1 AND [Salary] IS NULL) OR ([Salary] = @Original_Salary)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Roll_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_User_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_User_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_User_Tele_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Tele_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_User_Tele_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Tele_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date_Of_Birth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Of_Birth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date_Of_Birth", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Of_Birth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Designation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Salary", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Salary", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LOG_IN_USER] ([Roll_Id], [Roll_name], [First_Name], [Middle_Name], [Surname], [User_Address], [Img], [Gender], [User_Tele_No], [Date_Of_Birth], [Designation], [Salary]) VALUES (@Roll_Id, @Roll_name, @First_Name, @Middle_Name, @Surname, @User_Address, @Img, @Gender, @User_Tele_No, @Date_Of_Birth, @Designation, @Salary);
SELECT Roll_Id, Roll_name, First_Name, Middle_Name, Surname, User_Address, Img, Gender, User_Tele_No, Date_Of_Birth, Designation, Salary FROM LOG_IN_USER WHERE (Roll_Id = @Roll_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@User_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@User_Tele_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Tele_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date_Of_Birth", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Of_Birth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LOG_IN_USER] SET [Roll_Id] = @Roll_Id, [Roll_name] = @Roll_name, [First_Name] = @First_Name, [Middle_Name] = @Middle_Name, [Surname] = @Surname, [User_Address] = @User_Address, [Img] = @Img, [Gender] = @Gender, [User_Tele_No] = @User_Tele_No, [Date_Of_Birth] = @Date_Of_Birth, [Designation] = @Designation, [Salary] = @Salary WHERE (([Roll_Id] = @Original_Roll_Id) AND ((@IsNull_Roll_name = 1 AND [Roll_name] IS NULL) OR ([Roll_name] = @Original_Roll_name)) AND ([First_Name] = @Original_First_Name) AND ((@IsNull_Middle_Name = 1 AND [Middle_Name] IS NULL) OR ([Middle_Name] = @Original_Middle_Name)) AND ([Surname] = @Original_Surname) AND ((@IsNull_User_Address = 1 AND [User_Address] IS NULL) OR ([User_Address] = @Original_User_Address)) AND ((@IsNull_Gender = 1 AND [Gender] IS NULL) OR ([Gender] = @Original_Gender)) AND ((@IsNull_User_Tele_No = 1 AND [User_Tele_No] IS NULL) OR ([User_Tele_No] = @Original_User_Tele_No)) AND ((@IsNull_Date_Of_Birth = 1 AND [Date_Of_Birth] IS NULL) OR ([Date_Of_Birth] = @Original_Date_Of_Birth)) AND ((@IsNull_Designation = 1 AND [Designation] IS NULL) OR ([Designation] = @Original_Designation)) AND ((@IsNull_Salary = 1 AND [Salary] IS NULL) OR ([Salary] = @Original_Salary)));
SELECT Roll_Id, Roll_name, First_Name, Middle_Name, Surname, User_Address, Img, Gender, User_Tele_No, Date_Of_Birth, Designation, Salary FROM LOG_IN_USER WHERE (Roll_Id = @Roll_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@User_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@User_Tele_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Tele_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date_Of_Birth", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Of_Birth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Roll_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_User_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_User_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_User_Tele_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Tele_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_User_Tele_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Tele_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date_Of_Birth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Of_Birth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date_Of_Birth", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Of_Birth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Designation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Salary", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Salary", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Roll_Id, Roll_name, First_Name, Middle_Name, Surname, User_Address, Img, G" +
                "ender, User_Tele_No, Date_Of_Birth, Designation, Salary FROM dbo.LOG_IN_USER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.LOG_IN_USERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.LOG_IN_USERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.LOG_IN_USERDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.LOG_IN_USERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.LOG_IN_USERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "LOG_IN_USER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Roll_Id, string Original_Roll_name, string Original_First_Name, string Original_Middle_Name, string Original_Surname, string Original_User_Address, string Original_Gender, global::System.Nullable<int> Original_User_Tele_No, global::System.Nullable<global::System.DateTime> Original_Date_Of_Birth, string Original_Designation, global::System.Nullable<decimal> Original_Salary) {
            if ((Original_Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Roll_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Roll_Id));
            }
            if ((Original_Roll_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Roll_name));
            }
            if ((Original_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_First_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_First_Name));
            }
            if ((Original_Middle_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Middle_Name));
            }
            if ((Original_Surname == null)) {
                throw new global::System.ArgumentNullException("Original_Surname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Surname));
            }
            if ((Original_User_Address == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_User_Address));
            }
            if ((Original_Gender == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Gender));
            }
            if ((Original_User_Tele_No.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_User_Tele_No.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Date_Of_Birth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_Date_Of_Birth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Designation == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Designation));
            }
            if ((Original_Salary.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_Salary.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Roll_Id, string Roll_name, string First_Name, string Middle_Name, string Surname, string User_Address, byte[] Img, string Gender, global::System.Nullable<int> User_Tele_No, global::System.Nullable<global::System.DateTime> Date_Of_Birth, string Designation, global::System.Nullable<decimal> Salary) {
            if ((Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Roll_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Roll_Id));
            }
            if ((Roll_name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Roll_name));
            }
            if ((First_Name == null)) {
                throw new global::System.ArgumentNullException("First_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(First_Name));
            }
            if ((Middle_Name == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Middle_Name));
            }
            if ((Surname == null)) {
                throw new global::System.ArgumentNullException("Surname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Surname));
            }
            if ((User_Address == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(User_Address));
            }
            if ((Img == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((byte[])(Img));
            }
            if ((Gender == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Gender));
            }
            if ((User_Tele_No.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(User_Tele_No.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Date_Of_Birth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(Date_Of_Birth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Designation == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Designation));
            }
            if ((Salary.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(Salary.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Roll_Id, 
                    string Roll_name, 
                    string First_Name, 
                    string Middle_Name, 
                    string Surname, 
                    string User_Address, 
                    byte[] Img, 
                    string Gender, 
                    global::System.Nullable<int> User_Tele_No, 
                    global::System.Nullable<global::System.DateTime> Date_Of_Birth, 
                    string Designation, 
                    global::System.Nullable<decimal> Salary, 
                    string Original_Roll_Id, 
                    string Original_Roll_name, 
                    string Original_First_Name, 
                    string Original_Middle_Name, 
                    string Original_Surname, 
                    string Original_User_Address, 
                    string Original_Gender, 
                    global::System.Nullable<int> Original_User_Tele_No, 
                    global::System.Nullable<global::System.DateTime> Original_Date_Of_Birth, 
                    string Original_Designation, 
                    global::System.Nullable<decimal> Original_Salary) {
            if ((Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Roll_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Roll_Id));
            }
            if ((Roll_name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Roll_name));
            }
            if ((First_Name == null)) {
                throw new global::System.ArgumentNullException("First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(First_Name));
            }
            if ((Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Middle_Name));
            }
            if ((Surname == null)) {
                throw new global::System.ArgumentNullException("Surname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Surname));
            }
            if ((User_Address == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(User_Address));
            }
            if ((Img == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((byte[])(Img));
            }
            if ((Gender == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Gender));
            }
            if ((User_Tele_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(User_Tele_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Date_Of_Birth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Date_Of_Birth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Designation == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Designation));
            }
            if ((Salary.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Salary.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Roll_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Roll_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Roll_Id));
            }
            if ((Original_Roll_name == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Roll_name));
            }
            if ((Original_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_First_Name));
            }
            if ((Original_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Middle_Name));
            }
            if ((Original_Surname == null)) {
                throw new global::System.ArgumentNullException("Original_Surname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Surname));
            }
            if ((Original_User_Address == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_User_Address));
            }
            if ((Original_Gender == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Gender));
            }
            if ((Original_User_Tele_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_User_Tele_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Date_Of_Birth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_Date_Of_Birth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Designation == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Designation));
            }
            if ((Original_Salary.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_Salary.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Roll_name, 
                    string First_Name, 
                    string Middle_Name, 
                    string Surname, 
                    string User_Address, 
                    byte[] Img, 
                    string Gender, 
                    global::System.Nullable<int> User_Tele_No, 
                    global::System.Nullable<global::System.DateTime> Date_Of_Birth, 
                    string Designation, 
                    global::System.Nullable<decimal> Salary, 
                    string Original_Roll_Id, 
                    string Original_Roll_name, 
                    string Original_First_Name, 
                    string Original_Middle_Name, 
                    string Original_Surname, 
                    string Original_User_Address, 
                    string Original_Gender, 
                    global::System.Nullable<int> Original_User_Tele_No, 
                    global::System.Nullable<global::System.DateTime> Original_Date_Of_Birth, 
                    string Original_Designation, 
                    global::System.Nullable<decimal> Original_Salary) {
            return this.Update(Original_Roll_Id, Roll_name, First_Name, Middle_Name, Surname, User_Address, Img, Gender, User_Tele_No, Date_Of_Birth, Designation, Salary, Original_Roll_Id, Original_Roll_name, Original_First_Name, Original_Middle_Name, Original_Surname, Original_User_Address, Original_Gender, Original_User_Tele_No, Original_Date_Of_Birth, Original_Designation, Original_Salary);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ORGANIZATIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ORGANIZATIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ORGANIZATION";
            tableMapping.ColumnMappings.Add("Goverment_Reg_Number", "Goverment_Reg_Number");
            tableMapping.ColumnMappings.Add("Organization_Name", "Organization_Name");
            tableMapping.ColumnMappings.Add("Organization_Address", "Organization_Address");
            tableMapping.ColumnMappings.Add("Bill_Number", "Bill_Number");
            tableMapping.ColumnMappings.Add("Billing_Officer_Id", "Billing_Officer_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ORGANIZATION] WHERE (([Goverment_Reg_Number] = @Original_Goverment_Reg_Number) AND ([Organization_Name] = @Original_Organization_Name) AND ([Organization_Address] = @Original_Organization_Address) AND ([Bill_Number] = @Original_Bill_Number) AND ([Billing_Officer_Id] = @Original_Billing_Officer_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Goverment_Reg_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Goverment_Reg_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Organization_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Organization_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Organization_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Organization_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bill_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ORGANIZATION] ([Goverment_Reg_Number], [Organization_Name], [Organization_Address], [Bill_Number], [Billing_Officer_Id]) VALUES (@Goverment_Reg_Number, @Organization_Name, @Organization_Address, @Bill_Number, @Billing_Officer_Id);
SELECT Goverment_Reg_Number, Organization_Name, Organization_Address, Bill_Number, Billing_Officer_Id FROM ORGANIZATION WHERE (Goverment_Reg_Number = @Goverment_Reg_Number)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Goverment_Reg_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Goverment_Reg_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Organization_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Organization_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Organization_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Organization_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bill_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ORGANIZATION] SET [Goverment_Reg_Number] = @Goverment_Reg_Number, [Organization_Name] = @Organization_Name, [Organization_Address] = @Organization_Address, [Bill_Number] = @Bill_Number, [Billing_Officer_Id] = @Billing_Officer_Id WHERE (([Goverment_Reg_Number] = @Original_Goverment_Reg_Number) AND ([Organization_Name] = @Original_Organization_Name) AND ([Organization_Address] = @Original_Organization_Address) AND ([Bill_Number] = @Original_Bill_Number) AND ([Billing_Officer_Id] = @Original_Billing_Officer_Id));
SELECT Goverment_Reg_Number, Organization_Name, Organization_Address, Bill_Number, Billing_Officer_Id FROM ORGANIZATION WHERE (Goverment_Reg_Number = @Goverment_Reg_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Goverment_Reg_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Goverment_Reg_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Organization_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Organization_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Organization_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Organization_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bill_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Goverment_Reg_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Goverment_Reg_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Organization_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Organization_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Organization_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Organization_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bill_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bill_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Billing_Officer_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Billing_Officer_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Goverment_Reg_Number, Organization_Name, Organization_Address, Bill_Number" +
                ", Billing_Officer_Id FROM dbo.ORGANIZATION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.ORGANIZATIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.ORGANIZATIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.ORGANIZATIONDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.ORGANIZATIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.ORGANIZATIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ORGANIZATION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Goverment_Reg_Number, string Original_Organization_Name, string Original_Organization_Address, string Original_Bill_Number, string Original_Billing_Officer_Id) {
            if ((Original_Goverment_Reg_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Goverment_Reg_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Goverment_Reg_Number));
            }
            if ((Original_Organization_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Organization_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Organization_Name));
            }
            if ((Original_Organization_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Organization_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Organization_Address));
            }
            if ((Original_Bill_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Bill_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Bill_Number));
            }
            if ((Original_Billing_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Billing_Officer_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Billing_Officer_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Goverment_Reg_Number, string Organization_Name, string Organization_Address, string Bill_Number, string Billing_Officer_Id) {
            if ((Goverment_Reg_Number == null)) {
                throw new global::System.ArgumentNullException("Goverment_Reg_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Goverment_Reg_Number));
            }
            if ((Organization_Name == null)) {
                throw new global::System.ArgumentNullException("Organization_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Organization_Name));
            }
            if ((Organization_Address == null)) {
                throw new global::System.ArgumentNullException("Organization_Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Organization_Address));
            }
            if ((Bill_Number == null)) {
                throw new global::System.ArgumentNullException("Bill_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Bill_Number));
            }
            if ((Billing_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Billing_Officer_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Billing_Officer_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Goverment_Reg_Number, string Organization_Name, string Organization_Address, string Bill_Number, string Billing_Officer_Id, string Original_Goverment_Reg_Number, string Original_Organization_Name, string Original_Organization_Address, string Original_Bill_Number, string Original_Billing_Officer_Id) {
            if ((Goverment_Reg_Number == null)) {
                throw new global::System.ArgumentNullException("Goverment_Reg_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Goverment_Reg_Number));
            }
            if ((Organization_Name == null)) {
                throw new global::System.ArgumentNullException("Organization_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Organization_Name));
            }
            if ((Organization_Address == null)) {
                throw new global::System.ArgumentNullException("Organization_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Organization_Address));
            }
            if ((Bill_Number == null)) {
                throw new global::System.ArgumentNullException("Bill_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Bill_Number));
            }
            if ((Billing_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Billing_Officer_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Billing_Officer_Id));
            }
            if ((Original_Goverment_Reg_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Goverment_Reg_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Goverment_Reg_Number));
            }
            if ((Original_Organization_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Organization_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Organization_Name));
            }
            if ((Original_Organization_Address == null)) {
                throw new global::System.ArgumentNullException("Original_Organization_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Organization_Address));
            }
            if ((Original_Bill_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Bill_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Bill_Number));
            }
            if ((Original_Billing_Officer_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Billing_Officer_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Billing_Officer_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Organization_Name, string Organization_Address, string Bill_Number, string Billing_Officer_Id, string Original_Goverment_Reg_Number, string Original_Organization_Name, string Original_Organization_Address, string Original_Bill_Number, string Original_Billing_Officer_Id) {
            return this.Update(Original_Goverment_Reg_Number, Organization_Name, Organization_Address, Bill_Number, Billing_Officer_Id, Original_Goverment_Reg_Number, Original_Organization_Name, Original_Organization_Address, Original_Bill_Number, Original_Billing_Officer_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OUT_PATIENTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public OUT_PATIENTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OUT_PATIENT";
            tableMapping.ColumnMappings.Add("Out_Patient_Id_Number", "Out_Patient_Id_Number");
            tableMapping.ColumnMappings.Add("Patient_Name", "Patient_Name");
            tableMapping.ColumnMappings.Add("Guardian_NIC", "Guardian_NIC");
            tableMapping.ColumnMappings.Add("Guardian_Tele_No", "Guardian_Tele_No");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("Reason", "Reason");
            tableMapping.ColumnMappings.Add("C_Date", "C_Date");
            tableMapping.ColumnMappings.Add("C_Time", "C_Time");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[OUT_PATIENT] WHERE (([Out_Patient_Id_Number] = @Original_Out_Patient_Id_Number) AND ([Patient_Name] = @Original_Patient_Name) AND ([Guardian_NIC] = @Original_Guardian_NIC) AND ([Guardian_Tele_No] = @Original_Guardian_Tele_No) AND ([Age] = @Original_Age) AND ([Reason] = @Original_Reason) AND ([C_Date] = @Original_C_Date) AND ([C_Time] = @Original_C_Time))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_NIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_NIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Tele_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Tele_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[OUT_PATIENT] ([Patient_Name], [Guardian_NIC], [Guardian_Tele_No], [Age], [Reason], [C_Date], [C_Time]) VALUES (@Patient_Name, @Guardian_NIC, @Guardian_Tele_No, @Age, @Reason, @C_Date, @C_Time);
SELECT Out_Patient_Id_Number, Patient_Name, Guardian_NIC, Guardian_Tele_No, Age, Reason, C_Date, C_Time FROM OUT_PATIENT WHERE (Out_Patient_Id_Number = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_NIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_NIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Tele_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Tele_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[OUT_PATIENT] SET [Patient_Name] = @Patient_Name, [Guardian_NIC] = @Guardian_NIC, [Guardian_Tele_No] = @Guardian_Tele_No, [Age] = @Age, [Reason] = @Reason, [C_Date] = @C_Date, [C_Time] = @C_Time WHERE (([Out_Patient_Id_Number] = @Original_Out_Patient_Id_Number) AND ([Patient_Name] = @Original_Patient_Name) AND ([Guardian_NIC] = @Original_Guardian_NIC) AND ([Guardian_Tele_No] = @Original_Guardian_Tele_No) AND ([Age] = @Original_Age) AND ([Reason] = @Original_Reason) AND ([C_Date] = @Original_C_Date) AND ([C_Time] = @Original_C_Time));
SELECT Out_Patient_Id_Number, Patient_Name, Guardian_NIC, Guardian_Tele_No, Age, Reason, C_Date, C_Time FROM OUT_PATIENT WHERE (Out_Patient_Id_Number = @Out_Patient_Id_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_NIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_NIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Tele_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Tele_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_NIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_NIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Tele_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Tele_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Id_Number", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Out_Patient_Id_Number, Patient_Name, Guardian_NIC, Guardian_Tele_No, Age, " +
                "Reason, C_Date, C_Time FROM dbo.OUT_PATIENT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.OUT_PATIENTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.OUT_PATIENTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.OUT_PATIENTDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.OUT_PATIENTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.OUT_PATIENTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "OUT_PATIENT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Out_Patient_Id_Number, string Original_Patient_Name, string Original_Guardian_NIC, int Original_Guardian_Tele_No, int Original_Age, string Original_Reason, System.DateTime Original_C_Date, System.TimeSpan Original_C_Time) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Out_Patient_Id_Number));
            if ((Original_Patient_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Patient_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Patient_Name));
            }
            if ((Original_Guardian_NIC == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_NIC");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Guardian_NIC));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Guardian_Tele_No));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Age));
            if ((Original_Reason == null)) {
                throw new global::System.ArgumentNullException("Original_Reason");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Reason));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_C_Date));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.TimeSpan)(Original_C_Time));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Patient_Name, string Guardian_NIC, int Guardian_Tele_No, int Age, string Reason, System.DateTime C_Date, System.TimeSpan C_Time) {
            if ((Patient_Name == null)) {
                throw new global::System.ArgumentNullException("Patient_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Patient_Name));
            }
            if ((Guardian_NIC == null)) {
                throw new global::System.ArgumentNullException("Guardian_NIC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Guardian_NIC));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Guardian_Tele_No));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Age));
            if ((Reason == null)) {
                throw new global::System.ArgumentNullException("Reason");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Reason));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(C_Date));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.TimeSpan)(C_Time));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Patient_Name, 
                    string Guardian_NIC, 
                    int Guardian_Tele_No, 
                    int Age, 
                    string Reason, 
                    System.DateTime C_Date, 
                    System.TimeSpan C_Time, 
                    int Original_Out_Patient_Id_Number, 
                    string Original_Patient_Name, 
                    string Original_Guardian_NIC, 
                    int Original_Guardian_Tele_No, 
                    int Original_Age, 
                    string Original_Reason, 
                    System.DateTime Original_C_Date, 
                    System.TimeSpan Original_C_Time, 
                    int Out_Patient_Id_Number) {
            if ((Patient_Name == null)) {
                throw new global::System.ArgumentNullException("Patient_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Patient_Name));
            }
            if ((Guardian_NIC == null)) {
                throw new global::System.ArgumentNullException("Guardian_NIC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Guardian_NIC));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Guardian_Tele_No));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Age));
            if ((Reason == null)) {
                throw new global::System.ArgumentNullException("Reason");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Reason));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(C_Date));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.TimeSpan)(C_Time));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Out_Patient_Id_Number));
            if ((Original_Patient_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Patient_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Patient_Name));
            }
            if ((Original_Guardian_NIC == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_NIC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Guardian_NIC));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Guardian_Tele_No));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Age));
            if ((Original_Reason == null)) {
                throw new global::System.ArgumentNullException("Original_Reason");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Reason));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_C_Date));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.TimeSpan)(Original_C_Time));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Out_Patient_Id_Number));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Patient_Name, string Guardian_NIC, int Guardian_Tele_No, int Age, string Reason, System.DateTime C_Date, System.TimeSpan C_Time, int Original_Out_Patient_Id_Number, string Original_Patient_Name, string Original_Guardian_NIC, int Original_Guardian_Tele_No, int Original_Age, string Original_Reason, System.DateTime Original_C_Date, System.TimeSpan Original_C_Time) {
            return this.Update(Patient_Name, Guardian_NIC, Guardian_Tele_No, Age, Reason, C_Date, C_Time, Original_Out_Patient_Id_Number, Original_Patient_Name, Original_Guardian_NIC, Original_Guardian_Tele_No, Original_Age, Original_Reason, Original_C_Date, Original_C_Time, Original_Out_Patient_Id_Number);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OUT_PATIENT_MEDICINETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public OUT_PATIENT_MEDICINETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OUT_PATIENT_MEDICINE";
            tableMapping.ColumnMappings.Add("Out_Patient_Id_Number", "Out_Patient_Id_Number");
            tableMapping.ColumnMappings.Add("Drug_Code", "Drug_Code");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Number_Of_Day", "Number_Of_Day");
            tableMapping.ColumnMappings.Add("Issue_Date", "Issue_Date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[OUT_PATIENT_MEDICINE] WHERE (([Out_Patient_Id_Number] = @Original_Out_Patient_Id_Number) AND ([Drug_Code] = @Original_Drug_Code) AND ([Quantity] = @Original_Quantity) AND ([Number_Of_Day] = @Original_Number_Of_Day) AND ([Issue_Date] = @Original_Issue_Date))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number_Of_Day", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number_Of_Day", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[OUT_PATIENT_MEDICINE] ([Out_Patient_Id_Number], [Drug_Code], [Quantity], [Number_Of_Day], [Issue_Date]) VALUES (@Out_Patient_Id_Number, @Drug_Code, @Quantity, @Number_Of_Day, @Issue_Date);
SELECT Out_Patient_Id_Number, Drug_Code, Quantity, Number_Of_Day, Issue_Date FROM OUT_PATIENT_MEDICINE WHERE (Drug_Code = @Drug_Code) AND (Out_Patient_Id_Number = @Out_Patient_Id_Number)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Number_Of_Day", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number_Of_Day", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[OUT_PATIENT_MEDICINE] SET [Out_Patient_Id_Number] = @Out_Patient_Id_Number, [Drug_Code] = @Drug_Code, [Quantity] = @Quantity, [Number_Of_Day] = @Number_Of_Day, [Issue_Date] = @Issue_Date WHERE (([Out_Patient_Id_Number] = @Original_Out_Patient_Id_Number) AND ([Drug_Code] = @Original_Drug_Code) AND ([Quantity] = @Original_Quantity) AND ([Number_Of_Day] = @Original_Number_Of_Day) AND ([Issue_Date] = @Original_Issue_Date));
SELECT Out_Patient_Id_Number, Drug_Code, Quantity, Number_Of_Day, Issue_Date FROM OUT_PATIENT_MEDICINE WHERE (Drug_Code = @Drug_Code) AND (Out_Patient_Id_Number = @Out_Patient_Id_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Number_Of_Day", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number_Of_Day", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number_Of_Day", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number_Of_Day", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Out_Patient_Id_Number, Drug_Code, Quantity, Number_Of_Day, Issue_Date FROM" +
                " dbo.OUT_PATIENT_MEDICINE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_MEDICINEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_MEDICINEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_MEDICINEDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_MEDICINEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_MEDICINEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "OUT_PATIENT_MEDICINE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Out_Patient_Id_Number, string Original_Drug_Code, string Original_Quantity, int Original_Number_Of_Day, System.DateTime Original_Issue_Date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Out_Patient_Id_Number));
            if ((Original_Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Drug_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Drug_Code));
            }
            if ((Original_Quantity == null)) {
                throw new global::System.ArgumentNullException("Original_Quantity");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Quantity));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Number_Of_Day));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Issue_Date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Out_Patient_Id_Number, string Drug_Code, string Quantity, int Number_Of_Day, System.DateTime Issue_Date) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Out_Patient_Id_Number));
            if ((Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Drug_Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Drug_Code));
            }
            if ((Quantity == null)) {
                throw new global::System.ArgumentNullException("Quantity");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Quantity));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Number_Of_Day));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Issue_Date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Out_Patient_Id_Number, string Drug_Code, string Quantity, int Number_Of_Day, System.DateTime Issue_Date, int Original_Out_Patient_Id_Number, string Original_Drug_Code, string Original_Quantity, int Original_Number_Of_Day, System.DateTime Original_Issue_Date) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Out_Patient_Id_Number));
            if ((Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Drug_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Drug_Code));
            }
            if ((Quantity == null)) {
                throw new global::System.ArgumentNullException("Quantity");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Quantity));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Number_Of_Day));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Out_Patient_Id_Number));
            if ((Original_Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Drug_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Drug_Code));
            }
            if ((Original_Quantity == null)) {
                throw new global::System.ArgumentNullException("Original_Quantity");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Quantity));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Number_Of_Day));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_Issue_Date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Quantity, int Number_Of_Day, System.DateTime Issue_Date, int Original_Out_Patient_Id_Number, string Original_Drug_Code, string Original_Quantity, int Original_Number_Of_Day, System.DateTime Original_Issue_Date) {
            return this.Update(Original_Out_Patient_Id_Number, Original_Drug_Code, Quantity, Number_Of_Day, Issue_Date, Original_Out_Patient_Id_Number, Original_Drug_Code, Original_Quantity, Original_Number_Of_Day, Original_Issue_Date);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OUT_PATIENT_REPORTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public OUT_PATIENT_REPORTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OUT_PATIENT_REPORT";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Out_Patient_Report_No", "Out_Patient_Report_No");
            tableMapping.ColumnMappings.Add("Patient_Id_Number", "Patient_Id_Number");
            tableMapping.ColumnMappings.Add("Report", "Report");
            tableMapping.ColumnMappings.Add("Issue_Date", "Issue_Date");
            tableMapping.ColumnMappings.Add("Issue_Time", "Issue_Time");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[OUT_PATIENT_REPORT] WHERE (([Number] = @Original_Number) AND ((@IsNull_Out_Patient_Report_No = 1 AND [Out_Patient_Report_No] IS NULL) OR ([Out_Patient_Report_No] = @Original_Out_Patient_Report_No)) AND ([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Issue_Date] = @Original_Issue_Date) AND ([Issue_Time] = @Original_Issue_Time))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Out_Patient_Report_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Report_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Report_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[OUT_PATIENT_REPORT] ([Patient_Id_Number], [Report], [Issue_Date], [Issue_Time]) VALUES (@Patient_Id_Number, @Report, @Issue_Date, @Issue_Time);
SELECT Number, Out_Patient_Report_No, Patient_Id_Number, Report, Issue_Date, Issue_Time FROM OUT_PATIENT_REPORT WHERE (Out_Patient_Report_No = @Out_Patient_Report_No)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Report", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Report", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Report_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[OUT_PATIENT_REPORT] SET [Patient_Id_Number] = @Patient_Id_Number, [Report] = @Report, [Issue_Date] = @Issue_Date, [Issue_Time] = @Issue_Time WHERE (([Number] = @Original_Number) AND ((@IsNull_Out_Patient_Report_No = 1 AND [Out_Patient_Report_No] IS NULL) OR ([Out_Patient_Report_No] = @Original_Out_Patient_Report_No)) AND ([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Issue_Date] = @Original_Issue_Date) AND ([Issue_Time] = @Original_Issue_Time));
SELECT Number, Out_Patient_Report_No, Patient_Id_Number, Report, Issue_Date, Issue_Time FROM OUT_PATIENT_REPORT WHERE (Out_Patient_Report_No = @Out_Patient_Report_No)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Report", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Report", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Out_Patient_Report_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Report_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Report_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Report_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Out_Patient_Report_No, Patient_Id_Number, Report, Issue_Date, Issu" +
                "e_Time FROM dbo.OUT_PATIENT_REPORT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_REPORTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_REPORTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_REPORTDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_REPORTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_REPORTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "OUT_PATIENT_REPORT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Out_Patient_Report_No, int Original_Patient_Id_Number, System.DateTime Original_Issue_Date, System.TimeSpan Original_Issue_Time) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Out_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("Original_Out_Patient_Report_No");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Out_Patient_Report_No));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Patient_Id_Number));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Issue_Date));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.TimeSpan)(Original_Issue_Time));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Patient_Id_Number, byte[] Report, System.DateTime Issue_Date, System.TimeSpan Issue_Time, string Out_Patient_Report_No) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((Report == null)) {
                throw new global::System.ArgumentNullException("Report");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((byte[])(Report));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.TimeSpan)(Issue_Time));
            if ((Out_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("Out_Patient_Report_No");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Out_Patient_Report_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Patient_Id_Number, byte[] Report, System.DateTime Issue_Date, System.TimeSpan Issue_Time, int Original_Number, string Original_Out_Patient_Report_No, int Original_Patient_Id_Number, System.DateTime Original_Issue_Date, System.TimeSpan Original_Issue_Time, string Out_Patient_Report_No) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((Report == null)) {
                throw new global::System.ArgumentNullException("Report");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((byte[])(Report));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.TimeSpan)(Issue_Time));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Number));
            if ((Original_Out_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("Original_Out_Patient_Report_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Out_Patient_Report_No));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Patient_Id_Number));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_Issue_Date));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.TimeSpan)(Original_Issue_Time));
            if ((Out_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("Out_Patient_Report_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Out_Patient_Report_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OUT_PATIENT_SCANTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public OUT_PATIENT_SCANTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OUT_PATIENT_SCAN";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Out_Patient_Scan_No", "Out_Patient_Scan_No");
            tableMapping.ColumnMappings.Add("Patient_Id_Number", "Patient_Id_Number");
            tableMapping.ColumnMappings.Add("Scan_Report", "Scan_Report");
            tableMapping.ColumnMappings.Add("Issue_Date", "Issue_Date");
            tableMapping.ColumnMappings.Add("Issue_Time", "Issue_Time");
            tableMapping.ColumnMappings.Add("Specialist_Doctor_Id", "Specialist_Doctor_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[OUT_PATIENT_SCAN] WHERE (([Number] = @Original_Number) AND ((@IsNull_Out_Patient_Scan_No = 1 AND [Out_Patient_Scan_No] IS NULL) OR ([Out_Patient_Scan_No] = @Original_Out_Patient_Scan_No)) AND ([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Issue_Date] = @Original_Issue_Date) AND ([Issue_Time] = @Original_Issue_Time) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Out_Patient_Scan_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Scan_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Scan_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[OUT_PATIENT_SCAN] ([Patient_Id_Number], [Scan_Report], [Issue_Date], [Issue_Time], [Specialist_Doctor_Id]) VALUES (@Patient_Id_Number, @Scan_Report, @Issue_Date, @Issue_Time, @Specialist_Doctor_Id);
SELECT Number, Out_Patient_Scan_No, Patient_Id_Number, Scan_Report, Issue_Date, Issue_Time, Specialist_Doctor_Id FROM OUT_PATIENT_SCAN WHERE (Out_Patient_Scan_No = @Out_Patient_Scan_No)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Scan_Report", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Scan_Report", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Scan_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[OUT_PATIENT_SCAN] SET [Patient_Id_Number] = @Patient_Id_Number, [Scan_Report] = @Scan_Report, [Issue_Date] = @Issue_Date, [Issue_Time] = @Issue_Time, [Specialist_Doctor_Id] = @Specialist_Doctor_Id WHERE (([Number] = @Original_Number) AND ((@IsNull_Out_Patient_Scan_No = 1 AND [Out_Patient_Scan_No] IS NULL) OR ([Out_Patient_Scan_No] = @Original_Out_Patient_Scan_No)) AND ([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Issue_Date] = @Original_Issue_Date) AND ([Issue_Time] = @Original_Issue_Time) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id));
SELECT Number, Out_Patient_Scan_No, Patient_Id_Number, Scan_Report, Issue_Date, Issue_Time, Specialist_Doctor_Id FROM OUT_PATIENT_SCAN WHERE (Out_Patient_Scan_No = @Out_Patient_Scan_No)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Scan_Report", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Scan_Report", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Out_Patient_Scan_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Scan_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Scan_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Scan_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Out_Patient_Scan_No, Patient_Id_Number, Scan_Report, Issue_Date, I" +
                "ssue_Time, Specialist_Doctor_Id FROM dbo.OUT_PATIENT_SCAN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_SCANDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_SCANDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_SCANDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_SCANDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_SCANDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "OUT_PATIENT_SCAN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Out_Patient_Scan_No, int Original_Patient_Id_Number, System.DateTime Original_Issue_Date, System.TimeSpan Original_Issue_Time, string Original_Specialist_Doctor_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Out_Patient_Scan_No == null)) {
                throw new global::System.ArgumentNullException("Original_Out_Patient_Scan_No");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Out_Patient_Scan_No));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Patient_Id_Number));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Issue_Date));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.TimeSpan)(Original_Issue_Time));
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Patient_Id_Number, byte[] Scan_Report, System.DateTime Issue_Date, System.TimeSpan Issue_Time, string Specialist_Doctor_Id, string Out_Patient_Scan_No) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((Scan_Report == null)) {
                throw new global::System.ArgumentNullException("Scan_Report");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((byte[])(Scan_Report));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.TimeSpan)(Issue_Time));
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Specialist_Doctor_Id));
            }
            if ((Out_Patient_Scan_No == null)) {
                throw new global::System.ArgumentNullException("Out_Patient_Scan_No");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Out_Patient_Scan_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Patient_Id_Number, byte[] Scan_Report, System.DateTime Issue_Date, System.TimeSpan Issue_Time, string Specialist_Doctor_Id, int Original_Number, string Original_Out_Patient_Scan_No, int Original_Patient_Id_Number, System.DateTime Original_Issue_Date, System.TimeSpan Original_Issue_Time, string Original_Specialist_Doctor_Id, string Out_Patient_Scan_No) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((Scan_Report == null)) {
                throw new global::System.ArgumentNullException("Scan_Report");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((byte[])(Scan_Report));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.TimeSpan)(Issue_Time));
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Specialist_Doctor_Id));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Number));
            if ((Original_Out_Patient_Scan_No == null)) {
                throw new global::System.ArgumentNullException("Original_Out_Patient_Scan_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Out_Patient_Scan_No));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Patient_Id_Number));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_Issue_Date));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.TimeSpan)(Original_Issue_Time));
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((Out_Patient_Scan_No == null)) {
                throw new global::System.ArgumentNullException("Out_Patient_Scan_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Out_Patient_Scan_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OUT_PATIENT_XRAYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public OUT_PATIENT_XRAYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OUT_PATIENT_XRAY";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Out_Patient_Xray_No", "Out_Patient_Xray_No");
            tableMapping.ColumnMappings.Add("Patient_Id_Number", "Patient_Id_Number");
            tableMapping.ColumnMappings.Add("X_Ray", "X_Ray");
            tableMapping.ColumnMappings.Add("Issue_Date", "Issue_Date");
            tableMapping.ColumnMappings.Add("Issue_Time", "Issue_Time");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[OUT_PATIENT_XRAY] WHERE (([Number] = @Original_Number) AND ((@IsNull_Out_Patient_Xray_No = 1 AND [Out_Patient_Xray_No] IS NULL) OR ([Out_Patient_Xray_No] = @Original_Out_Patient_Xray_No)) AND ([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Issue_Date] = @Original_Issue_Date) AND ([Issue_Time] = @Original_Issue_Time))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Out_Patient_Xray_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Xray_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Xray_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Xray_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[OUT_PATIENT_XRAY] ([Patient_Id_Number], [X_Ray], [Issue_Date], [Issue_Time]) VALUES (@Patient_Id_Number, @X_Ray, @Issue_Date, @Issue_Time);
SELECT Number, Out_Patient_Xray_No, Patient_Id_Number, X_Ray, Issue_Date, Issue_Time FROM OUT_PATIENT_XRAY WHERE (Out_Patient_Xray_No = @Out_Patient_Xray_No)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Ray", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Ray", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Xray_No", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Xray_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[OUT_PATIENT_XRAY] SET [Patient_Id_Number] = @Patient_Id_Number, [X_Ray] = @X_Ray, [Issue_Date] = @Issue_Date, [Issue_Time] = @Issue_Time WHERE (([Number] = @Original_Number) AND ((@IsNull_Out_Patient_Xray_No = 1 AND [Out_Patient_Xray_No] IS NULL) OR ([Out_Patient_Xray_No] = @Original_Out_Patient_Xray_No)) AND ([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Issue_Date] = @Original_Issue_Date) AND ([Issue_Time] = @Original_Issue_Time));
SELECT Number, Out_Patient_Xray_No, Patient_Id_Number, X_Ray, Issue_Date, Issue_Time FROM OUT_PATIENT_XRAY WHERE (Out_Patient_Xray_No = @Out_Patient_Xray_No)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Ray", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Ray", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Out_Patient_Xray_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Xray_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Xray_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Xray_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Issue_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Issue_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Xray_No", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Xray_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Out_Patient_Xray_No, Patient_Id_Number, X_Ray, Issue_Date, Issue_T" +
                "ime FROM dbo.OUT_PATIENT_XRAY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_XRAYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_XRAYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_XRAYDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_XRAYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.OUT_PATIENT_XRAYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "OUT_PATIENT_XRAY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Out_Patient_Xray_No, int Original_Patient_Id_Number, System.DateTime Original_Issue_Date, System.TimeSpan Original_Issue_Time) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Out_Patient_Xray_No == null)) {
                throw new global::System.ArgumentNullException("Original_Out_Patient_Xray_No");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Out_Patient_Xray_No));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Patient_Id_Number));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Issue_Date));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.TimeSpan)(Original_Issue_Time));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Patient_Id_Number, byte[] X_Ray, System.DateTime Issue_Date, System.TimeSpan Issue_Time, string Out_Patient_Xray_No) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((X_Ray == null)) {
                throw new global::System.ArgumentNullException("X_Ray");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((byte[])(X_Ray));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.TimeSpan)(Issue_Time));
            if ((Out_Patient_Xray_No == null)) {
                throw new global::System.ArgumentNullException("Out_Patient_Xray_No");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Out_Patient_Xray_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Patient_Id_Number, byte[] X_Ray, System.DateTime Issue_Date, System.TimeSpan Issue_Time, int Original_Number, string Original_Out_Patient_Xray_No, int Original_Patient_Id_Number, System.DateTime Original_Issue_Date, System.TimeSpan Original_Issue_Time, string Out_Patient_Xray_No) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((X_Ray == null)) {
                throw new global::System.ArgumentNullException("X_Ray");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((byte[])(X_Ray));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Issue_Date));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.TimeSpan)(Issue_Time));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Number));
            if ((Original_Out_Patient_Xray_No == null)) {
                throw new global::System.ArgumentNullException("Original_Out_Patient_Xray_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Out_Patient_Xray_No));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Patient_Id_Number));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_Issue_Date));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.TimeSpan)(Original_Issue_Time));
            if ((Out_Patient_Xray_No == null)) {
                throw new global::System.ArgumentNullException("Out_Patient_Xray_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Out_Patient_Xray_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OUT_SAMPLETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public OUT_SAMPLETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OUT_SAMPLE";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Sample_Out_Number", "Sample_Out_Number");
            tableMapping.ColumnMappings.Add("Patient_Id_Number", "Patient_Id_Number");
            tableMapping.ColumnMappings.Add("Sample_Type", "Sample_Type");
            tableMapping.ColumnMappings.Add("Specialist_Doctor_Id", "Specialist_Doctor_Id");
            tableMapping.ColumnMappings.Add("Laboratory_Staff_Id", "Laboratory_Staff_Id");
            tableMapping.ColumnMappings.Add("Received_Date", "Received_Date");
            tableMapping.ColumnMappings.Add("Received_Time", "Received_Time");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[OUT_SAMPLE] WHERE (([Number] = @Original_Number) AND ((@IsNull_Sample_Out_Number = 1 AND [Sample_Out_Number] IS NULL) OR ([Sample_Out_Number] = @Original_Sample_Out_Number)) AND ([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Sample_Type] = @Original_Sample_Type) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id) AND ([Laboratory_Staff_Id] = @Original_Laboratory_Staff_Id) AND ([Received_Date] = @Original_Received_Date) AND ([Received_Time] = @Original_Received_Time))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sample_Out_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_Out_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sample_Out_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_Out_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sample_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Laboratory_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Laboratory_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Received_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Received_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[OUT_SAMPLE] ([Patient_Id_Number], [Sample_Type], [Specialist_Doctor_Id], [Laboratory_Staff_Id], [Received_Date], [Received_Time]) VALUES (@Patient_Id_Number, @Sample_Type, @Specialist_Doctor_Id, @Laboratory_Staff_Id, @Received_Date, @Received_Time);
SELECT Number, Sample_Out_Number, Patient_Id_Number, Sample_Type, Specialist_Doctor_Id, Laboratory_Staff_Id, Received_Date, Received_Time FROM OUT_SAMPLE WHERE (Sample_Out_Number = @Sample_Out_Number)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sample_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Laboratory_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Laboratory_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Received_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Received_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sample_Out_Number", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_Out_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[OUT_SAMPLE] SET [Patient_Id_Number] = @Patient_Id_Number, [Sample_Type] = @Sample_Type, [Specialist_Doctor_Id] = @Specialist_Doctor_Id, [Laboratory_Staff_Id] = @Laboratory_Staff_Id, [Received_Date] = @Received_Date, [Received_Time] = @Received_Time WHERE (([Number] = @Original_Number) AND ((@IsNull_Sample_Out_Number = 1 AND [Sample_Out_Number] IS NULL) OR ([Sample_Out_Number] = @Original_Sample_Out_Number)) AND ([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Sample_Type] = @Original_Sample_Type) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id) AND ([Laboratory_Staff_Id] = @Original_Laboratory_Staff_Id) AND ([Received_Date] = @Original_Received_Date) AND ([Received_Time] = @Original_Received_Time));
SELECT Number, Sample_Out_Number, Patient_Id_Number, Sample_Type, Specialist_Doctor_Id, Laboratory_Staff_Id, Received_Date, Received_Time FROM OUT_SAMPLE WHERE (Sample_Out_Number = @Sample_Out_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sample_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Laboratory_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Laboratory_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Received_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Received_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sample_Out_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_Out_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sample_Out_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_Out_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sample_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Laboratory_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Laboratory_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Received_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Received_Time", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Received_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sample_Out_Number", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_Out_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Sample_Out_Number, Patient_Id_Number, Sample_Type, Specialist_Doct" +
                "or_Id, Laboratory_Staff_Id, Received_Date, Received_Time FROM dbo.OUT_SAMPLE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.OUT_SAMPLEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.OUT_SAMPLEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.OUT_SAMPLEDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.OUT_SAMPLEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.OUT_SAMPLEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "OUT_SAMPLE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Sample_Out_Number, int Original_Patient_Id_Number, string Original_Sample_Type, string Original_Specialist_Doctor_Id, string Original_Laboratory_Staff_Id, System.DateTime Original_Received_Date, System.TimeSpan Original_Received_Time) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Sample_Out_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Sample_Out_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Sample_Out_Number));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Patient_Id_Number));
            if ((Original_Sample_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Sample_Type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Sample_Type));
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((Original_Laboratory_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Laboratory_Staff_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Laboratory_Staff_Id));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_Received_Date));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.TimeSpan)(Original_Received_Time));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Patient_Id_Number, string Sample_Type, string Specialist_Doctor_Id, string Laboratory_Staff_Id, System.DateTime Received_Date, System.TimeSpan Received_Time, string Sample_Out_Number) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((Sample_Type == null)) {
                throw new global::System.ArgumentNullException("Sample_Type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Sample_Type));
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Specialist_Doctor_Id));
            }
            if ((Laboratory_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Laboratory_Staff_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Laboratory_Staff_Id));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Received_Date));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.TimeSpan)(Received_Time));
            if ((Sample_Out_Number == null)) {
                throw new global::System.ArgumentNullException("Sample_Out_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Sample_Out_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Patient_Id_Number, string Sample_Type, string Specialist_Doctor_Id, string Laboratory_Staff_Id, System.DateTime Received_Date, System.TimeSpan Received_Time, int Original_Number, string Original_Sample_Out_Number, int Original_Patient_Id_Number, string Original_Sample_Type, string Original_Specialist_Doctor_Id, string Original_Laboratory_Staff_Id, System.DateTime Original_Received_Date, System.TimeSpan Original_Received_Time, string Sample_Out_Number) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((Sample_Type == null)) {
                throw new global::System.ArgumentNullException("Sample_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Sample_Type));
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Specialist_Doctor_Id));
            }
            if ((Laboratory_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Laboratory_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Laboratory_Staff_Id));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Received_Date));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.TimeSpan)(Received_Time));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Number));
            if ((Original_Sample_Out_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Sample_Out_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Sample_Out_Number));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Patient_Id_Number));
            if ((Original_Sample_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Sample_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Sample_Type));
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((Original_Laboratory_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Laboratory_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Laboratory_Staff_Id));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_Received_Date));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.TimeSpan)(Original_Received_Time));
            if ((Sample_Out_Number == null)) {
                throw new global::System.ArgumentNullException("Sample_Out_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Sample_Out_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PATIENT_APPOINTMENT_DETAILSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PATIENT_APPOINTMENT_DETAILSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PATIENT_APPOINTMENT_DETAILS";
            tableMapping.ColumnMappings.Add("Patient_Id_Number", "Patient_Id_Number");
            tableMapping.ColumnMappings.Add("Invoice_Number", "Invoice_Number");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PATIENT_APPOINTMENT_DETAILS] WHERE (([Patient_Id_Number] = @Or" +
                "iginal_Patient_Id_Number) AND ([Invoice_Number] = @Original_Invoice_Number))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Invoice_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Invoice_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PATIENT_APPOINTMENT_DETAILS] ([Patient_Id_Number], [Invoice_Number]) VALUES (@Patient_Id_Number, @Invoice_Number);
SELECT Patient_Id_Number, Invoice_Number FROM PATIENT_APPOINTMENT_DETAILS WHERE (Invoice_Number = @Invoice_Number) AND (Patient_Id_Number = @Patient_Id_Number)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Invoice_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Invoice_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PATIENT_APPOINTMENT_DETAILS] SET [Patient_Id_Number] = @Patient_Id_Number, [Invoice_Number] = @Invoice_Number WHERE (([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Invoice_Number] = @Original_Invoice_Number));
SELECT Patient_Id_Number, Invoice_Number FROM PATIENT_APPOINTMENT_DETAILS WHERE (Invoice_Number = @Invoice_Number) AND (Patient_Id_Number = @Patient_Id_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Invoice_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Invoice_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Invoice_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Invoice_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Patient_Id_Number, Invoice_Number FROM dbo.PATIENT_APPOINTMENT_DETAILS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.PATIENT_APPOINTMENT_DETAILSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.PATIENT_APPOINTMENT_DETAILSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.PATIENT_APPOINTMENT_DETAILSDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.PATIENT_APPOINTMENT_DETAILSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.PATIENT_APPOINTMENT_DETAILSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "PATIENT_APPOINTMENT_DETAILS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Patient_Id_Number, string Original_Invoice_Number) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Patient_Id_Number));
            if ((Original_Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Invoice_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Invoice_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Patient_Id_Number, string Invoice_Number) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Invoice_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Invoice_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Patient_Id_Number, string Invoice_Number, int Original_Patient_Id_Number, string Original_Invoice_Number) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Patient_Id_Number));
            if ((Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Invoice_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Invoice_Number));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Patient_Id_Number));
            if ((Original_Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Invoice_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Invoice_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Original_Patient_Id_Number, string Original_Invoice_Number) {
            return this.Update(Original_Patient_Id_Number, Original_Invoice_Number, Original_Patient_Id_Number, Original_Invoice_Number);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PATIENT_PRIVATE_DETAILTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PATIENT_PRIVATE_DETAILTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PATIENT_PRIVATE_DETAIL";
            tableMapping.ColumnMappings.Add("Patient_Id_Number", "Patient_Id_Number");
            tableMapping.ColumnMappings.Add("Patient_Full_Name", "Patient_Full_Name");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("Date_Of_Birth", "Date_Of_Birth");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("Blood_Group", "Blood_Group");
            tableMapping.ColumnMappings.Add("Guardian_Id_Number", "Guardian_Id_Number");
            tableMapping.ColumnMappings.Add("Specialist_Doctor_Id", "Specialist_Doctor_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PATIENT_PRIVATE_DETAIL] WHERE (([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Patient_Full_Name] = @Original_Patient_Full_Name) AND ([Gender] = @Original_Gender) AND ([Date_Of_Birth] = @Original_Date_Of_Birth) AND ([Age] = @Original_Age) AND ([Blood_Group] = @Original_Blood_Group) AND ([Guardian_Id_Number] = @Original_Guardian_Id_Number) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Full_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Full_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date_Of_Birth", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Of_Birth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Blood_Group", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Blood_Group", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Id_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PATIENT_PRIVATE_DETAIL] ([Patient_Full_Name], [Gender], [Date_Of_Birth], [Age], [Blood_Group], [Guardian_Id_Number], [Specialist_Doctor_Id]) VALUES (@Patient_Full_Name, @Gender, @Date_Of_Birth, @Age, @Blood_Group, @Guardian_Id_Number, @Specialist_Doctor_Id);
SELECT Patient_Id_Number, Patient_Full_Name, Gender, Date_Of_Birth, Age, Blood_Group, Guardian_Id_Number, Specialist_Doctor_Id FROM PATIENT_PRIVATE_DETAIL WHERE (Patient_Id_Number = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Full_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Full_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date_Of_Birth", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Of_Birth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Blood_Group", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Blood_Group", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Id_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PATIENT_PRIVATE_DETAIL] SET [Patient_Full_Name] = @Patient_Full_Name, [Gender] = @Gender, [Date_Of_Birth] = @Date_Of_Birth, [Age] = @Age, [Blood_Group] = @Blood_Group, [Guardian_Id_Number] = @Guardian_Id_Number, [Specialist_Doctor_Id] = @Specialist_Doctor_Id WHERE (([Patient_Id_Number] = @Original_Patient_Id_Number) AND ([Patient_Full_Name] = @Original_Patient_Full_Name) AND ([Gender] = @Original_Gender) AND ([Date_Of_Birth] = @Original_Date_Of_Birth) AND ([Age] = @Original_Age) AND ([Blood_Group] = @Original_Blood_Group) AND ([Guardian_Id_Number] = @Original_Guardian_Id_Number) AND ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id));
SELECT Patient_Id_Number, Patient_Full_Name, Gender, Date_Of_Birth, Age, Blood_Group, Guardian_Id_Number, Specialist_Doctor_Id FROM PATIENT_PRIVATE_DETAIL WHERE (Patient_Id_Number = @Patient_Id_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Full_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Full_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date_Of_Birth", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Of_Birth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Blood_Group", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Blood_Group", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Guardian_Id_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Patient_Full_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Full_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date_Of_Birth", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Of_Birth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Blood_Group", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Blood_Group", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Guardian_Id_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Guardian_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Patient_Id_Number", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Patient_Id_Number, Patient_Full_Name, Gender, Date_Of_Birth, Age, Blood_Gr" +
                "oup, Guardian_Id_Number, Specialist_Doctor_Id FROM dbo.PATIENT_PRIVATE_DETAIL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.PATIENT_PRIVATE_DETAILDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.PATIENT_PRIVATE_DETAILDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.PATIENT_PRIVATE_DETAILDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.PATIENT_PRIVATE_DETAILDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.PATIENT_PRIVATE_DETAILDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "PATIENT_PRIVATE_DETAIL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Patient_Id_Number, string Original_Patient_Full_Name, string Original_Gender, System.DateTime Original_Date_Of_Birth, int Original_Age, string Original_Blood_Group, string Original_Guardian_Id_Number, string Original_Specialist_Doctor_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Patient_Id_Number));
            if ((Original_Patient_Full_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Patient_Full_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Patient_Full_Name));
            }
            if ((Original_Gender == null)) {
                throw new global::System.ArgumentNullException("Original_Gender");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Gender));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Date_Of_Birth));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Age));
            if ((Original_Blood_Group == null)) {
                throw new global::System.ArgumentNullException("Original_Blood_Group");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Blood_Group));
            }
            if ((Original_Guardian_Id_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Id_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Guardian_Id_Number));
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Patient_Full_Name, string Gender, System.DateTime Date_Of_Birth, int Age, string Blood_Group, string Guardian_Id_Number, string Specialist_Doctor_Id) {
            if ((Patient_Full_Name == null)) {
                throw new global::System.ArgumentNullException("Patient_Full_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Patient_Full_Name));
            }
            if ((Gender == null)) {
                throw new global::System.ArgumentNullException("Gender");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Gender));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Date_Of_Birth));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Age));
            if ((Blood_Group == null)) {
                throw new global::System.ArgumentNullException("Blood_Group");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Blood_Group));
            }
            if ((Guardian_Id_Number == null)) {
                throw new global::System.ArgumentNullException("Guardian_Id_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Guardian_Id_Number));
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Specialist_Doctor_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Patient_Full_Name, 
                    string Gender, 
                    System.DateTime Date_Of_Birth, 
                    int Age, 
                    string Blood_Group, 
                    string Guardian_Id_Number, 
                    string Specialist_Doctor_Id, 
                    int Original_Patient_Id_Number, 
                    string Original_Patient_Full_Name, 
                    string Original_Gender, 
                    System.DateTime Original_Date_Of_Birth, 
                    int Original_Age, 
                    string Original_Blood_Group, 
                    string Original_Guardian_Id_Number, 
                    string Original_Specialist_Doctor_Id, 
                    int Patient_Id_Number) {
            if ((Patient_Full_Name == null)) {
                throw new global::System.ArgumentNullException("Patient_Full_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Patient_Full_Name));
            }
            if ((Gender == null)) {
                throw new global::System.ArgumentNullException("Gender");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Gender));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Date_Of_Birth));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Age));
            if ((Blood_Group == null)) {
                throw new global::System.ArgumentNullException("Blood_Group");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Blood_Group));
            }
            if ((Guardian_Id_Number == null)) {
                throw new global::System.ArgumentNullException("Guardian_Id_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Guardian_Id_Number));
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Specialist_Doctor_Id));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Patient_Id_Number));
            if ((Original_Patient_Full_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Patient_Full_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Patient_Full_Name));
            }
            if ((Original_Gender == null)) {
                throw new global::System.ArgumentNullException("Original_Gender");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Gender));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_Date_Of_Birth));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Age));
            if ((Original_Blood_Group == null)) {
                throw new global::System.ArgumentNullException("Original_Blood_Group");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Blood_Group));
            }
            if ((Original_Guardian_Id_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Guardian_Id_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Guardian_Id_Number));
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Patient_Id_Number));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Patient_Full_Name, string Gender, System.DateTime Date_Of_Birth, int Age, string Blood_Group, string Guardian_Id_Number, string Specialist_Doctor_Id, int Original_Patient_Id_Number, string Original_Patient_Full_Name, string Original_Gender, System.DateTime Original_Date_Of_Birth, int Original_Age, string Original_Blood_Group, string Original_Guardian_Id_Number, string Original_Specialist_Doctor_Id) {
            return this.Update(Patient_Full_Name, Gender, Date_Of_Birth, Age, Blood_Group, Guardian_Id_Number, Specialist_Doctor_Id, Original_Patient_Id_Number, Original_Patient_Full_Name, Original_Gender, Original_Date_Of_Birth, Original_Age, Original_Blood_Group, Original_Guardian_Id_Number, Original_Specialist_Doctor_Id, Original_Patient_Id_Number);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PHARMACY_MEDICINESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PHARMACY_MEDICINESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PHARMACY_MEDICINES";
            tableMapping.ColumnMappings.Add("Pharmacy_Invoice_Number", "Pharmacy_Invoice_Number");
            tableMapping.ColumnMappings.Add("Drug_Code", "Drug_Code");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Number_Of_Days", "Number_Of_Days");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PHARMACY_MEDICINES] WHERE (([Pharmacy_Invoice_Number] = @Origi" +
                "nal_Pharmacy_Invoice_Number) AND ([Drug_Code] = @Original_Drug_Code) AND ([Quant" +
                "ity] = @Original_Quantity) AND ([Number_Of_Days] = @Original_Number_Of_Days))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pharmacy_Invoice_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Invoice_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number_Of_Days", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number_Of_Days", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PHARMACY_MEDICINES] ([Pharmacy_Invoice_Number], [Drug_Code], [Quantity], [Number_Of_Days]) VALUES (@Pharmacy_Invoice_Number, @Drug_Code, @Quantity, @Number_Of_Days);
SELECT Pharmacy_Invoice_Number, Drug_Code, Quantity, Number_Of_Days FROM PHARMACY_MEDICINES WHERE (Drug_Code = @Drug_Code) AND (Pharmacy_Invoice_Number = @Pharmacy_Invoice_Number)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pharmacy_Invoice_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Invoice_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Number_Of_Days", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number_Of_Days", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PHARMACY_MEDICINES] SET [Pharmacy_Invoice_Number] = @Pharmacy_Invoice_Number, [Drug_Code] = @Drug_Code, [Quantity] = @Quantity, [Number_Of_Days] = @Number_Of_Days WHERE (([Pharmacy_Invoice_Number] = @Original_Pharmacy_Invoice_Number) AND ([Drug_Code] = @Original_Drug_Code) AND ([Quantity] = @Original_Quantity) AND ([Number_Of_Days] = @Original_Number_Of_Days));
SELECT Pharmacy_Invoice_Number, Drug_Code, Quantity, Number_Of_Days FROM PHARMACY_MEDICINES WHERE (Drug_Code = @Drug_Code) AND (Pharmacy_Invoice_Number = @Pharmacy_Invoice_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pharmacy_Invoice_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Invoice_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Number_Of_Days", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number_Of_Days", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pharmacy_Invoice_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Invoice_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Drug_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drug_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number_Of_Days", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number_Of_Days", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Pharmacy_Invoice_Number, Drug_Code, Quantity, Number_Of_Days FROM dbo.PHAR" +
                "MACY_MEDICINES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.PHARMACY_MEDICINESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.PHARMACY_MEDICINESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.PHARMACY_MEDICINESDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.PHARMACY_MEDICINESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.PHARMACY_MEDICINESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "PHARMACY_MEDICINES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Pharmacy_Invoice_Number, string Original_Drug_Code, int Original_Quantity, int Original_Number_Of_Days) {
            if ((Original_Pharmacy_Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Pharmacy_Invoice_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Pharmacy_Invoice_Number));
            }
            if ((Original_Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Drug_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Drug_Code));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Quantity));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Number_Of_Days));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Pharmacy_Invoice_Number, string Drug_Code, int Quantity, int Number_Of_Days) {
            if ((Pharmacy_Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Pharmacy_Invoice_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Pharmacy_Invoice_Number));
            }
            if ((Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Drug_Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Drug_Code));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Quantity));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Number_Of_Days));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Pharmacy_Invoice_Number, string Drug_Code, int Quantity, int Number_Of_Days, string Original_Pharmacy_Invoice_Number, string Original_Drug_Code, int Original_Quantity, int Original_Number_Of_Days) {
            if ((Pharmacy_Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Pharmacy_Invoice_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Pharmacy_Invoice_Number));
            }
            if ((Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Drug_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Drug_Code));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Quantity));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Number_Of_Days));
            if ((Original_Pharmacy_Invoice_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Pharmacy_Invoice_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Pharmacy_Invoice_Number));
            }
            if ((Original_Drug_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Drug_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Drug_Code));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Quantity));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Number_Of_Days));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Quantity, int Number_Of_Days, string Original_Pharmacy_Invoice_Number, string Original_Drug_Code, int Original_Quantity, int Original_Number_Of_Days) {
            return this.Update(Original_Pharmacy_Invoice_Number, Original_Drug_Code, Quantity, Number_Of_Days, Original_Pharmacy_Invoice_Number, Original_Drug_Code, Original_Quantity, Original_Number_Of_Days);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PHARMACY_STAFFTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PHARMACY_STAFFTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PHARMACY_STAFF";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Pharmacy_Staff_Id", "Pharmacy_Staff_Id");
            tableMapping.ColumnMappings.Add("P_Officer_First_Name", "P_Officer_First_Name");
            tableMapping.ColumnMappings.Add("P_Officer_Middle_Name", "P_Officer_Middle_Name");
            tableMapping.ColumnMappings.Add("P_Officer_Last_Name", "P_Officer_Last_Name");
            tableMapping.ColumnMappings.Add("P_Officer_Address", "P_Officer_Address");
            tableMapping.ColumnMappings.Add("P_Officer_Tele_Number", "P_Officer_Tele_Number");
            tableMapping.ColumnMappings.Add("P_Officer_DOB", "P_Officer_DOB");
            tableMapping.ColumnMappings.Add("P_Officer_Salary", "P_Officer_Salary");
            tableMapping.ColumnMappings.Add("Designation", "Designation");
            tableMapping.ColumnMappings.Add("P_Job_Start_Date", "P_Job_Start_Date");
            tableMapping.ColumnMappings.Add("Roll_Id", "Roll_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PHARMACY_STAFF] WHERE (([Number] = @Original_Number) AND ((@IsNull_Pharmacy_Staff_Id = 1 AND [Pharmacy_Staff_Id] IS NULL) OR ([Pharmacy_Staff_Id] = @Original_Pharmacy_Staff_Id)) AND ([P_Officer_First_Name] = @Original_P_Officer_First_Name) AND ((@IsNull_P_Officer_Middle_Name = 1 AND [P_Officer_Middle_Name] IS NULL) OR ([P_Officer_Middle_Name] = @Original_P_Officer_Middle_Name)) AND ([P_Officer_Last_Name] = @Original_P_Officer_Last_Name) AND ([P_Officer_Address] = @Original_P_Officer_Address) AND ([P_Officer_Tele_Number] = @Original_P_Officer_Tele_Number) AND ([P_Officer_DOB] = @Original_P_Officer_DOB) AND ([P_Officer_Salary] = @Original_P_Officer_Salary) AND ([Designation] = @Original_Designation) AND ([P_Job_Start_Date] = @Original_P_Job_Start_Date) AND ((@IsNull_Roll_Id = 1 AND [Roll_Id] IS NULL) OR ([Roll_Id] = @Original_Roll_Id)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pharmacy_Staff_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Staff_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pharmacy_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_P_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "P_Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Job_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Roll_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PHARMACY_STAFF] ([P_Officer_First_Name], [P_Officer_Middle_Name], [P_Officer_Last_Name], [P_Officer_Address], [P_Officer_Tele_Number], [P_Officer_DOB], [P_Officer_Salary], [Designation], [P_Job_Start_Date], [Roll_Id]) VALUES (@P_Officer_First_Name, @P_Officer_Middle_Name, @P_Officer_Last_Name, @P_Officer_Address, @P_Officer_Tele_Number, @P_Officer_DOB, @P_Officer_Salary, @Designation, @P_Job_Start_Date, @Roll_Id);
SELECT Number, Pharmacy_Staff_Id, P_Officer_First_Name, P_Officer_Middle_Name, P_Officer_Last_Name, P_Officer_Address, P_Officer_Tele_Number, P_Officer_DOB, P_Officer_Salary, Designation, P_Job_Start_Date, Roll_Id FROM PHARMACY_STAFF WHERE (Pharmacy_Staff_Id = @Pharmacy_Staff_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "P_Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Job_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pharmacy_Staff_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[PHARMACY_STAFF] SET [P_Officer_First_Name] = @P_Officer_First_Name," +
                " [P_Officer_Middle_Name] = @P_Officer_Middle_Name, [P_Officer_Last_Name] = @P_Of" +
                "ficer_Last_Name, [P_Officer_Address] = @P_Officer_Address, [P_Officer_Tele_Numbe" +
                "r] = @P_Officer_Tele_Number, [P_Officer_DOB] = @P_Officer_DOB, [P_Officer_Salary" +
                "] = @P_Officer_Salary, [Designation] = @Designation, [P_Job_Start_Date] = @P_Job" +
                "_Start_Date, [Roll_Id] = @Roll_Id WHERE (([Number] = @Original_Number) AND ((@Is" +
                "Null_Pharmacy_Staff_Id = 1 AND [Pharmacy_Staff_Id] IS NULL) OR ([Pharmacy_Staff_" +
                "Id] = @Original_Pharmacy_Staff_Id)) AND ([P_Officer_First_Name] = @Original_P_Of" +
                "ficer_First_Name) AND ((@IsNull_P_Officer_Middle_Name = 1 AND [P_Officer_Middle_" +
                "Name] IS NULL) OR ([P_Officer_Middle_Name] = @Original_P_Officer_Middle_Name)) A" +
                "ND ([P_Officer_Last_Name] = @Original_P_Officer_Last_Name) AND ([P_Officer_Addre" +
                "ss] = @Original_P_Officer_Address) AND ([P_Officer_Tele_Number] = @Original_P_Of" +
                "ficer_Tele_Number) AND ([P_Officer_DOB] = @Original_P_Officer_DOB) AND ([P_Offic" +
                "er_Salary] = @Original_P_Officer_Salary) AND ([Designation] = @Original_Designat" +
                "ion) AND ([P_Job_Start_Date] = @Original_P_Job_Start_Date) AND ((@IsNull_Roll_Id" +
                " = 1 AND [Roll_Id] IS NULL) OR ([Roll_Id] = @Original_Roll_Id)));\r\nSELECT Number" +
                ", Pharmacy_Staff_Id, P_Officer_First_Name, P_Officer_Middle_Name, P_Officer_Last" +
                "_Name, P_Officer_Address, P_Officer_Tele_Number, P_Officer_DOB, P_Officer_Salary" +
                ", Designation, P_Job_Start_Date, Roll_Id FROM PHARMACY_STAFF WHERE (Pharmacy_Sta" +
                "ff_Id = @Pharmacy_Staff_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "P_Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Job_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pharmacy_Staff_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Staff_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pharmacy_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_P_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "P_Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_Job_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Roll_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pharmacy_Staff_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Pharmacy_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Pharmacy_Staff_Id, P_Officer_First_Name, P_Officer_Middle_Name, P_" +
                "Officer_Last_Name, P_Officer_Address, P_Officer_Tele_Number, P_Officer_DOB, P_Of" +
                "ficer_Salary, Designation, P_Job_Start_Date, Roll_Id FROM dbo.PHARMACY_STAFF";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.PHARMACY_STAFFDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.PHARMACY_STAFFDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.PHARMACY_STAFFDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.PHARMACY_STAFFDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.PHARMACY_STAFFDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "PHARMACY_STAFF");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Pharmacy_Staff_Id, string Original_P_Officer_First_Name, string Original_P_Officer_Middle_Name, string Original_P_Officer_Last_Name, string Original_P_Officer_Address, int Original_P_Officer_Tele_Number, System.DateTime Original_P_Officer_DOB, decimal Original_P_Officer_Salary, string Original_Designation, System.DateTime Original_P_Job_Start_Date, string Original_Roll_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Pharmacy_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Pharmacy_Staff_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Pharmacy_Staff_Id));
            }
            if ((Original_P_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_P_Officer_First_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_P_Officer_First_Name));
            }
            if ((Original_P_Officer_Middle_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_P_Officer_Middle_Name));
            }
            if ((Original_P_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_P_Officer_Last_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_P_Officer_Last_Name));
            }
            if ((Original_P_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_P_Officer_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_P_Officer_Address));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_P_Officer_Tele_Number));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_P_Officer_DOB));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_P_Officer_Salary));
            if ((Original_Designation == null)) {
                throw new global::System.ArgumentNullException("Original_Designation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Designation));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_P_Job_Start_Date));
            if ((Original_Roll_Id == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Roll_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string P_Officer_First_Name, string P_Officer_Middle_Name, string P_Officer_Last_Name, string P_Officer_Address, int P_Officer_Tele_Number, System.DateTime P_Officer_DOB, decimal P_Officer_Salary, string Designation, System.DateTime P_Job_Start_Date, string Roll_Id, string Pharmacy_Staff_Id) {
            if ((P_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("P_Officer_First_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(P_Officer_First_Name));
            }
            if ((P_Officer_Middle_Name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(P_Officer_Middle_Name));
            }
            if ((P_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("P_Officer_Last_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(P_Officer_Last_Name));
            }
            if ((P_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("P_Officer_Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(P_Officer_Address));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(P_Officer_Tele_Number));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(P_Officer_DOB));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(P_Officer_Salary));
            if ((Designation == null)) {
                throw new global::System.ArgumentNullException("Designation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Designation));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(P_Job_Start_Date));
            if ((Roll_Id == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Roll_Id));
            }
            if ((Pharmacy_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Pharmacy_Staff_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Pharmacy_Staff_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string P_Officer_First_Name, 
                    string P_Officer_Middle_Name, 
                    string P_Officer_Last_Name, 
                    string P_Officer_Address, 
                    int P_Officer_Tele_Number, 
                    System.DateTime P_Officer_DOB, 
                    decimal P_Officer_Salary, 
                    string Designation, 
                    System.DateTime P_Job_Start_Date, 
                    string Roll_Id, 
                    int Original_Number, 
                    string Original_Pharmacy_Staff_Id, 
                    string Original_P_Officer_First_Name, 
                    string Original_P_Officer_Middle_Name, 
                    string Original_P_Officer_Last_Name, 
                    string Original_P_Officer_Address, 
                    int Original_P_Officer_Tele_Number, 
                    System.DateTime Original_P_Officer_DOB, 
                    decimal Original_P_Officer_Salary, 
                    string Original_Designation, 
                    System.DateTime Original_P_Job_Start_Date, 
                    string Original_Roll_Id, 
                    string Pharmacy_Staff_Id) {
            if ((P_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("P_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(P_Officer_First_Name));
            }
            if ((P_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(P_Officer_Middle_Name));
            }
            if ((P_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("P_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(P_Officer_Last_Name));
            }
            if ((P_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("P_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(P_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(P_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(P_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(P_Officer_Salary));
            if ((Designation == null)) {
                throw new global::System.ArgumentNullException("Designation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Designation));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(P_Job_Start_Date));
            if ((Roll_Id == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Roll_Id));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Number));
            if ((Original_Pharmacy_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Pharmacy_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Pharmacy_Staff_Id));
            }
            if ((Original_P_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_P_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_P_Officer_First_Name));
            }
            if ((Original_P_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_P_Officer_Middle_Name));
            }
            if ((Original_P_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_P_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_P_Officer_Last_Name));
            }
            if ((Original_P_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_P_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_P_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_P_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_P_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_P_Officer_Salary));
            if ((Original_Designation == null)) {
                throw new global::System.ArgumentNullException("Original_Designation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Designation));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_P_Job_Start_Date));
            if ((Original_Roll_Id == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Roll_Id));
            }
            if ((Pharmacy_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Pharmacy_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Pharmacy_Staff_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QUALIFICATIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public QUALIFICATIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QUALIFICATION";
            tableMapping.ColumnMappings.Add("Specialist_Doctor_Id", "Specialist_Doctor_Id");
            tableMapping.ColumnMappings.Add("Qualification", "Qualification");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QUALIFICATION] WHERE (([Specialist_Doctor_Id] = @Original_Spec" +
                "ialist_Doctor_Id) AND ([Qualification] = @Original_Qualification))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Qualification", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Qualification", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[QUALIFICATION] ([Specialist_Doctor_Id], [Qualification]) VALUES (@Specialist_Doctor_Id, @Qualification);
SELECT Specialist_Doctor_Id, Qualification FROM QUALIFICATION WHERE (Qualification = @Qualification) AND (Specialist_Doctor_Id = @Specialist_Doctor_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Qualification", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Qualification", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QUALIFICATION] SET [Specialist_Doctor_Id] = @Specialist_Doctor_Id, [Qualification] = @Qualification WHERE (([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id) AND ([Qualification] = @Original_Qualification));
SELECT Specialist_Doctor_Id, Qualification FROM QUALIFICATION WHERE (Qualification = @Qualification) AND (Specialist_Doctor_Id = @Specialist_Doctor_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Qualification", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Qualification", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Qualification", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Qualification", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Specialist_Doctor_Id, Qualification FROM dbo.QUALIFICATION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.QUALIFICATIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.QUALIFICATIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.QUALIFICATIONDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.QUALIFICATIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.QUALIFICATIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "QUALIFICATION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Specialist_Doctor_Id, string Original_Qualification) {
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((Original_Qualification == null)) {
                throw new global::System.ArgumentNullException("Original_Qualification");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Qualification));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Specialist_Doctor_Id, string Qualification) {
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Specialist_Doctor_Id));
            }
            if ((Qualification == null)) {
                throw new global::System.ArgumentNullException("Qualification");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Qualification));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Specialist_Doctor_Id, string Qualification, string Original_Specialist_Doctor_Id, string Original_Qualification) {
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Specialist_Doctor_Id));
            }
            if ((Qualification == null)) {
                throw new global::System.ArgumentNullException("Qualification");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Qualification));
            }
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((Original_Qualification == null)) {
                throw new global::System.ArgumentNullException("Original_Qualification");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Qualification));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Original_Specialist_Doctor_Id, string Original_Qualification) {
            return this.Update(Original_Specialist_Doctor_Id, Original_Qualification, Original_Specialist_Doctor_Id, Original_Qualification);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class REPORT_IN_PATIENTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public REPORT_IN_PATIENTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "REPORT_IN_PATIENT";
            tableMapping.ColumnMappings.Add("Admission_Number", "Admission_Number");
            tableMapping.ColumnMappings.Add("In_Patient_Report_No", "In_Patient_Report_No");
            tableMapping.ColumnMappings.Add("In_Patient_Xray_No", "In_Patient_Xray_No");
            tableMapping.ColumnMappings.Add("In_Patient_Scan_No", "In_Patient_Scan_No");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[REPORT_IN_PATIENT] WHERE (([Admission_Number] = @Original_Admission_Number) AND ([In_Patient_Report_No] = @Original_In_Patient_Report_No) AND ((@IsNull_In_Patient_Xray_No = 1 AND [In_Patient_Xray_No] IS NULL) OR ([In_Patient_Xray_No] = @Original_In_Patient_Xray_No)) AND ((@IsNull_In_Patient_Scan_No = 1 AND [In_Patient_Scan_No] IS NULL) OR ([In_Patient_Scan_No] = @Original_In_Patient_Scan_No)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Report_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_In_Patient_Xray_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Xray_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Patient_Xray_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Xray_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_In_Patient_Scan_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Scan_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Scan_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[REPORT_IN_PATIENT] ([Admission_Number], [In_Patient_Report_No], [In_Patient_Xray_No], [In_Patient_Scan_No]) VALUES (@Admission_Number, @In_Patient_Report_No, @In_Patient_Xray_No, @In_Patient_Scan_No);
SELECT Admission_Number, In_Patient_Report_No, In_Patient_Xray_No, In_Patient_Scan_No FROM REPORT_IN_PATIENT WHERE (Admission_Number = @Admission_Number) AND (In_Patient_Report_No = @In_Patient_Report_No)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Report_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Patient_Xray_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Xray_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Scan_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[REPORT_IN_PATIENT] SET [Admission_Number] = @Admission_Number, [In_Patient_Report_No] = @In_Patient_Report_No, [In_Patient_Xray_No] = @In_Patient_Xray_No, [In_Patient_Scan_No] = @In_Patient_Scan_No WHERE (([Admission_Number] = @Original_Admission_Number) AND ([In_Patient_Report_No] = @Original_In_Patient_Report_No) AND ((@IsNull_In_Patient_Xray_No = 1 AND [In_Patient_Xray_No] IS NULL) OR ([In_Patient_Xray_No] = @Original_In_Patient_Xray_No)) AND ((@IsNull_In_Patient_Scan_No = 1 AND [In_Patient_Scan_No] IS NULL) OR ([In_Patient_Scan_No] = @Original_In_Patient_Scan_No)));
SELECT Admission_Number, In_Patient_Report_No, In_Patient_Xray_No, In_Patient_Scan_No FROM REPORT_IN_PATIENT WHERE (Admission_Number = @Admission_Number) AND (In_Patient_Report_No = @In_Patient_Report_No)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Report_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Patient_Xray_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Xray_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Scan_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Admission_Number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Admission_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Report_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_In_Patient_Xray_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Xray_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Patient_Xray_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Xray_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_In_Patient_Scan_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Scan_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Patient_Scan_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Admission_Number, In_Patient_Report_No, In_Patient_Xray_No, In_Patient_Sca" +
                "n_No FROM dbo.REPORT_IN_PATIENT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.REPORT_IN_PATIENTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.REPORT_IN_PATIENTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.REPORT_IN_PATIENTDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.REPORT_IN_PATIENTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.REPORT_IN_PATIENTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "REPORT_IN_PATIENT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Admission_Number, string Original_In_Patient_Report_No, string Original_In_Patient_Xray_No, string Original_In_Patient_Scan_No) {
            if ((Original_Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Admission_Number));
            }
            if ((Original_In_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("Original_In_Patient_Report_No");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_In_Patient_Report_No));
            }
            if ((Original_In_Patient_Xray_No == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_In_Patient_Xray_No));
            }
            if ((Original_In_Patient_Scan_No == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_In_Patient_Scan_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Admission_Number, string In_Patient_Report_No, string In_Patient_Xray_No, string In_Patient_Scan_No) {
            if ((Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Admission_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Admission_Number));
            }
            if ((In_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("In_Patient_Report_No");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(In_Patient_Report_No));
            }
            if ((In_Patient_Xray_No == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(In_Patient_Xray_No));
            }
            if ((In_Patient_Scan_No == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(In_Patient_Scan_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Admission_Number, string In_Patient_Report_No, string In_Patient_Xray_No, string In_Patient_Scan_No, string Original_Admission_Number, string Original_In_Patient_Report_No, string Original_In_Patient_Xray_No, string Original_In_Patient_Scan_No) {
            if ((Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Admission_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Admission_Number));
            }
            if ((In_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("In_Patient_Report_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(In_Patient_Report_No));
            }
            if ((In_Patient_Xray_No == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(In_Patient_Xray_No));
            }
            if ((In_Patient_Scan_No == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(In_Patient_Scan_No));
            }
            if ((Original_Admission_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Admission_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Admission_Number));
            }
            if ((Original_In_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("Original_In_Patient_Report_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_In_Patient_Report_No));
            }
            if ((Original_In_Patient_Xray_No == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_In_Patient_Xray_No));
            }
            if ((Original_In_Patient_Scan_No == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_In_Patient_Scan_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string In_Patient_Xray_No, string In_Patient_Scan_No, string Original_Admission_Number, string Original_In_Patient_Report_No, string Original_In_Patient_Xray_No, string Original_In_Patient_Scan_No) {
            return this.Update(Original_Admission_Number, Original_In_Patient_Report_No, In_Patient_Xray_No, In_Patient_Scan_No, Original_Admission_Number, Original_In_Patient_Report_No, Original_In_Patient_Xray_No, Original_In_Patient_Scan_No);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class REPORT_OUT_PATIENTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public REPORT_OUT_PATIENTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "REPORT_OUT_PATIENT";
            tableMapping.ColumnMappings.Add("Out_Patient_Id_Number", "Out_Patient_Id_Number");
            tableMapping.ColumnMappings.Add("Out_Patient_Report_No", "Out_Patient_Report_No");
            tableMapping.ColumnMappings.Add("Out_Patient_Xray_No", "Out_Patient_Xray_No");
            tableMapping.ColumnMappings.Add("Out_Patient_Scan_No", "Out_Patient_Scan_No");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[REPORT_OUT_PATIENT] WHERE (([Out_Patient_Id_Number] = @Original_Out_Patient_Id_Number) AND ([Out_Patient_Report_No] = @Original_Out_Patient_Report_No) AND ((@IsNull_Out_Patient_Xray_No = 1 AND [Out_Patient_Xray_No] IS NULL) OR ([Out_Patient_Xray_No] = @Original_Out_Patient_Xray_No)) AND ((@IsNull_Out_Patient_Scan_No = 1 AND [Out_Patient_Scan_No] IS NULL) OR ([Out_Patient_Scan_No] = @Original_Out_Patient_Scan_No)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Report_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Out_Patient_Xray_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Xray_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Xray_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Xray_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Out_Patient_Scan_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Scan_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Scan_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[REPORT_OUT_PATIENT] ([Out_Patient_Id_Number], [Out_Patient_Report_No], [Out_Patient_Xray_No], [Out_Patient_Scan_No]) VALUES (@Out_Patient_Id_Number, @Out_Patient_Report_No, @Out_Patient_Xray_No, @Out_Patient_Scan_No);
SELECT Out_Patient_Id_Number, Out_Patient_Report_No, Out_Patient_Xray_No, Out_Patient_Scan_No FROM REPORT_OUT_PATIENT WHERE (Out_Patient_Id_Number = @Out_Patient_Id_Number) AND (Out_Patient_Report_No = @Out_Patient_Report_No)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Report_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Xray_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Xray_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Scan_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[REPORT_OUT_PATIENT] SET [Out_Patient_Id_Number] = @Out_Patient_Id_Number, [Out_Patient_Report_No] = @Out_Patient_Report_No, [Out_Patient_Xray_No] = @Out_Patient_Xray_No, [Out_Patient_Scan_No] = @Out_Patient_Scan_No WHERE (([Out_Patient_Id_Number] = @Original_Out_Patient_Id_Number) AND ([Out_Patient_Report_No] = @Original_Out_Patient_Report_No) AND ((@IsNull_Out_Patient_Xray_No = 1 AND [Out_Patient_Xray_No] IS NULL) OR ([Out_Patient_Xray_No] = @Original_Out_Patient_Xray_No)) AND ((@IsNull_Out_Patient_Scan_No = 1 AND [Out_Patient_Scan_No] IS NULL) OR ([Out_Patient_Scan_No] = @Original_Out_Patient_Scan_No)));
SELECT Out_Patient_Id_Number, Out_Patient_Report_No, Out_Patient_Xray_No, Out_Patient_Scan_No FROM REPORT_OUT_PATIENT WHERE (Out_Patient_Id_Number = @Out_Patient_Id_Number) AND (Out_Patient_Report_No = @Out_Patient_Report_No)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Id_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Report_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Xray_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Xray_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Out_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Scan_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Id_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Id_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Report_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Report_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Out_Patient_Xray_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Xray_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Xray_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Xray_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Out_Patient_Scan_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Scan_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Out_Patient_Scan_No", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Out_Patient_Scan_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Out_Patient_Id_Number, Out_Patient_Report_No, Out_Patient_Xray_No, Out_Pat" +
                "ient_Scan_No FROM dbo.REPORT_OUT_PATIENT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.REPORT_OUT_PATIENTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.REPORT_OUT_PATIENTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.REPORT_OUT_PATIENTDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.REPORT_OUT_PATIENTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.REPORT_OUT_PATIENTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "REPORT_OUT_PATIENT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Out_Patient_Id_Number, string Original_Out_Patient_Report_No, string Original_Out_Patient_Xray_No, string Original_Out_Patient_Scan_No) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Out_Patient_Id_Number));
            if ((Original_Out_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("Original_Out_Patient_Report_No");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Out_Patient_Report_No));
            }
            if ((Original_Out_Patient_Xray_No == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Out_Patient_Xray_No));
            }
            if ((Original_Out_Patient_Scan_No == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Out_Patient_Scan_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Out_Patient_Id_Number, string Out_Patient_Report_No, string Out_Patient_Xray_No, string Out_Patient_Scan_No) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Out_Patient_Id_Number));
            if ((Out_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("Out_Patient_Report_No");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Out_Patient_Report_No));
            }
            if ((Out_Patient_Xray_No == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Out_Patient_Xray_No));
            }
            if ((Out_Patient_Scan_No == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Out_Patient_Scan_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Out_Patient_Id_Number, string Out_Patient_Report_No, string Out_Patient_Xray_No, string Out_Patient_Scan_No, int Original_Out_Patient_Id_Number, string Original_Out_Patient_Report_No, string Original_Out_Patient_Xray_No, string Original_Out_Patient_Scan_No) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Out_Patient_Id_Number));
            if ((Out_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("Out_Patient_Report_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Out_Patient_Report_No));
            }
            if ((Out_Patient_Xray_No == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Out_Patient_Xray_No));
            }
            if ((Out_Patient_Scan_No == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Out_Patient_Scan_No));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Out_Patient_Id_Number));
            if ((Original_Out_Patient_Report_No == null)) {
                throw new global::System.ArgumentNullException("Original_Out_Patient_Report_No");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Out_Patient_Report_No));
            }
            if ((Original_Out_Patient_Xray_No == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Out_Patient_Xray_No));
            }
            if ((Original_Out_Patient_Scan_No == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Out_Patient_Scan_No));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Out_Patient_Xray_No, string Out_Patient_Scan_No, int Original_Out_Patient_Id_Number, string Original_Out_Patient_Report_No, string Original_Out_Patient_Xray_No, string Original_Out_Patient_Scan_No) {
            return this.Update(Original_Out_Patient_Id_Number, Original_Out_Patient_Report_No, Out_Patient_Xray_No, Out_Patient_Scan_No, Original_Out_Patient_Id_Number, Original_Out_Patient_Report_No, Original_Out_Patient_Xray_No, Original_Out_Patient_Scan_No);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ROOMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ROOMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ROOM";
            tableMapping.ColumnMappings.Add("Room_Number", "Room_Number");
            tableMapping.ColumnMappings.Add("Room_Name", "Room_Name");
            tableMapping.ColumnMappings.Add("Room_Type", "Room_Type");
            tableMapping.ColumnMappings.Add("Room_Availability", "Room_Availability");
            tableMapping.ColumnMappings.Add("Ward_Number", "Ward_Number");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ROOM] WHERE (([Room_Number] = @Original_Room_Number) AND ([Roo" +
                "m_Name] = @Original_Room_Name) AND ([Room_Type] = @Original_Room_Type) AND ([Roo" +
                "m_Availability] = @Original_Room_Availability) AND ([Ward_Number] = @Original_Wa" +
                "rd_Number))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Availability", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Availability", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ROOM] ([Room_Number], [Room_Name], [Room_Type], [Room_Availability], [Ward_Number]) VALUES (@Room_Number, @Room_Name, @Room_Type, @Room_Availability, @Ward_Number);
SELECT Room_Number, Room_Name, Room_Type, Room_Availability, Ward_Number FROM ROOM WHERE (Room_Number = @Room_Number)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Availability", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Availability", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ROOM] SET [Room_Number] = @Room_Number, [Room_Name] = @Room_Name, [Room_Type] = @Room_Type, [Room_Availability] = @Room_Availability, [Ward_Number] = @Ward_Number WHERE (([Room_Number] = @Original_Room_Number) AND ([Room_Name] = @Original_Room_Name) AND ([Room_Type] = @Original_Room_Type) AND ([Room_Availability] = @Original_Room_Availability) AND ([Ward_Number] = @Original_Ward_Number));
SELECT Room_Number, Room_Name, Room_Type, Room_Availability, Ward_Number FROM ROOM WHERE (Room_Number = @Room_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Room_Availability", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Availability", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Room_Availability", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Room_Availability", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Room_Number, Room_Name, Room_Type, Room_Availability, Ward_Number FROM dbo" +
                ".ROOM";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.ROOMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.ROOMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.ROOMDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.ROOMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.ROOMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ROOM");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Room_Number, string Original_Room_Name, string Original_Room_Type, string Original_Room_Availability, string Original_Ward_Number) {
            if ((Original_Room_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Room_Number));
            }
            if ((Original_Room_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Room_Name));
            }
            if ((Original_Room_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Room_Type));
            }
            if ((Original_Room_Availability == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Availability");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Room_Availability));
            }
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Ward_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Room_Number, string Room_Name, string Room_Type, string Room_Availability, string Ward_Number) {
            if ((Room_Number == null)) {
                throw new global::System.ArgumentNullException("Room_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Room_Number));
            }
            if ((Room_Name == null)) {
                throw new global::System.ArgumentNullException("Room_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Room_Name));
            }
            if ((Room_Type == null)) {
                throw new global::System.ArgumentNullException("Room_Type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Room_Type));
            }
            if ((Room_Availability == null)) {
                throw new global::System.ArgumentNullException("Room_Availability");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Room_Availability));
            }
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Ward_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Room_Number, string Room_Name, string Room_Type, string Room_Availability, string Ward_Number, string Original_Room_Number, string Original_Room_Name, string Original_Room_Type, string Original_Room_Availability, string Original_Ward_Number) {
            if ((Room_Number == null)) {
                throw new global::System.ArgumentNullException("Room_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Room_Number));
            }
            if ((Room_Name == null)) {
                throw new global::System.ArgumentNullException("Room_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Room_Name));
            }
            if ((Room_Type == null)) {
                throw new global::System.ArgumentNullException("Room_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Room_Type));
            }
            if ((Room_Availability == null)) {
                throw new global::System.ArgumentNullException("Room_Availability");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Room_Availability));
            }
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Ward_Number));
            }
            if ((Original_Room_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Room_Number));
            }
            if ((Original_Room_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Room_Name));
            }
            if ((Original_Room_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Room_Type));
            }
            if ((Original_Room_Availability == null)) {
                throw new global::System.ArgumentNullException("Original_Room_Availability");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Room_Availability));
            }
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Ward_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Room_Name, string Room_Type, string Room_Availability, string Ward_Number, string Original_Room_Number, string Original_Room_Name, string Original_Room_Type, string Original_Room_Availability, string Original_Ward_Number) {
            return this.Update(Original_Room_Number, Room_Name, Room_Type, Room_Availability, Ward_Number, Original_Room_Number, Original_Room_Name, Original_Room_Type, Original_Room_Availability, Original_Ward_Number);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SCAN_ROOMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SCAN_ROOMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SCAN_ROOM";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("S_Staff_Id", "S_Staff_Id");
            tableMapping.ColumnMappings.Add("S_Officer_First_Name", "S_Officer_First_Name");
            tableMapping.ColumnMappings.Add("S_Officer_Middle_Name", "S_Officer_Middle_Name");
            tableMapping.ColumnMappings.Add("S_Officer_Last_Name", "S_Officer_Last_Name");
            tableMapping.ColumnMappings.Add("S_Officer_Address", "S_Officer_Address");
            tableMapping.ColumnMappings.Add("S_Officer_Tele_Number", "S_Officer_Tele_Number");
            tableMapping.ColumnMappings.Add("S_Officer_DOB", "S_Officer_DOB");
            tableMapping.ColumnMappings.Add("S_Officer_Salary", "S_Officer_Salary");
            tableMapping.ColumnMappings.Add("Designation", "Designation");
            tableMapping.ColumnMappings.Add("S_Job_Start_Date", "S_Job_Start_Date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SCAN_ROOM] WHERE (([Number] = @Original_Number) AND ((@IsNull_S_Staff_Id = 1 AND [S_Staff_Id] IS NULL) OR ([S_Staff_Id] = @Original_S_Staff_Id)) AND ([S_Officer_First_Name] = @Original_S_Officer_First_Name) AND ((@IsNull_S_Officer_Middle_Name = 1 AND [S_Officer_Middle_Name] IS NULL) OR ([S_Officer_Middle_Name] = @Original_S_Officer_Middle_Name)) AND ([S_Officer_Last_Name] = @Original_S_Officer_Last_Name) AND ([S_Officer_Address] = @Original_S_Officer_Address) AND ([S_Officer_Tele_Number] = @Original_S_Officer_Tele_Number) AND ([S_Officer_DOB] = @Original_S_Officer_DOB) AND ([S_Officer_Salary] = @Original_S_Officer_Salary) AND ([Designation] = @Original_Designation) AND ([S_Job_Start_Date] = @Original_S_Job_Start_Date))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_S_Staff_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Staff_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_S_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "S_Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Job_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SCAN_ROOM] ([S_Officer_First_Name], [S_Officer_Middle_Name], [S_Officer_Last_Name], [S_Officer_Address], [S_Officer_Tele_Number], [S_Officer_DOB], [S_Officer_Salary], [Designation], [S_Job_Start_Date]) VALUES (@S_Officer_First_Name, @S_Officer_Middle_Name, @S_Officer_Last_Name, @S_Officer_Address, @S_Officer_Tele_Number, @S_Officer_DOB, @S_Officer_Salary, @Designation, @S_Job_Start_Date);
SELECT Number, S_Staff_Id, S_Officer_First_Name, S_Officer_Middle_Name, S_Officer_Last_Name, S_Officer_Address, S_Officer_Tele_Number, S_Officer_DOB, S_Officer_Salary, Designation, S_Job_Start_Date FROM SCAN_ROOM WHERE (S_Staff_Id = @S_Staff_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "S_Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Job_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Staff_Id", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "S_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SCAN_ROOM] SET [S_Officer_First_Name] = @S_Officer_First_Name, [S_Officer_Middle_Name] = @S_Officer_Middle_Name, [S_Officer_Last_Name] = @S_Officer_Last_Name, [S_Officer_Address] = @S_Officer_Address, [S_Officer_Tele_Number] = @S_Officer_Tele_Number, [S_Officer_DOB] = @S_Officer_DOB, [S_Officer_Salary] = @S_Officer_Salary, [Designation] = @Designation, [S_Job_Start_Date] = @S_Job_Start_Date WHERE (([Number] = @Original_Number) AND ((@IsNull_S_Staff_Id = 1 AND [S_Staff_Id] IS NULL) OR ([S_Staff_Id] = @Original_S_Staff_Id)) AND ([S_Officer_First_Name] = @Original_S_Officer_First_Name) AND ((@IsNull_S_Officer_Middle_Name = 1 AND [S_Officer_Middle_Name] IS NULL) OR ([S_Officer_Middle_Name] = @Original_S_Officer_Middle_Name)) AND ([S_Officer_Last_Name] = @Original_S_Officer_Last_Name) AND ([S_Officer_Address] = @Original_S_Officer_Address) AND ([S_Officer_Tele_Number] = @Original_S_Officer_Tele_Number) AND ([S_Officer_DOB] = @Original_S_Officer_DOB) AND ([S_Officer_Salary] = @Original_S_Officer_Salary) AND ([Designation] = @Original_Designation) AND ([S_Job_Start_Date] = @Original_S_Job_Start_Date));
SELECT Number, S_Staff_Id, S_Officer_First_Name, S_Officer_Middle_Name, S_Officer_Last_Name, S_Officer_Address, S_Officer_Tele_Number, S_Officer_DOB, S_Officer_Salary, Designation, S_Job_Start_Date FROM SCAN_ROOM WHERE (S_Staff_Id = @S_Staff_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "S_Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Job_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_S_Staff_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Staff_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_S_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "S_Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Job_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Staff_Id", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "S_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, S_Staff_Id, S_Officer_First_Name, S_Officer_Middle_Name, S_Officer" +
                "_Last_Name, S_Officer_Address, S_Officer_Tele_Number, S_Officer_DOB, S_Officer_S" +
                "alary, Designation, S_Job_Start_Date FROM dbo.SCAN_ROOM";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.SCAN_ROOMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.SCAN_ROOMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.SCAN_ROOMDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.SCAN_ROOMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.SCAN_ROOMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "SCAN_ROOM");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_S_Staff_Id, string Original_S_Officer_First_Name, string Original_S_Officer_Middle_Name, string Original_S_Officer_Last_Name, string Original_S_Officer_Address, int Original_S_Officer_Tele_Number, System.DateTime Original_S_Officer_DOB, decimal Original_S_Officer_Salary, string Original_Designation, System.DateTime Original_S_Job_Start_Date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_S_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_S_Staff_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_S_Staff_Id));
            }
            if ((Original_S_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_S_Officer_First_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_S_Officer_First_Name));
            }
            if ((Original_S_Officer_Middle_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_S_Officer_Middle_Name));
            }
            if ((Original_S_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_S_Officer_Last_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_S_Officer_Last_Name));
            }
            if ((Original_S_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_S_Officer_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_S_Officer_Address));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_S_Officer_Tele_Number));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_S_Officer_DOB));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_S_Officer_Salary));
            if ((Original_Designation == null)) {
                throw new global::System.ArgumentNullException("Original_Designation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Designation));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_S_Job_Start_Date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string S_Officer_First_Name, string S_Officer_Middle_Name, string S_Officer_Last_Name, string S_Officer_Address, int S_Officer_Tele_Number, System.DateTime S_Officer_DOB, decimal S_Officer_Salary, string Designation, System.DateTime S_Job_Start_Date, string S_Staff_Id) {
            if ((S_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("S_Officer_First_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(S_Officer_First_Name));
            }
            if ((S_Officer_Middle_Name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(S_Officer_Middle_Name));
            }
            if ((S_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("S_Officer_Last_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(S_Officer_Last_Name));
            }
            if ((S_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("S_Officer_Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(S_Officer_Address));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(S_Officer_Tele_Number));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(S_Officer_DOB));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(S_Officer_Salary));
            if ((Designation == null)) {
                throw new global::System.ArgumentNullException("Designation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Designation));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(S_Job_Start_Date));
            if ((S_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("S_Staff_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(S_Staff_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string S_Officer_First_Name, 
                    string S_Officer_Middle_Name, 
                    string S_Officer_Last_Name, 
                    string S_Officer_Address, 
                    int S_Officer_Tele_Number, 
                    System.DateTime S_Officer_DOB, 
                    decimal S_Officer_Salary, 
                    string Designation, 
                    System.DateTime S_Job_Start_Date, 
                    int Original_Number, 
                    string Original_S_Staff_Id, 
                    string Original_S_Officer_First_Name, 
                    string Original_S_Officer_Middle_Name, 
                    string Original_S_Officer_Last_Name, 
                    string Original_S_Officer_Address, 
                    int Original_S_Officer_Tele_Number, 
                    System.DateTime Original_S_Officer_DOB, 
                    decimal Original_S_Officer_Salary, 
                    string Original_Designation, 
                    System.DateTime Original_S_Job_Start_Date, 
                    string S_Staff_Id) {
            if ((S_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("S_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(S_Officer_First_Name));
            }
            if ((S_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(S_Officer_Middle_Name));
            }
            if ((S_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("S_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(S_Officer_Last_Name));
            }
            if ((S_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("S_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(S_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(S_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(S_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(S_Officer_Salary));
            if ((Designation == null)) {
                throw new global::System.ArgumentNullException("Designation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Designation));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(S_Job_Start_Date));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Number));
            if ((Original_S_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_S_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_S_Staff_Id));
            }
            if ((Original_S_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_S_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_S_Officer_First_Name));
            }
            if ((Original_S_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_S_Officer_Middle_Name));
            }
            if ((Original_S_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_S_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_S_Officer_Last_Name));
            }
            if ((Original_S_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_S_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_S_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_S_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_S_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_S_Officer_Salary));
            if ((Original_Designation == null)) {
                throw new global::System.ArgumentNullException("Original_Designation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Designation));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_S_Job_Start_Date));
            if ((S_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("S_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(S_Staff_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SPECIALIST_DOCTORTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SPECIALIST_DOCTORTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SPECIALIST_DOCTOR";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Specialist_Doctor_Id", "Specialist_Doctor_Id");
            tableMapping.ColumnMappings.Add("SLMC_Reg_Number", "SLMC_Reg_Number");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("S_Doctor_Name", "S_Doctor_Name");
            tableMapping.ColumnMappings.Add("S_Field", "S_Field");
            tableMapping.ColumnMappings.Add("S_Doctor_Type", "S_Doctor_Type");
            tableMapping.ColumnMappings.Add("S_Doctor_Address", "S_Doctor_Address");
            tableMapping.ColumnMappings.Add("S_Doctor_Tele_Number", "S_Doctor_Tele_Number");
            tableMapping.ColumnMappings.Add("S_Doctor_Monthly_Salary", "S_Doctor_Monthly_Salary");
            tableMapping.ColumnMappings.Add("S_Doctor_Job_Start_Date", "S_Doctor_Job_Start_Date");
            tableMapping.ColumnMappings.Add("Ward_Number", "Ward_Number");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SPECIALIST_DOCTOR] WHERE (([Number] = @Original_Number) AND ((@IsNull_Specialist_Doctor_Id = 1 AND [Specialist_Doctor_Id] IS NULL) OR ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id)) AND ([SLMC_Reg_Number] = @Original_SLMC_Reg_Number) AND ([Title] = @Original_Title) AND ([S_Doctor_Name] = @Original_S_Doctor_Name) AND ([S_Field] = @Original_S_Field) AND ([S_Doctor_Type] = @Original_S_Doctor_Type) AND ([S_Doctor_Address] = @Original_S_Doctor_Address) AND ([S_Doctor_Tele_Number] = @Original_S_Doctor_Tele_Number) AND ([S_Doctor_Monthly_Salary] = @Original_S_Doctor_Monthly_Salary) AND ([S_Doctor_Job_Start_Date] = @Original_S_Doctor_Job_Start_Date) AND ([Ward_Number] = @Original_Ward_Number))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Specialist_Doctor_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SLMC_Reg_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLMC_Reg_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Doctor_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Field", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Field", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Doctor_Type", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Doctor_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Doctor_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Doctor_Monthly_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "S_Doctor_Monthly_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Doctor_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Job_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SPECIALIST_DOCTOR] ([SLMC_Reg_Number], [Title], [S_Doctor_Name], [S_Field], [S_Doctor_Type], [S_Doctor_Address], [S_Doctor_Tele_Number], [S_Doctor_Monthly_Salary], [S_Doctor_Job_Start_Date], [Ward_Number]) VALUES (@SLMC_Reg_Number, @Title, @S_Doctor_Name, @S_Field, @S_Doctor_Type, @S_Doctor_Address, @S_Doctor_Tele_Number, @S_Doctor_Monthly_Salary, @S_Doctor_Job_Start_Date, @Ward_Number);
SELECT Number, Specialist_Doctor_Id, SLMC_Reg_Number, Title, S_Doctor_Name, S_Field, S_Doctor_Type, S_Doctor_Address, S_Doctor_Tele_Number, S_Doctor_Monthly_Salary, S_Doctor_Job_Start_Date, Ward_Number FROM SPECIALIST_DOCTOR WHERE (Specialist_Doctor_Id = @Specialist_Doctor_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SLMC_Reg_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLMC_Reg_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Doctor_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Field", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Field", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Doctor_Type", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Doctor_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Doctor_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Doctor_Monthly_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "S_Doctor_Monthly_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Doctor_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Job_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SPECIALIST_DOCTOR] SET [SLMC_Reg_Number] = @SLMC_Reg_Number, [Title] = @Title, [S_Doctor_Name] = @S_Doctor_Name, [S_Field] = @S_Field, [S_Doctor_Type] = @S_Doctor_Type, [S_Doctor_Address] = @S_Doctor_Address, [S_Doctor_Tele_Number] = @S_Doctor_Tele_Number, [S_Doctor_Monthly_Salary] = @S_Doctor_Monthly_Salary, [S_Doctor_Job_Start_Date] = @S_Doctor_Job_Start_Date, [Ward_Number] = @Ward_Number WHERE (([Number] = @Original_Number) AND ((@IsNull_Specialist_Doctor_Id = 1 AND [Specialist_Doctor_Id] IS NULL) OR ([Specialist_Doctor_Id] = @Original_Specialist_Doctor_Id)) AND ([SLMC_Reg_Number] = @Original_SLMC_Reg_Number) AND ([Title] = @Original_Title) AND ([S_Doctor_Name] = @Original_S_Doctor_Name) AND ([S_Field] = @Original_S_Field) AND ([S_Doctor_Type] = @Original_S_Doctor_Type) AND ([S_Doctor_Address] = @Original_S_Doctor_Address) AND ([S_Doctor_Tele_Number] = @Original_S_Doctor_Tele_Number) AND ([S_Doctor_Monthly_Salary] = @Original_S_Doctor_Monthly_Salary) AND ([S_Doctor_Job_Start_Date] = @Original_S_Doctor_Job_Start_Date) AND ([Ward_Number] = @Original_Ward_Number));
SELECT Number, Specialist_Doctor_Id, SLMC_Reg_Number, Title, S_Doctor_Name, S_Field, S_Doctor_Type, S_Doctor_Address, S_Doctor_Tele_Number, S_Doctor_Monthly_Salary, S_Doctor_Job_Start_Date, Ward_Number FROM SPECIALIST_DOCTOR WHERE (Specialist_Doctor_Id = @Specialist_Doctor_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SLMC_Reg_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLMC_Reg_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Doctor_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Field", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Field", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Doctor_Type", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Doctor_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Doctor_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Doctor_Monthly_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "S_Doctor_Monthly_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_Doctor_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Job_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Specialist_Doctor_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SLMC_Reg_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLMC_Reg_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Doctor_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Field", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Field", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Doctor_Type", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Doctor_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Doctor_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Doctor_Monthly_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "S_Doctor_Monthly_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_Doctor_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_Doctor_Job_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specialist_Doctor_Id", global::System.Data.SqlDbType.VarChar, 9, global::System.Data.ParameterDirection.Input, 0, 0, "Specialist_Doctor_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Specialist_Doctor_Id, SLMC_Reg_Number, Title, S_Doctor_Name, S_Fie" +
                "ld, S_Doctor_Type, S_Doctor_Address, S_Doctor_Tele_Number, S_Doctor_Monthly_Sala" +
                "ry, S_Doctor_Job_Start_Date, Ward_Number FROM dbo.SPECIALIST_DOCTOR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.SPECIALIST_DOCTORDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.SPECIALIST_DOCTORDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.SPECIALIST_DOCTORDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.SPECIALIST_DOCTORDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.SPECIALIST_DOCTORDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "SPECIALIST_DOCTOR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Specialist_Doctor_Id, string Original_SLMC_Reg_Number, string Original_Title, string Original_S_Doctor_Name, string Original_S_Field, string Original_S_Doctor_Type, string Original_S_Doctor_Address, int Original_S_Doctor_Tele_Number, decimal Original_S_Doctor_Monthly_Salary, System.DateTime Original_S_Doctor_Job_Start_Date, string Original_Ward_Number) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((Original_SLMC_Reg_Number == null)) {
                throw new global::System.ArgumentNullException("Original_SLMC_Reg_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_SLMC_Reg_Number));
            }
            if ((Original_Title == null)) {
                throw new global::System.ArgumentNullException("Original_Title");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Title));
            }
            if ((Original_S_Doctor_Name == null)) {
                throw new global::System.ArgumentNullException("Original_S_Doctor_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_S_Doctor_Name));
            }
            if ((Original_S_Field == null)) {
                throw new global::System.ArgumentNullException("Original_S_Field");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_S_Field));
            }
            if ((Original_S_Doctor_Type == null)) {
                throw new global::System.ArgumentNullException("Original_S_Doctor_Type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_S_Doctor_Type));
            }
            if ((Original_S_Doctor_Address == null)) {
                throw new global::System.ArgumentNullException("Original_S_Doctor_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_S_Doctor_Address));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_S_Doctor_Tele_Number));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_S_Doctor_Monthly_Salary));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_S_Doctor_Job_Start_Date));
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Ward_Number));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SLMC_Reg_Number, string Title, string S_Doctor_Name, string S_Field, string S_Doctor_Type, string S_Doctor_Address, int S_Doctor_Tele_Number, decimal S_Doctor_Monthly_Salary, System.DateTime S_Doctor_Job_Start_Date, string Ward_Number, string Specialist_Doctor_Id) {
            if ((SLMC_Reg_Number == null)) {
                throw new global::System.ArgumentNullException("SLMC_Reg_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SLMC_Reg_Number));
            }
            if ((Title == null)) {
                throw new global::System.ArgumentNullException("Title");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Title));
            }
            if ((S_Doctor_Name == null)) {
                throw new global::System.ArgumentNullException("S_Doctor_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(S_Doctor_Name));
            }
            if ((S_Field == null)) {
                throw new global::System.ArgumentNullException("S_Field");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(S_Field));
            }
            if ((S_Doctor_Type == null)) {
                throw new global::System.ArgumentNullException("S_Doctor_Type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(S_Doctor_Type));
            }
            if ((S_Doctor_Address == null)) {
                throw new global::System.ArgumentNullException("S_Doctor_Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(S_Doctor_Address));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(S_Doctor_Tele_Number));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(S_Doctor_Monthly_Salary));
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(S_Doctor_Job_Start_Date));
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Ward_Number));
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Specialist_Doctor_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SLMC_Reg_Number, 
                    string Title, 
                    string S_Doctor_Name, 
                    string S_Field, 
                    string S_Doctor_Type, 
                    string S_Doctor_Address, 
                    int S_Doctor_Tele_Number, 
                    decimal S_Doctor_Monthly_Salary, 
                    System.DateTime S_Doctor_Job_Start_Date, 
                    string Ward_Number, 
                    int Original_Number, 
                    string Original_Specialist_Doctor_Id, 
                    string Original_SLMC_Reg_Number, 
                    string Original_Title, 
                    string Original_S_Doctor_Name, 
                    string Original_S_Field, 
                    string Original_S_Doctor_Type, 
                    string Original_S_Doctor_Address, 
                    int Original_S_Doctor_Tele_Number, 
                    decimal Original_S_Doctor_Monthly_Salary, 
                    System.DateTime Original_S_Doctor_Job_Start_Date, 
                    string Original_Ward_Number, 
                    string Specialist_Doctor_Id) {
            if ((SLMC_Reg_Number == null)) {
                throw new global::System.ArgumentNullException("SLMC_Reg_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SLMC_Reg_Number));
            }
            if ((Title == null)) {
                throw new global::System.ArgumentNullException("Title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Title));
            }
            if ((S_Doctor_Name == null)) {
                throw new global::System.ArgumentNullException("S_Doctor_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(S_Doctor_Name));
            }
            if ((S_Field == null)) {
                throw new global::System.ArgumentNullException("S_Field");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(S_Field));
            }
            if ((S_Doctor_Type == null)) {
                throw new global::System.ArgumentNullException("S_Doctor_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(S_Doctor_Type));
            }
            if ((S_Doctor_Address == null)) {
                throw new global::System.ArgumentNullException("S_Doctor_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(S_Doctor_Address));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(S_Doctor_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(S_Doctor_Monthly_Salary));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(S_Doctor_Job_Start_Date));
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Ward_Number));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Number));
            if ((Original_Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Specialist_Doctor_Id));
            }
            if ((Original_SLMC_Reg_Number == null)) {
                throw new global::System.ArgumentNullException("Original_SLMC_Reg_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_SLMC_Reg_Number));
            }
            if ((Original_Title == null)) {
                throw new global::System.ArgumentNullException("Original_Title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Title));
            }
            if ((Original_S_Doctor_Name == null)) {
                throw new global::System.ArgumentNullException("Original_S_Doctor_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_S_Doctor_Name));
            }
            if ((Original_S_Field == null)) {
                throw new global::System.ArgumentNullException("Original_S_Field");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_S_Field));
            }
            if ((Original_S_Doctor_Type == null)) {
                throw new global::System.ArgumentNullException("Original_S_Doctor_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_S_Doctor_Type));
            }
            if ((Original_S_Doctor_Address == null)) {
                throw new global::System.ArgumentNullException("Original_S_Doctor_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_S_Doctor_Address));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_S_Doctor_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_S_Doctor_Monthly_Salary));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_S_Doctor_Job_Start_Date));
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Ward_Number));
            }
            if ((Specialist_Doctor_Id == null)) {
                throw new global::System.ArgumentNullException("Specialist_Doctor_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Specialist_Doctor_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WARDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public WARDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WARD";
            tableMapping.ColumnMappings.Add("Ward_Number", "Ward_Number");
            tableMapping.ColumnMappings.Add("Ward_Name", "Ward_Name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[WARD] WHERE (([Ward_Number] = @Original_Ward_Number) AND ([War" +
                "d_Name] = @Original_Ward_Name))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[WARD] ([Ward_Number], [Ward_Name]) VALUES (@Ward_Number, @Ward" +
                "_Name);\r\nSELECT Ward_Number, Ward_Name FROM WARD WHERE (Ward_Number = @Ward_Numb" +
                "er)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[WARD] SET [Ward_Number] = @Ward_Number, [Ward_Name] = @Ward_Name WH" +
                "ERE (([Ward_Number] = @Original_Ward_Number) AND ([Ward_Name] = @Original_Ward_N" +
                "ame));\r\nSELECT Ward_Number, Ward_Name FROM WARD WHERE (Ward_Number = @Ward_Numbe" +
                "r)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Ward_Number, Ward_Name FROM dbo.WARD";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.WARDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.WARDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.WARDDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.WARDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.WARDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "WARD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Ward_Number, string Original_Ward_Name) {
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Ward_Number));
            }
            if ((Original_Ward_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Ward_Name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Ward_Number, string Ward_Name) {
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Ward_Number));
            }
            if ((Ward_Name == null)) {
                throw new global::System.ArgumentNullException("Ward_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Ward_Name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Ward_Number, string Ward_Name, string Original_Ward_Number, string Original_Ward_Name) {
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Ward_Number));
            }
            if ((Ward_Name == null)) {
                throw new global::System.ArgumentNullException("Ward_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Ward_Name));
            }
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Ward_Number));
            }
            if ((Original_Ward_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Ward_Name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Ward_Name, string Original_Ward_Number, string Original_Ward_Name) {
            return this.Update(Original_Ward_Number, Ward_Name, Original_Ward_Number, Original_Ward_Name);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WARD_STAFFTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public WARD_STAFFTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WARD_STAFF";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Ward_Staff_Id", "Ward_Staff_Id");
            tableMapping.ColumnMappings.Add("W_Officer_First_Name", "W_Officer_First_Name");
            tableMapping.ColumnMappings.Add("W_Officer_Middle_Name", "W_Officer_Middle_Name");
            tableMapping.ColumnMappings.Add("W_Officer_Last_Name", "W_Officer_Last_Name");
            tableMapping.ColumnMappings.Add("W_Officer_Address", "W_Officer_Address");
            tableMapping.ColumnMappings.Add("W_Officer_Tele_Number", "W_Officer_Tele_Number");
            tableMapping.ColumnMappings.Add("W_Officer_DOB", "W_Officer_DOB");
            tableMapping.ColumnMappings.Add("W_Officer_Salary", "W_Officer_Salary");
            tableMapping.ColumnMappings.Add("Designation", "Designation");
            tableMapping.ColumnMappings.Add("W_Job_Start_Date", "W_Job_Start_Date");
            tableMapping.ColumnMappings.Add("Ward_Number", "Ward_Number");
            tableMapping.ColumnMappings.Add("Roll_Id", "Roll_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[WARD_STAFF] WHERE (([Number] = @Original_Number) AND ((@IsNull_Ward_Staff_Id = 1 AND [Ward_Staff_Id] IS NULL) OR ([Ward_Staff_Id] = @Original_Ward_Staff_Id)) AND ([W_Officer_First_Name] = @Original_W_Officer_First_Name) AND ((@IsNull_W_Officer_Middle_Name = 1 AND [W_Officer_Middle_Name] IS NULL) OR ([W_Officer_Middle_Name] = @Original_W_Officer_Middle_Name)) AND ([W_Officer_Last_Name] = @Original_W_Officer_Last_Name) AND ([W_Officer_Address] = @Original_W_Officer_Address) AND ([W_Officer_Tele_Number] = @Original_W_Officer_Tele_Number) AND ([W_Officer_DOB] = @Original_W_Officer_DOB) AND ([W_Officer_Salary] = @Original_W_Officer_Salary) AND ([Designation] = @Original_Designation) AND ([W_Job_Start_Date] = @Original_W_Job_Start_Date) AND ([Ward_Number] = @Original_Ward_Number) AND ((@IsNull_Roll_Id = 1 AND [Roll_Id] IS NULL) OR ([Roll_Id] = @Original_Roll_Id)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ward_Staff_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Staff_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_W_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "W_Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Job_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Roll_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[WARD_STAFF] ([W_Officer_First_Name], [W_Officer_Middle_Name], [W_Officer_Last_Name], [W_Officer_Address], [W_Officer_Tele_Number], [W_Officer_DOB], [W_Officer_Salary], [Designation], [W_Job_Start_Date], [Ward_Number], [Roll_Id]) VALUES (@W_Officer_First_Name, @W_Officer_Middle_Name, @W_Officer_Last_Name, @W_Officer_Address, @W_Officer_Tele_Number, @W_Officer_DOB, @W_Officer_Salary, @Designation, @W_Job_Start_Date, @Ward_Number, @Roll_Id);
SELECT Number, Ward_Staff_Id, W_Officer_First_Name, W_Officer_Middle_Name, W_Officer_Last_Name, W_Officer_Address, W_Officer_Tele_Number, W_Officer_DOB, W_Officer_Salary, Designation, W_Job_Start_Date, Ward_Number, Roll_Id FROM WARD_STAFF WHERE (Ward_Staff_Id = @Ward_Staff_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "W_Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Job_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Staff_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[WARD_STAFF] SET [W_Officer_First_Name] = @W_Officer_First_Name, [W_" +
                "Officer_Middle_Name] = @W_Officer_Middle_Name, [W_Officer_Last_Name] = @W_Office" +
                "r_Last_Name, [W_Officer_Address] = @W_Officer_Address, [W_Officer_Tele_Number] =" +
                " @W_Officer_Tele_Number, [W_Officer_DOB] = @W_Officer_DOB, [W_Officer_Salary] = " +
                "@W_Officer_Salary, [Designation] = @Designation, [W_Job_Start_Date] = @W_Job_Sta" +
                "rt_Date, [Ward_Number] = @Ward_Number, [Roll_Id] = @Roll_Id WHERE (([Number] = @" +
                "Original_Number) AND ((@IsNull_Ward_Staff_Id = 1 AND [Ward_Staff_Id] IS NULL) OR" +
                " ([Ward_Staff_Id] = @Original_Ward_Staff_Id)) AND ([W_Officer_First_Name] = @Ori" +
                "ginal_W_Officer_First_Name) AND ((@IsNull_W_Officer_Middle_Name = 1 AND [W_Offic" +
                "er_Middle_Name] IS NULL) OR ([W_Officer_Middle_Name] = @Original_W_Officer_Middl" +
                "e_Name)) AND ([W_Officer_Last_Name] = @Original_W_Officer_Last_Name) AND ([W_Off" +
                "icer_Address] = @Original_W_Officer_Address) AND ([W_Officer_Tele_Number] = @Ori" +
                "ginal_W_Officer_Tele_Number) AND ([W_Officer_DOB] = @Original_W_Officer_DOB) AND" +
                " ([W_Officer_Salary] = @Original_W_Officer_Salary) AND ([Designation] = @Origina" +
                "l_Designation) AND ([W_Job_Start_Date] = @Original_W_Job_Start_Date) AND ([Ward_" +
                "Number] = @Original_Ward_Number) AND ((@IsNull_Roll_Id = 1 AND [Roll_Id] IS NULL" +
                ") OR ([Roll_Id] = @Original_Roll_Id)));\r\nSELECT Number, Ward_Staff_Id, W_Officer" +
                "_First_Name, W_Officer_Middle_Name, W_Officer_Last_Name, W_Officer_Address, W_Of" +
                "ficer_Tele_Number, W_Officer_DOB, W_Officer_Salary, Designation, W_Job_Start_Dat" +
                "e, Ward_Number, Roll_Id FROM WARD_STAFF WHERE (Ward_Staff_Id = @Ward_Staff_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "W_Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Job_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ward_Staff_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Staff_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_W_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "W_Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W_Job_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ward_Number", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Roll_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Roll_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Roll_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ward_Staff_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Ward_Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Ward_Staff_Id, W_Officer_First_Name, W_Officer_Middle_Name, W_Offi" +
                "cer_Last_Name, W_Officer_Address, W_Officer_Tele_Number, W_Officer_DOB, W_Office" +
                "r_Salary, Designation, W_Job_Start_Date, Ward_Number, Roll_Id FROM dbo.WARD_STAF" +
                "F";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.WARD_STAFFDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.WARD_STAFFDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.WARD_STAFFDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.WARD_STAFFDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.WARD_STAFFDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "WARD_STAFF");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Ward_Staff_Id, string Original_W_Officer_First_Name, string Original_W_Officer_Middle_Name, string Original_W_Officer_Last_Name, string Original_W_Officer_Address, int Original_W_Officer_Tele_Number, System.DateTime Original_W_Officer_DOB, decimal Original_W_Officer_Salary, string Original_Designation, System.DateTime Original_W_Job_Start_Date, string Original_Ward_Number, string Original_Roll_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Ward_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Staff_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Ward_Staff_Id));
            }
            if ((Original_W_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_W_Officer_First_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_W_Officer_First_Name));
            }
            if ((Original_W_Officer_Middle_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_W_Officer_Middle_Name));
            }
            if ((Original_W_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_W_Officer_Last_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_W_Officer_Last_Name));
            }
            if ((Original_W_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_W_Officer_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_W_Officer_Address));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_W_Officer_Tele_Number));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_W_Officer_DOB));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_W_Officer_Salary));
            if ((Original_Designation == null)) {
                throw new global::System.ArgumentNullException("Original_Designation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Designation));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_W_Job_Start_Date));
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Ward_Number));
            }
            if ((Original_Roll_Id == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Roll_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string W_Officer_First_Name, string W_Officer_Middle_Name, string W_Officer_Last_Name, string W_Officer_Address, int W_Officer_Tele_Number, System.DateTime W_Officer_DOB, decimal W_Officer_Salary, string Designation, System.DateTime W_Job_Start_Date, string Ward_Number, string Roll_Id, string Ward_Staff_Id) {
            if ((W_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("W_Officer_First_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(W_Officer_First_Name));
            }
            if ((W_Officer_Middle_Name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(W_Officer_Middle_Name));
            }
            if ((W_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("W_Officer_Last_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(W_Officer_Last_Name));
            }
            if ((W_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("W_Officer_Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(W_Officer_Address));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(W_Officer_Tele_Number));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(W_Officer_DOB));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(W_Officer_Salary));
            if ((Designation == null)) {
                throw new global::System.ArgumentNullException("Designation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Designation));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(W_Job_Start_Date));
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Ward_Number));
            }
            if ((Roll_Id == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Roll_Id));
            }
            if ((Ward_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Ward_Staff_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Ward_Staff_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string W_Officer_First_Name, 
                    string W_Officer_Middle_Name, 
                    string W_Officer_Last_Name, 
                    string W_Officer_Address, 
                    int W_Officer_Tele_Number, 
                    System.DateTime W_Officer_DOB, 
                    decimal W_Officer_Salary, 
                    string Designation, 
                    System.DateTime W_Job_Start_Date, 
                    string Ward_Number, 
                    string Roll_Id, 
                    int Original_Number, 
                    string Original_Ward_Staff_Id, 
                    string Original_W_Officer_First_Name, 
                    string Original_W_Officer_Middle_Name, 
                    string Original_W_Officer_Last_Name, 
                    string Original_W_Officer_Address, 
                    int Original_W_Officer_Tele_Number, 
                    System.DateTime Original_W_Officer_DOB, 
                    decimal Original_W_Officer_Salary, 
                    string Original_Designation, 
                    System.DateTime Original_W_Job_Start_Date, 
                    string Original_Ward_Number, 
                    string Original_Roll_Id, 
                    string Ward_Staff_Id) {
            if ((W_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("W_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(W_Officer_First_Name));
            }
            if ((W_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(W_Officer_Middle_Name));
            }
            if ((W_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("W_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(W_Officer_Last_Name));
            }
            if ((W_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("W_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(W_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(W_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(W_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(W_Officer_Salary));
            if ((Designation == null)) {
                throw new global::System.ArgumentNullException("Designation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Designation));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(W_Job_Start_Date));
            if ((Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Ward_Number));
            }
            if ((Roll_Id == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Roll_Id));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Number));
            if ((Original_Ward_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Ward_Staff_Id));
            }
            if ((Original_W_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_W_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_W_Officer_First_Name));
            }
            if ((Original_W_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_W_Officer_Middle_Name));
            }
            if ((Original_W_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_W_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_W_Officer_Last_Name));
            }
            if ((Original_W_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_W_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_W_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_W_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_W_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_W_Officer_Salary));
            if ((Original_Designation == null)) {
                throw new global::System.ArgumentNullException("Original_Designation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Designation));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_W_Job_Start_Date));
            if ((Original_Ward_Number == null)) {
                throw new global::System.ArgumentNullException("Original_Ward_Number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Ward_Number));
            }
            if ((Original_Roll_Id == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Roll_Id));
            }
            if ((Ward_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Ward_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Ward_Staff_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class X_RAY_ROOMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public X_RAY_ROOMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "X_RAY_ROOM";
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("Staff_Id", "Staff_Id");
            tableMapping.ColumnMappings.Add("X_Officer_First_Name", "X_Officer_First_Name");
            tableMapping.ColumnMappings.Add("X_Officer_Middle_Name", "X_Officer_Middle_Name");
            tableMapping.ColumnMappings.Add("X_Officer_Last_Name", "X_Officer_Last_Name");
            tableMapping.ColumnMappings.Add("X_Officer_Address", "X_Officer_Address");
            tableMapping.ColumnMappings.Add("X_Officer_Tele_Number", "X_Officer_Tele_Number");
            tableMapping.ColumnMappings.Add("X_Officer_DOB", "X_Officer_DOB");
            tableMapping.ColumnMappings.Add("X_Officer_Salary", "X_Officer_Salary");
            tableMapping.ColumnMappings.Add("Designation", "Designation");
            tableMapping.ColumnMappings.Add("X_Job_Start_Date", "X_Job_Start_Date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[X_RAY_ROOM] WHERE (([Number] = @Original_Number) AND ((@IsNull_Staff_Id = 1 AND [Staff_Id] IS NULL) OR ([Staff_Id] = @Original_Staff_Id)) AND ([X_Officer_First_Name] = @Original_X_Officer_First_Name) AND ((@IsNull_X_Officer_Middle_Name = 1 AND [X_Officer_Middle_Name] IS NULL) OR ([X_Officer_Middle_Name] = @Original_X_Officer_Middle_Name)) AND ([X_Officer_Last_Name] = @Original_X_Officer_Last_Name) AND ([X_Officer_Address] = @Original_X_Officer_Address) AND ([X_Officer_Tele_Number] = @Original_X_Officer_Tele_Number) AND ([X_Officer_DOB] = @Original_X_Officer_DOB) AND ([X_Officer_Salary] = @Original_X_Officer_Salary) AND ([Designation] = @Original_Designation) AND ([X_Job_Start_Date] = @Original_X_Job_Start_Date))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Staff_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Staff_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_X_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "X_Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Job_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[X_RAY_ROOM] ([X_Officer_First_Name], [X_Officer_Middle_Name], [X_Officer_Last_Name], [X_Officer_Address], [X_Officer_Tele_Number], [X_Officer_DOB], [X_Officer_Salary], [Designation], [X_Job_Start_Date]) VALUES (@X_Officer_First_Name, @X_Officer_Middle_Name, @X_Officer_Last_Name, @X_Officer_Address, @X_Officer_Tele_Number, @X_Officer_DOB, @X_Officer_Salary, @Designation, @X_Job_Start_Date);
SELECT Number, Staff_Id, X_Officer_First_Name, X_Officer_Middle_Name, X_Officer_Last_Name, X_Officer_Address, X_Officer_Tele_Number, X_Officer_DOB, X_Officer_Salary, Designation, X_Job_Start_Date FROM X_RAY_ROOM WHERE (Staff_Id = @Staff_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "X_Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Job_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Staff_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[X_RAY_ROOM] SET [X_Officer_First_Name] = @X_Officer_First_Name, [X_Officer_Middle_Name] = @X_Officer_Middle_Name, [X_Officer_Last_Name] = @X_Officer_Last_Name, [X_Officer_Address] = @X_Officer_Address, [X_Officer_Tele_Number] = @X_Officer_Tele_Number, [X_Officer_DOB] = @X_Officer_DOB, [X_Officer_Salary] = @X_Officer_Salary, [Designation] = @Designation, [X_Job_Start_Date] = @X_Job_Start_Date WHERE (([Number] = @Original_Number) AND ((@IsNull_Staff_Id = 1 AND [Staff_Id] IS NULL) OR ([Staff_Id] = @Original_Staff_Id)) AND ([X_Officer_First_Name] = @Original_X_Officer_First_Name) AND ((@IsNull_X_Officer_Middle_Name = 1 AND [X_Officer_Middle_Name] IS NULL) OR ([X_Officer_Middle_Name] = @Original_X_Officer_Middle_Name)) AND ([X_Officer_Last_Name] = @Original_X_Officer_Last_Name) AND ([X_Officer_Address] = @Original_X_Officer_Address) AND ([X_Officer_Tele_Number] = @Original_X_Officer_Tele_Number) AND ([X_Officer_DOB] = @Original_X_Officer_DOB) AND ([X_Officer_Salary] = @Original_X_Officer_Salary) AND ([Designation] = @Original_Designation) AND ([X_Job_Start_Date] = @Original_X_Job_Start_Date));
SELECT Number, Staff_Id, X_Officer_First_Name, X_Officer_Middle_Name, X_Officer_Last_Name, X_Officer_Address, X_Officer_Tele_Number, X_Officer_DOB, X_Officer_Salary, Designation, X_Job_Start_Date FROM X_RAY_ROOM WHERE (Staff_Id = @Staff_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_First_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Middle_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Last_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Tele_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "X_Officer_Salary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@X_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Job_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Staff_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Staff_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Staff_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Staff_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Officer_First_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_First_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_X_Officer_Middle_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Officer_Middle_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Middle_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Officer_Last_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Last_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Officer_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Officer_Tele_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_Tele_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Officer_DOB", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Officer_DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Officer_Salary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "X_Officer_Salary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_X_Job_Start_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "X_Job_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Staff_Id", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Staff_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Health_Street.Properties.Settings.Default.GUI_Hospital_Management_SystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Number, Staff_Id, X_Officer_First_Name, X_Officer_Middle_Name, X_Officer_L" +
                "ast_Name, X_Officer_Address, X_Officer_Tele_Number, X_Officer_DOB, X_Officer_Sal" +
                "ary, Designation, X_Job_Start_Date FROM dbo.X_RAY_ROOM";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GUI_Hospital_Management_SystemDataSet1.X_RAY_ROOMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GUI_Hospital_Management_SystemDataSet1.X_RAY_ROOMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GUI_Hospital_Management_SystemDataSet1.X_RAY_ROOMDataTable dataTable = new GUI_Hospital_Management_SystemDataSet1.X_RAY_ROOMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1.X_RAY_ROOMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "X_RAY_ROOM");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Number, string Original_Staff_Id, string Original_X_Officer_First_Name, string Original_X_Officer_Middle_Name, string Original_X_Officer_Last_Name, string Original_X_Officer_Address, int Original_X_Officer_Tele_Number, System.DateTime Original_X_Officer_DOB, decimal Original_X_Officer_Salary, string Original_Designation, System.DateTime Original_X_Job_Start_Date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Number));
            if ((Original_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Staff_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Staff_Id));
            }
            if ((Original_X_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_X_Officer_First_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_X_Officer_First_Name));
            }
            if ((Original_X_Officer_Middle_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_X_Officer_Middle_Name));
            }
            if ((Original_X_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_X_Officer_Last_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_X_Officer_Last_Name));
            }
            if ((Original_X_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_X_Officer_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_X_Officer_Address));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_X_Officer_Tele_Number));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_X_Officer_DOB));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_X_Officer_Salary));
            if ((Original_Designation == null)) {
                throw new global::System.ArgumentNullException("Original_Designation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Designation));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_X_Job_Start_Date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string X_Officer_First_Name, string X_Officer_Middle_Name, string X_Officer_Last_Name, string X_Officer_Address, int X_Officer_Tele_Number, System.DateTime X_Officer_DOB, decimal X_Officer_Salary, string Designation, System.DateTime X_Job_Start_Date, string Staff_Id) {
            if ((X_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("X_Officer_First_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(X_Officer_First_Name));
            }
            if ((X_Officer_Middle_Name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(X_Officer_Middle_Name));
            }
            if ((X_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("X_Officer_Last_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(X_Officer_Last_Name));
            }
            if ((X_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("X_Officer_Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(X_Officer_Address));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(X_Officer_Tele_Number));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(X_Officer_DOB));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(X_Officer_Salary));
            if ((Designation == null)) {
                throw new global::System.ArgumentNullException("Designation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Designation));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(X_Job_Start_Date));
            if ((Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Staff_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Staff_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string X_Officer_First_Name, 
                    string X_Officer_Middle_Name, 
                    string X_Officer_Last_Name, 
                    string X_Officer_Address, 
                    int X_Officer_Tele_Number, 
                    System.DateTime X_Officer_DOB, 
                    decimal X_Officer_Salary, 
                    string Designation, 
                    System.DateTime X_Job_Start_Date, 
                    int Original_Number, 
                    string Original_Staff_Id, 
                    string Original_X_Officer_First_Name, 
                    string Original_X_Officer_Middle_Name, 
                    string Original_X_Officer_Last_Name, 
                    string Original_X_Officer_Address, 
                    int Original_X_Officer_Tele_Number, 
                    System.DateTime Original_X_Officer_DOB, 
                    decimal Original_X_Officer_Salary, 
                    string Original_Designation, 
                    System.DateTime Original_X_Job_Start_Date, 
                    string Staff_Id) {
            if ((X_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("X_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(X_Officer_First_Name));
            }
            if ((X_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(X_Officer_Middle_Name));
            }
            if ((X_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("X_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(X_Officer_Last_Name));
            }
            if ((X_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("X_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(X_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(X_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(X_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(X_Officer_Salary));
            if ((Designation == null)) {
                throw new global::System.ArgumentNullException("Designation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Designation));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(X_Job_Start_Date));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Number));
            if ((Original_Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Staff_Id));
            }
            if ((Original_X_Officer_First_Name == null)) {
                throw new global::System.ArgumentNullException("Original_X_Officer_First_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_X_Officer_First_Name));
            }
            if ((Original_X_Officer_Middle_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_X_Officer_Middle_Name));
            }
            if ((Original_X_Officer_Last_Name == null)) {
                throw new global::System.ArgumentNullException("Original_X_Officer_Last_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_X_Officer_Last_Name));
            }
            if ((Original_X_Officer_Address == null)) {
                throw new global::System.ArgumentNullException("Original_X_Officer_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_X_Officer_Address));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_X_Officer_Tele_Number));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_X_Officer_DOB));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_X_Officer_Salary));
            if ((Original_Designation == null)) {
                throw new global::System.ArgumentNullException("Original_Designation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Designation));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_X_Job_Start_Date));
            if ((Staff_Id == null)) {
                throw new global::System.ArgumentNullException("Staff_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Staff_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ACCOUNTTableAdapter _aCCOUNTTableAdapter;
        
        private ADMISSION_OFFICERTableAdapter _aDMISSION_OFFICERTableAdapter;
        
        private BILLTableAdapter _bILLTableAdapter;
        
        private BILLING_OFFICERTableAdapter _bILLING_OFFICERTableAdapter;
        
        private CHANNELING_OFFICERTableAdapter _cHANNELING_OFFICERTableAdapter;
        
        private CUSTOMERTableAdapter _cUSTOMERTableAdapter;
        
        private DRUGTableAdapter _dRUGTableAdapter;
        
        private DRUG_ORDERTableAdapter _dRUG_ORDERTableAdapter;
        
        private DRUG_SUPPLIERTableAdapter _dRUG_SUPPLIERTableAdapter;
        
        private GUARDIANTableAdapter _gUARDIANTableAdapter;
        
        private HOSPITAL_CUSTOMERTableAdapter _hOSPITAL_CUSTOMERTableAdapter;
        
        private IN_PATIENTTableAdapter _iN_PATIENTTableAdapter;
        
        private IN_PATIENT_MEDICINETableAdapter _iN_PATIENT_MEDICINETableAdapter;
        
        private IN_PATIENT_REPORTTableAdapter _iN_PATIENT_REPORTTableAdapter;
        
        private IN_PATIENT_SCANTableAdapter _iN_PATIENT_SCANTableAdapter;
        
        private IN_PATIENT_XRAYTableAdapter _iN_PATIENT_XRAYTableAdapter;
        
        private IN_SAMPLETableAdapter _iN_SAMPLETableAdapter;
        
        private LABORATORY_STAFFTableAdapter _lABORATORY_STAFFTableAdapter;
        
        private LOG_IN_DETAILTableAdapter _lOG_IN_DETAILTableAdapter;
        
        private LOG_IN_USERTableAdapter _lOG_IN_USERTableAdapter;
        
        private ORGANIZATIONTableAdapter _oRGANIZATIONTableAdapter;
        
        private OUT_PATIENTTableAdapter _oUT_PATIENTTableAdapter;
        
        private OUT_PATIENT_MEDICINETableAdapter _oUT_PATIENT_MEDICINETableAdapter;
        
        private OUT_PATIENT_REPORTTableAdapter _oUT_PATIENT_REPORTTableAdapter;
        
        private OUT_PATIENT_SCANTableAdapter _oUT_PATIENT_SCANTableAdapter;
        
        private OUT_PATIENT_XRAYTableAdapter _oUT_PATIENT_XRAYTableAdapter;
        
        private OUT_SAMPLETableAdapter _oUT_SAMPLETableAdapter;
        
        private PATIENT_APPOINTMENT_DETAILSTableAdapter _pATIENT_APPOINTMENT_DETAILSTableAdapter;
        
        private PATIENT_PRIVATE_DETAILTableAdapter _pATIENT_PRIVATE_DETAILTableAdapter;
        
        private PHARMACY_MEDICINESTableAdapter _pHARMACY_MEDICINESTableAdapter;
        
        private PHARMACY_STAFFTableAdapter _pHARMACY_STAFFTableAdapter;
        
        private QUALIFICATIONTableAdapter _qUALIFICATIONTableAdapter;
        
        private REPORT_IN_PATIENTTableAdapter _rEPORT_IN_PATIENTTableAdapter;
        
        private REPORT_OUT_PATIENTTableAdapter _rEPORT_OUT_PATIENTTableAdapter;
        
        private ROOMTableAdapter _rOOMTableAdapter;
        
        private SCAN_ROOMTableAdapter _sCAN_ROOMTableAdapter;
        
        private SPECIALIST_DOCTORTableAdapter _sPECIALIST_DOCTORTableAdapter;
        
        private WARDTableAdapter _wARDTableAdapter;
        
        private WARD_STAFFTableAdapter _wARD_STAFFTableAdapter;
        
        private X_RAY_ROOMTableAdapter _x_RAY_ROOMTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ACCOUNTTableAdapter ACCOUNTTableAdapter {
            get {
                return this._aCCOUNTTableAdapter;
            }
            set {
                this._aCCOUNTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ADMISSION_OFFICERTableAdapter ADMISSION_OFFICERTableAdapter {
            get {
                return this._aDMISSION_OFFICERTableAdapter;
            }
            set {
                this._aDMISSION_OFFICERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BILLTableAdapter BILLTableAdapter {
            get {
                return this._bILLTableAdapter;
            }
            set {
                this._bILLTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BILLING_OFFICERTableAdapter BILLING_OFFICERTableAdapter {
            get {
                return this._bILLING_OFFICERTableAdapter;
            }
            set {
                this._bILLING_OFFICERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CHANNELING_OFFICERTableAdapter CHANNELING_OFFICERTableAdapter {
            get {
                return this._cHANNELING_OFFICERTableAdapter;
            }
            set {
                this._cHANNELING_OFFICERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CUSTOMERTableAdapter CUSTOMERTableAdapter {
            get {
                return this._cUSTOMERTableAdapter;
            }
            set {
                this._cUSTOMERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DRUGTableAdapter DRUGTableAdapter {
            get {
                return this._dRUGTableAdapter;
            }
            set {
                this._dRUGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DRUG_ORDERTableAdapter DRUG_ORDERTableAdapter {
            get {
                return this._dRUG_ORDERTableAdapter;
            }
            set {
                this._dRUG_ORDERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DRUG_SUPPLIERTableAdapter DRUG_SUPPLIERTableAdapter {
            get {
                return this._dRUG_SUPPLIERTableAdapter;
            }
            set {
                this._dRUG_SUPPLIERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public GUARDIANTableAdapter GUARDIANTableAdapter {
            get {
                return this._gUARDIANTableAdapter;
            }
            set {
                this._gUARDIANTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public HOSPITAL_CUSTOMERTableAdapter HOSPITAL_CUSTOMERTableAdapter {
            get {
                return this._hOSPITAL_CUSTOMERTableAdapter;
            }
            set {
                this._hOSPITAL_CUSTOMERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public IN_PATIENTTableAdapter IN_PATIENTTableAdapter {
            get {
                return this._iN_PATIENTTableAdapter;
            }
            set {
                this._iN_PATIENTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public IN_PATIENT_MEDICINETableAdapter IN_PATIENT_MEDICINETableAdapter {
            get {
                return this._iN_PATIENT_MEDICINETableAdapter;
            }
            set {
                this._iN_PATIENT_MEDICINETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public IN_PATIENT_REPORTTableAdapter IN_PATIENT_REPORTTableAdapter {
            get {
                return this._iN_PATIENT_REPORTTableAdapter;
            }
            set {
                this._iN_PATIENT_REPORTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public IN_PATIENT_SCANTableAdapter IN_PATIENT_SCANTableAdapter {
            get {
                return this._iN_PATIENT_SCANTableAdapter;
            }
            set {
                this._iN_PATIENT_SCANTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public IN_PATIENT_XRAYTableAdapter IN_PATIENT_XRAYTableAdapter {
            get {
                return this._iN_PATIENT_XRAYTableAdapter;
            }
            set {
                this._iN_PATIENT_XRAYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public IN_SAMPLETableAdapter IN_SAMPLETableAdapter {
            get {
                return this._iN_SAMPLETableAdapter;
            }
            set {
                this._iN_SAMPLETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LABORATORY_STAFFTableAdapter LABORATORY_STAFFTableAdapter {
            get {
                return this._lABORATORY_STAFFTableAdapter;
            }
            set {
                this._lABORATORY_STAFFTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LOG_IN_DETAILTableAdapter LOG_IN_DETAILTableAdapter {
            get {
                return this._lOG_IN_DETAILTableAdapter;
            }
            set {
                this._lOG_IN_DETAILTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LOG_IN_USERTableAdapter LOG_IN_USERTableAdapter {
            get {
                return this._lOG_IN_USERTableAdapter;
            }
            set {
                this._lOG_IN_USERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ORGANIZATIONTableAdapter ORGANIZATIONTableAdapter {
            get {
                return this._oRGANIZATIONTableAdapter;
            }
            set {
                this._oRGANIZATIONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OUT_PATIENTTableAdapter OUT_PATIENTTableAdapter {
            get {
                return this._oUT_PATIENTTableAdapter;
            }
            set {
                this._oUT_PATIENTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OUT_PATIENT_MEDICINETableAdapter OUT_PATIENT_MEDICINETableAdapter {
            get {
                return this._oUT_PATIENT_MEDICINETableAdapter;
            }
            set {
                this._oUT_PATIENT_MEDICINETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OUT_PATIENT_REPORTTableAdapter OUT_PATIENT_REPORTTableAdapter {
            get {
                return this._oUT_PATIENT_REPORTTableAdapter;
            }
            set {
                this._oUT_PATIENT_REPORTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OUT_PATIENT_SCANTableAdapter OUT_PATIENT_SCANTableAdapter {
            get {
                return this._oUT_PATIENT_SCANTableAdapter;
            }
            set {
                this._oUT_PATIENT_SCANTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OUT_PATIENT_XRAYTableAdapter OUT_PATIENT_XRAYTableAdapter {
            get {
                return this._oUT_PATIENT_XRAYTableAdapter;
            }
            set {
                this._oUT_PATIENT_XRAYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OUT_SAMPLETableAdapter OUT_SAMPLETableAdapter {
            get {
                return this._oUT_SAMPLETableAdapter;
            }
            set {
                this._oUT_SAMPLETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PATIENT_APPOINTMENT_DETAILSTableAdapter PATIENT_APPOINTMENT_DETAILSTableAdapter {
            get {
                return this._pATIENT_APPOINTMENT_DETAILSTableAdapter;
            }
            set {
                this._pATIENT_APPOINTMENT_DETAILSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PATIENT_PRIVATE_DETAILTableAdapter PATIENT_PRIVATE_DETAILTableAdapter {
            get {
                return this._pATIENT_PRIVATE_DETAILTableAdapter;
            }
            set {
                this._pATIENT_PRIVATE_DETAILTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PHARMACY_MEDICINESTableAdapter PHARMACY_MEDICINESTableAdapter {
            get {
                return this._pHARMACY_MEDICINESTableAdapter;
            }
            set {
                this._pHARMACY_MEDICINESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PHARMACY_STAFFTableAdapter PHARMACY_STAFFTableAdapter {
            get {
                return this._pHARMACY_STAFFTableAdapter;
            }
            set {
                this._pHARMACY_STAFFTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public QUALIFICATIONTableAdapter QUALIFICATIONTableAdapter {
            get {
                return this._qUALIFICATIONTableAdapter;
            }
            set {
                this._qUALIFICATIONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public REPORT_IN_PATIENTTableAdapter REPORT_IN_PATIENTTableAdapter {
            get {
                return this._rEPORT_IN_PATIENTTableAdapter;
            }
            set {
                this._rEPORT_IN_PATIENTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public REPORT_OUT_PATIENTTableAdapter REPORT_OUT_PATIENTTableAdapter {
            get {
                return this._rEPORT_OUT_PATIENTTableAdapter;
            }
            set {
                this._rEPORT_OUT_PATIENTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ROOMTableAdapter ROOMTableAdapter {
            get {
                return this._rOOMTableAdapter;
            }
            set {
                this._rOOMTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SCAN_ROOMTableAdapter SCAN_ROOMTableAdapter {
            get {
                return this._sCAN_ROOMTableAdapter;
            }
            set {
                this._sCAN_ROOMTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SPECIALIST_DOCTORTableAdapter SPECIALIST_DOCTORTableAdapter {
            get {
                return this._sPECIALIST_DOCTORTableAdapter;
            }
            set {
                this._sPECIALIST_DOCTORTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public WARDTableAdapter WARDTableAdapter {
            get {
                return this._wARDTableAdapter;
            }
            set {
                this._wARDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public WARD_STAFFTableAdapter WARD_STAFFTableAdapter {
            get {
                return this._wARD_STAFFTableAdapter;
            }
            set {
                this._wARD_STAFFTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public X_RAY_ROOMTableAdapter X_RAY_ROOMTableAdapter {
            get {
                return this._x_RAY_ROOMTableAdapter;
            }
            set {
                this._x_RAY_ROOMTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._aCCOUNTTableAdapter != null) 
                            && (this._aCCOUNTTableAdapter.Connection != null))) {
                    return this._aCCOUNTTableAdapter.Connection;
                }
                if (((this._aDMISSION_OFFICERTableAdapter != null) 
                            && (this._aDMISSION_OFFICERTableAdapter.Connection != null))) {
                    return this._aDMISSION_OFFICERTableAdapter.Connection;
                }
                if (((this._bILLTableAdapter != null) 
                            && (this._bILLTableAdapter.Connection != null))) {
                    return this._bILLTableAdapter.Connection;
                }
                if (((this._bILLING_OFFICERTableAdapter != null) 
                            && (this._bILLING_OFFICERTableAdapter.Connection != null))) {
                    return this._bILLING_OFFICERTableAdapter.Connection;
                }
                if (((this._cHANNELING_OFFICERTableAdapter != null) 
                            && (this._cHANNELING_OFFICERTableAdapter.Connection != null))) {
                    return this._cHANNELING_OFFICERTableAdapter.Connection;
                }
                if (((this._cUSTOMERTableAdapter != null) 
                            && (this._cUSTOMERTableAdapter.Connection != null))) {
                    return this._cUSTOMERTableAdapter.Connection;
                }
                if (((this._dRUGTableAdapter != null) 
                            && (this._dRUGTableAdapter.Connection != null))) {
                    return this._dRUGTableAdapter.Connection;
                }
                if (((this._dRUG_ORDERTableAdapter != null) 
                            && (this._dRUG_ORDERTableAdapter.Connection != null))) {
                    return this._dRUG_ORDERTableAdapter.Connection;
                }
                if (((this._dRUG_SUPPLIERTableAdapter != null) 
                            && (this._dRUG_SUPPLIERTableAdapter.Connection != null))) {
                    return this._dRUG_SUPPLIERTableAdapter.Connection;
                }
                if (((this._gUARDIANTableAdapter != null) 
                            && (this._gUARDIANTableAdapter.Connection != null))) {
                    return this._gUARDIANTableAdapter.Connection;
                }
                if (((this._hOSPITAL_CUSTOMERTableAdapter != null) 
                            && (this._hOSPITAL_CUSTOMERTableAdapter.Connection != null))) {
                    return this._hOSPITAL_CUSTOMERTableAdapter.Connection;
                }
                if (((this._iN_PATIENTTableAdapter != null) 
                            && (this._iN_PATIENTTableAdapter.Connection != null))) {
                    return this._iN_PATIENTTableAdapter.Connection;
                }
                if (((this._iN_PATIENT_MEDICINETableAdapter != null) 
                            && (this._iN_PATIENT_MEDICINETableAdapter.Connection != null))) {
                    return this._iN_PATIENT_MEDICINETableAdapter.Connection;
                }
                if (((this._iN_PATIENT_REPORTTableAdapter != null) 
                            && (this._iN_PATIENT_REPORTTableAdapter.Connection != null))) {
                    return this._iN_PATIENT_REPORTTableAdapter.Connection;
                }
                if (((this._iN_PATIENT_SCANTableAdapter != null) 
                            && (this._iN_PATIENT_SCANTableAdapter.Connection != null))) {
                    return this._iN_PATIENT_SCANTableAdapter.Connection;
                }
                if (((this._iN_PATIENT_XRAYTableAdapter != null) 
                            && (this._iN_PATIENT_XRAYTableAdapter.Connection != null))) {
                    return this._iN_PATIENT_XRAYTableAdapter.Connection;
                }
                if (((this._iN_SAMPLETableAdapter != null) 
                            && (this._iN_SAMPLETableAdapter.Connection != null))) {
                    return this._iN_SAMPLETableAdapter.Connection;
                }
                if (((this._lABORATORY_STAFFTableAdapter != null) 
                            && (this._lABORATORY_STAFFTableAdapter.Connection != null))) {
                    return this._lABORATORY_STAFFTableAdapter.Connection;
                }
                if (((this._lOG_IN_DETAILTableAdapter != null) 
                            && (this._lOG_IN_DETAILTableAdapter.Connection != null))) {
                    return this._lOG_IN_DETAILTableAdapter.Connection;
                }
                if (((this._lOG_IN_USERTableAdapter != null) 
                            && (this._lOG_IN_USERTableAdapter.Connection != null))) {
                    return this._lOG_IN_USERTableAdapter.Connection;
                }
                if (((this._oRGANIZATIONTableAdapter != null) 
                            && (this._oRGANIZATIONTableAdapter.Connection != null))) {
                    return this._oRGANIZATIONTableAdapter.Connection;
                }
                if (((this._oUT_PATIENTTableAdapter != null) 
                            && (this._oUT_PATIENTTableAdapter.Connection != null))) {
                    return this._oUT_PATIENTTableAdapter.Connection;
                }
                if (((this._oUT_PATIENT_MEDICINETableAdapter != null) 
                            && (this._oUT_PATIENT_MEDICINETableAdapter.Connection != null))) {
                    return this._oUT_PATIENT_MEDICINETableAdapter.Connection;
                }
                if (((this._oUT_PATIENT_REPORTTableAdapter != null) 
                            && (this._oUT_PATIENT_REPORTTableAdapter.Connection != null))) {
                    return this._oUT_PATIENT_REPORTTableAdapter.Connection;
                }
                if (((this._oUT_PATIENT_SCANTableAdapter != null) 
                            && (this._oUT_PATIENT_SCANTableAdapter.Connection != null))) {
                    return this._oUT_PATIENT_SCANTableAdapter.Connection;
                }
                if (((this._oUT_PATIENT_XRAYTableAdapter != null) 
                            && (this._oUT_PATIENT_XRAYTableAdapter.Connection != null))) {
                    return this._oUT_PATIENT_XRAYTableAdapter.Connection;
                }
                if (((this._oUT_SAMPLETableAdapter != null) 
                            && (this._oUT_SAMPLETableAdapter.Connection != null))) {
                    return this._oUT_SAMPLETableAdapter.Connection;
                }
                if (((this._pATIENT_APPOINTMENT_DETAILSTableAdapter != null) 
                            && (this._pATIENT_APPOINTMENT_DETAILSTableAdapter.Connection != null))) {
                    return this._pATIENT_APPOINTMENT_DETAILSTableAdapter.Connection;
                }
                if (((this._pATIENT_PRIVATE_DETAILTableAdapter != null) 
                            && (this._pATIENT_PRIVATE_DETAILTableAdapter.Connection != null))) {
                    return this._pATIENT_PRIVATE_DETAILTableAdapter.Connection;
                }
                if (((this._pHARMACY_MEDICINESTableAdapter != null) 
                            && (this._pHARMACY_MEDICINESTableAdapter.Connection != null))) {
                    return this._pHARMACY_MEDICINESTableAdapter.Connection;
                }
                if (((this._pHARMACY_STAFFTableAdapter != null) 
                            && (this._pHARMACY_STAFFTableAdapter.Connection != null))) {
                    return this._pHARMACY_STAFFTableAdapter.Connection;
                }
                if (((this._qUALIFICATIONTableAdapter != null) 
                            && (this._qUALIFICATIONTableAdapter.Connection != null))) {
                    return this._qUALIFICATIONTableAdapter.Connection;
                }
                if (((this._rEPORT_IN_PATIENTTableAdapter != null) 
                            && (this._rEPORT_IN_PATIENTTableAdapter.Connection != null))) {
                    return this._rEPORT_IN_PATIENTTableAdapter.Connection;
                }
                if (((this._rEPORT_OUT_PATIENTTableAdapter != null) 
                            && (this._rEPORT_OUT_PATIENTTableAdapter.Connection != null))) {
                    return this._rEPORT_OUT_PATIENTTableAdapter.Connection;
                }
                if (((this._rOOMTableAdapter != null) 
                            && (this._rOOMTableAdapter.Connection != null))) {
                    return this._rOOMTableAdapter.Connection;
                }
                if (((this._sCAN_ROOMTableAdapter != null) 
                            && (this._sCAN_ROOMTableAdapter.Connection != null))) {
                    return this._sCAN_ROOMTableAdapter.Connection;
                }
                if (((this._sPECIALIST_DOCTORTableAdapter != null) 
                            && (this._sPECIALIST_DOCTORTableAdapter.Connection != null))) {
                    return this._sPECIALIST_DOCTORTableAdapter.Connection;
                }
                if (((this._wARDTableAdapter != null) 
                            && (this._wARDTableAdapter.Connection != null))) {
                    return this._wARDTableAdapter.Connection;
                }
                if (((this._wARD_STAFFTableAdapter != null) 
                            && (this._wARD_STAFFTableAdapter.Connection != null))) {
                    return this._wARD_STAFFTableAdapter.Connection;
                }
                if (((this._x_RAY_ROOMTableAdapter != null) 
                            && (this._x_RAY_ROOMTableAdapter.Connection != null))) {
                    return this._x_RAY_ROOMTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._aCCOUNTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._aDMISSION_OFFICERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bILLTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bILLING_OFFICERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cHANNELING_OFFICERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cUSTOMERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dRUGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dRUG_ORDERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dRUG_SUPPLIERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._gUARDIANTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hOSPITAL_CUSTOMERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iN_PATIENTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iN_PATIENT_MEDICINETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iN_PATIENT_REPORTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iN_PATIENT_SCANTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iN_PATIENT_XRAYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iN_SAMPLETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lABORATORY_STAFFTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lOG_IN_DETAILTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lOG_IN_USERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._oRGANIZATIONTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._oUT_PATIENTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._oUT_PATIENT_MEDICINETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._oUT_PATIENT_REPORTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._oUT_PATIENT_SCANTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._oUT_PATIENT_XRAYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._oUT_SAMPLETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pATIENT_APPOINTMENT_DETAILSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pATIENT_PRIVATE_DETAILTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pHARMACY_MEDICINESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pHARMACY_STAFFTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._qUALIFICATIONTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rEPORT_IN_PATIENTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rEPORT_OUT_PATIENTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rOOMTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sCAN_ROOMTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sPECIALIST_DOCTORTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._wARDTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._wARD_STAFFTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._x_RAY_ROOMTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(GUI_Hospital_Management_SystemDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aCCOUNTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ACCOUNT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aCCOUNTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aDMISSION_OFFICERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ADMISSION_OFFICER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aDMISSION_OFFICERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bILLING_OFFICERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BILLING_OFFICER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bILLING_OFFICERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._wARDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.WARD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._wARDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sPECIALIST_DOCTORTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SPECIALIST_DOCTOR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sPECIALIST_DOCTORTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._gUARDIANTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.GUARDIAN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._gUARDIANTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rOOMTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ROOM.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rOOMTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pATIENT_PRIVATE_DETAILTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PATIENT_PRIVATE_DETAIL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pATIENT_PRIVATE_DETAILTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iN_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.IN_PATIENT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iN_PATIENTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cHANNELING_OFFICERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CHANNELING_OFFICER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cHANNELING_OFFICERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pHARMACY_STAFFTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PHARMACY_STAFF.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pHARMACY_STAFFTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dRUG_SUPPLIERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DRUG_SUPPLIER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dRUG_SUPPLIERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._oUT_PATIENT_XRAYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OUT_PATIENT_XRAY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._oUT_PATIENT_XRAYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._oUT_PATIENT_SCANTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OUT_PATIENT_SCAN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._oUT_PATIENT_SCANTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._oUT_PATIENT_REPORTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OUT_PATIENT_REPORT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._oUT_PATIENT_REPORTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._oUT_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OUT_PATIENT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._oUT_PATIENTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dRUGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DRUG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dRUGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bILLTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BILL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bILLTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iN_PATIENT_XRAYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.IN_PATIENT_XRAY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iN_PATIENT_XRAYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iN_PATIENT_SCANTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.IN_PATIENT_SCAN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iN_PATIENT_SCANTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hOSPITAL_CUSTOMERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HOSPITAL_CUSTOMER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hOSPITAL_CUSTOMERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cUSTOMERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CUSTOMER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cUSTOMERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iN_PATIENT_REPORTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.IN_PATIENT_REPORT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iN_PATIENT_REPORTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rEPORT_OUT_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.REPORT_OUT_PATIENT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rEPORT_OUT_PATIENTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rEPORT_IN_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.REPORT_IN_PATIENT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rEPORT_IN_PATIENTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._qUALIFICATIONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.QUALIFICATION.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._qUALIFICATIONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pHARMACY_MEDICINESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PHARMACY_MEDICINES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pHARMACY_MEDICINESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sCAN_ROOMTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SCAN_ROOM.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sCAN_ROOMTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lOG_IN_USERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LOG_IN_USER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lOG_IN_USERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._oUT_SAMPLETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OUT_SAMPLE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._oUT_SAMPLETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._oUT_PATIENT_MEDICINETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OUT_PATIENT_MEDICINE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._oUT_PATIENT_MEDICINETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._oRGANIZATIONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ORGANIZATION.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._oRGANIZATIONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._wARD_STAFFTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.WARD_STAFF.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._wARD_STAFFTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lOG_IN_DETAILTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LOG_IN_DETAIL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lOG_IN_DETAILTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lABORATORY_STAFFTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LABORATORY_STAFF.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lABORATORY_STAFFTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iN_SAMPLETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.IN_SAMPLE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iN_SAMPLETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iN_PATIENT_MEDICINETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.IN_PATIENT_MEDICINE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iN_PATIENT_MEDICINETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dRUG_ORDERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DRUG_ORDER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dRUG_ORDERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pATIENT_APPOINTMENT_DETAILSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PATIENT_APPOINTMENT_DETAILS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pATIENT_APPOINTMENT_DETAILSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._x_RAY_ROOMTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.X_RAY_ROOM.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._x_RAY_ROOMTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(GUI_Hospital_Management_SystemDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aCCOUNTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ACCOUNT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aCCOUNTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aDMISSION_OFFICERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ADMISSION_OFFICER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aDMISSION_OFFICERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bILLING_OFFICERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BILLING_OFFICER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bILLING_OFFICERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._wARDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.WARD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._wARDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sPECIALIST_DOCTORTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SPECIALIST_DOCTOR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sPECIALIST_DOCTORTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._gUARDIANTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.GUARDIAN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._gUARDIANTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rOOMTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ROOM.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rOOMTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pATIENT_PRIVATE_DETAILTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PATIENT_PRIVATE_DETAIL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pATIENT_PRIVATE_DETAILTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iN_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.IN_PATIENT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iN_PATIENTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cHANNELING_OFFICERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CHANNELING_OFFICER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cHANNELING_OFFICERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pHARMACY_STAFFTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PHARMACY_STAFF.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pHARMACY_STAFFTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dRUG_SUPPLIERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DRUG_SUPPLIER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dRUG_SUPPLIERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._oUT_PATIENT_XRAYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OUT_PATIENT_XRAY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._oUT_PATIENT_XRAYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._oUT_PATIENT_SCANTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OUT_PATIENT_SCAN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._oUT_PATIENT_SCANTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._oUT_PATIENT_REPORTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OUT_PATIENT_REPORT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._oUT_PATIENT_REPORTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._oUT_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OUT_PATIENT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._oUT_PATIENTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dRUGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DRUG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dRUGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bILLTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BILL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bILLTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iN_PATIENT_XRAYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.IN_PATIENT_XRAY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iN_PATIENT_XRAYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iN_PATIENT_SCANTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.IN_PATIENT_SCAN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iN_PATIENT_SCANTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hOSPITAL_CUSTOMERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HOSPITAL_CUSTOMER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hOSPITAL_CUSTOMERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cUSTOMERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CUSTOMER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cUSTOMERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iN_PATIENT_REPORTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.IN_PATIENT_REPORT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iN_PATIENT_REPORTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rEPORT_OUT_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.REPORT_OUT_PATIENT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rEPORT_OUT_PATIENTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rEPORT_IN_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.REPORT_IN_PATIENT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rEPORT_IN_PATIENTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._qUALIFICATIONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.QUALIFICATION.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._qUALIFICATIONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pHARMACY_MEDICINESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PHARMACY_MEDICINES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pHARMACY_MEDICINESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sCAN_ROOMTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SCAN_ROOM.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sCAN_ROOMTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lOG_IN_USERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LOG_IN_USER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lOG_IN_USERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._oUT_SAMPLETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OUT_SAMPLE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._oUT_SAMPLETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._oUT_PATIENT_MEDICINETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OUT_PATIENT_MEDICINE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._oUT_PATIENT_MEDICINETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._oRGANIZATIONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ORGANIZATION.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._oRGANIZATIONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._wARD_STAFFTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.WARD_STAFF.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._wARD_STAFFTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lOG_IN_DETAILTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LOG_IN_DETAIL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lOG_IN_DETAILTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lABORATORY_STAFFTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LABORATORY_STAFF.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lABORATORY_STAFFTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iN_SAMPLETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.IN_SAMPLE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iN_SAMPLETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iN_PATIENT_MEDICINETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.IN_PATIENT_MEDICINE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iN_PATIENT_MEDICINETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dRUG_ORDERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DRUG_ORDER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dRUG_ORDERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pATIENT_APPOINTMENT_DETAILSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PATIENT_APPOINTMENT_DETAILS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pATIENT_APPOINTMENT_DETAILSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._x_RAY_ROOMTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.X_RAY_ROOM.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._x_RAY_ROOMTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(GUI_Hospital_Management_SystemDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._x_RAY_ROOMTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.X_RAY_ROOM.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._x_RAY_ROOMTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pATIENT_APPOINTMENT_DETAILSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PATIENT_APPOINTMENT_DETAILS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pATIENT_APPOINTMENT_DETAILSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dRUG_ORDERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DRUG_ORDER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dRUG_ORDERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iN_PATIENT_MEDICINETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.IN_PATIENT_MEDICINE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iN_PATIENT_MEDICINETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iN_SAMPLETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.IN_SAMPLE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iN_SAMPLETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lABORATORY_STAFFTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LABORATORY_STAFF.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lABORATORY_STAFFTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lOG_IN_DETAILTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LOG_IN_DETAIL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lOG_IN_DETAILTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._wARD_STAFFTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.WARD_STAFF.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._wARD_STAFFTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._oRGANIZATIONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ORGANIZATION.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._oRGANIZATIONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._oUT_PATIENT_MEDICINETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OUT_PATIENT_MEDICINE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._oUT_PATIENT_MEDICINETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._oUT_SAMPLETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OUT_SAMPLE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._oUT_SAMPLETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lOG_IN_USERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LOG_IN_USER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lOG_IN_USERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sCAN_ROOMTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SCAN_ROOM.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sCAN_ROOMTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pHARMACY_MEDICINESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PHARMACY_MEDICINES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pHARMACY_MEDICINESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._qUALIFICATIONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.QUALIFICATION.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._qUALIFICATIONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rEPORT_IN_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.REPORT_IN_PATIENT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rEPORT_IN_PATIENTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rEPORT_OUT_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.REPORT_OUT_PATIENT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rEPORT_OUT_PATIENTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iN_PATIENT_REPORTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.IN_PATIENT_REPORT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iN_PATIENT_REPORTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cUSTOMERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CUSTOMER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cUSTOMERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hOSPITAL_CUSTOMERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HOSPITAL_CUSTOMER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hOSPITAL_CUSTOMERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iN_PATIENT_SCANTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.IN_PATIENT_SCAN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iN_PATIENT_SCANTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iN_PATIENT_XRAYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.IN_PATIENT_XRAY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iN_PATIENT_XRAYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bILLTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BILL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bILLTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dRUGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DRUG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dRUGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._oUT_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OUT_PATIENT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._oUT_PATIENTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._oUT_PATIENT_REPORTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OUT_PATIENT_REPORT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._oUT_PATIENT_REPORTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._oUT_PATIENT_SCANTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OUT_PATIENT_SCAN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._oUT_PATIENT_SCANTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._oUT_PATIENT_XRAYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OUT_PATIENT_XRAY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._oUT_PATIENT_XRAYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dRUG_SUPPLIERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DRUG_SUPPLIER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dRUG_SUPPLIERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pHARMACY_STAFFTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PHARMACY_STAFF.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pHARMACY_STAFFTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cHANNELING_OFFICERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CHANNELING_OFFICER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cHANNELING_OFFICERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iN_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.IN_PATIENT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iN_PATIENTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pATIENT_PRIVATE_DETAILTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PATIENT_PRIVATE_DETAIL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pATIENT_PRIVATE_DETAILTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rOOMTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ROOM.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rOOMTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._gUARDIANTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.GUARDIAN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._gUARDIANTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sPECIALIST_DOCTORTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SPECIALIST_DOCTOR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sPECIALIST_DOCTORTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._wARDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.WARD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._wARDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bILLING_OFFICERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BILLING_OFFICER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bILLING_OFFICERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aDMISSION_OFFICERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ADMISSION_OFFICER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aDMISSION_OFFICERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aCCOUNTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ACCOUNT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aCCOUNTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(GUI_Hospital_Management_SystemDataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._aCCOUNTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aCCOUNTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._aDMISSION_OFFICERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aDMISSION_OFFICERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bILLTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bILLTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bILLING_OFFICERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bILLING_OFFICERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cHANNELING_OFFICERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cHANNELING_OFFICERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cUSTOMERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cUSTOMERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dRUGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dRUGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dRUG_ORDERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dRUG_ORDERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dRUG_SUPPLIERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dRUG_SUPPLIERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._gUARDIANTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._gUARDIANTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._hOSPITAL_CUSTOMERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hOSPITAL_CUSTOMERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._iN_PATIENTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iN_PATIENTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._iN_PATIENT_MEDICINETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iN_PATIENT_MEDICINETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._iN_PATIENT_REPORTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iN_PATIENT_REPORTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._iN_PATIENT_SCANTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iN_PATIENT_SCANTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._iN_PATIENT_XRAYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iN_PATIENT_XRAYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._iN_SAMPLETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iN_SAMPLETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._lABORATORY_STAFFTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lABORATORY_STAFFTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._lOG_IN_DETAILTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lOG_IN_DETAILTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._lOG_IN_USERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lOG_IN_USERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._oRGANIZATIONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._oRGANIZATIONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._oUT_PATIENTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._oUT_PATIENTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._oUT_PATIENT_MEDICINETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._oUT_PATIENT_MEDICINETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._oUT_PATIENT_REPORTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._oUT_PATIENT_REPORTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._oUT_PATIENT_SCANTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._oUT_PATIENT_SCANTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._oUT_PATIENT_XRAYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._oUT_PATIENT_XRAYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._oUT_SAMPLETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._oUT_SAMPLETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pATIENT_APPOINTMENT_DETAILSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pATIENT_APPOINTMENT_DETAILSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pATIENT_PRIVATE_DETAILTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pATIENT_PRIVATE_DETAILTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pHARMACY_MEDICINESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pHARMACY_MEDICINESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pHARMACY_STAFFTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pHARMACY_STAFFTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._qUALIFICATIONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._qUALIFICATIONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rEPORT_IN_PATIENTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rEPORT_IN_PATIENTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rEPORT_OUT_PATIENTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rEPORT_OUT_PATIENTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rOOMTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rOOMTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sCAN_ROOMTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sCAN_ROOMTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sPECIALIST_DOCTORTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sPECIALIST_DOCTORTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._wARDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._wARDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._wARD_STAFFTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._wARD_STAFFTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._x_RAY_ROOMTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._x_RAY_ROOMTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._aCCOUNTTableAdapter != null)) {
                    revertConnections.Add(this._aCCOUNTTableAdapter, this._aCCOUNTTableAdapter.Connection);
                    this._aCCOUNTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aCCOUNTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aCCOUNTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aCCOUNTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aCCOUNTTableAdapter.Adapter);
                    }
                }
                if ((this._aDMISSION_OFFICERTableAdapter != null)) {
                    revertConnections.Add(this._aDMISSION_OFFICERTableAdapter, this._aDMISSION_OFFICERTableAdapter.Connection);
                    this._aDMISSION_OFFICERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aDMISSION_OFFICERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aDMISSION_OFFICERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aDMISSION_OFFICERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aDMISSION_OFFICERTableAdapter.Adapter);
                    }
                }
                if ((this._bILLTableAdapter != null)) {
                    revertConnections.Add(this._bILLTableAdapter, this._bILLTableAdapter.Connection);
                    this._bILLTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bILLTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bILLTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bILLTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bILLTableAdapter.Adapter);
                    }
                }
                if ((this._bILLING_OFFICERTableAdapter != null)) {
                    revertConnections.Add(this._bILLING_OFFICERTableAdapter, this._bILLING_OFFICERTableAdapter.Connection);
                    this._bILLING_OFFICERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bILLING_OFFICERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bILLING_OFFICERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bILLING_OFFICERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bILLING_OFFICERTableAdapter.Adapter);
                    }
                }
                if ((this._cHANNELING_OFFICERTableAdapter != null)) {
                    revertConnections.Add(this._cHANNELING_OFFICERTableAdapter, this._cHANNELING_OFFICERTableAdapter.Connection);
                    this._cHANNELING_OFFICERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cHANNELING_OFFICERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cHANNELING_OFFICERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cHANNELING_OFFICERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cHANNELING_OFFICERTableAdapter.Adapter);
                    }
                }
                if ((this._cUSTOMERTableAdapter != null)) {
                    revertConnections.Add(this._cUSTOMERTableAdapter, this._cUSTOMERTableAdapter.Connection);
                    this._cUSTOMERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cUSTOMERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cUSTOMERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cUSTOMERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cUSTOMERTableAdapter.Adapter);
                    }
                }
                if ((this._dRUGTableAdapter != null)) {
                    revertConnections.Add(this._dRUGTableAdapter, this._dRUGTableAdapter.Connection);
                    this._dRUGTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dRUGTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dRUGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dRUGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dRUGTableAdapter.Adapter);
                    }
                }
                if ((this._dRUG_ORDERTableAdapter != null)) {
                    revertConnections.Add(this._dRUG_ORDERTableAdapter, this._dRUG_ORDERTableAdapter.Connection);
                    this._dRUG_ORDERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dRUG_ORDERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dRUG_ORDERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dRUG_ORDERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dRUG_ORDERTableAdapter.Adapter);
                    }
                }
                if ((this._dRUG_SUPPLIERTableAdapter != null)) {
                    revertConnections.Add(this._dRUG_SUPPLIERTableAdapter, this._dRUG_SUPPLIERTableAdapter.Connection);
                    this._dRUG_SUPPLIERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dRUG_SUPPLIERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dRUG_SUPPLIERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dRUG_SUPPLIERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dRUG_SUPPLIERTableAdapter.Adapter);
                    }
                }
                if ((this._gUARDIANTableAdapter != null)) {
                    revertConnections.Add(this._gUARDIANTableAdapter, this._gUARDIANTableAdapter.Connection);
                    this._gUARDIANTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._gUARDIANTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._gUARDIANTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._gUARDIANTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._gUARDIANTableAdapter.Adapter);
                    }
                }
                if ((this._hOSPITAL_CUSTOMERTableAdapter != null)) {
                    revertConnections.Add(this._hOSPITAL_CUSTOMERTableAdapter, this._hOSPITAL_CUSTOMERTableAdapter.Connection);
                    this._hOSPITAL_CUSTOMERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hOSPITAL_CUSTOMERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hOSPITAL_CUSTOMERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hOSPITAL_CUSTOMERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hOSPITAL_CUSTOMERTableAdapter.Adapter);
                    }
                }
                if ((this._iN_PATIENTTableAdapter != null)) {
                    revertConnections.Add(this._iN_PATIENTTableAdapter, this._iN_PATIENTTableAdapter.Connection);
                    this._iN_PATIENTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iN_PATIENTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iN_PATIENTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iN_PATIENTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iN_PATIENTTableAdapter.Adapter);
                    }
                }
                if ((this._iN_PATIENT_MEDICINETableAdapter != null)) {
                    revertConnections.Add(this._iN_PATIENT_MEDICINETableAdapter, this._iN_PATIENT_MEDICINETableAdapter.Connection);
                    this._iN_PATIENT_MEDICINETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iN_PATIENT_MEDICINETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iN_PATIENT_MEDICINETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iN_PATIENT_MEDICINETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iN_PATIENT_MEDICINETableAdapter.Adapter);
                    }
                }
                if ((this._iN_PATIENT_REPORTTableAdapter != null)) {
                    revertConnections.Add(this._iN_PATIENT_REPORTTableAdapter, this._iN_PATIENT_REPORTTableAdapter.Connection);
                    this._iN_PATIENT_REPORTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iN_PATIENT_REPORTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iN_PATIENT_REPORTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iN_PATIENT_REPORTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iN_PATIENT_REPORTTableAdapter.Adapter);
                    }
                }
                if ((this._iN_PATIENT_SCANTableAdapter != null)) {
                    revertConnections.Add(this._iN_PATIENT_SCANTableAdapter, this._iN_PATIENT_SCANTableAdapter.Connection);
                    this._iN_PATIENT_SCANTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iN_PATIENT_SCANTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iN_PATIENT_SCANTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iN_PATIENT_SCANTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iN_PATIENT_SCANTableAdapter.Adapter);
                    }
                }
                if ((this._iN_PATIENT_XRAYTableAdapter != null)) {
                    revertConnections.Add(this._iN_PATIENT_XRAYTableAdapter, this._iN_PATIENT_XRAYTableAdapter.Connection);
                    this._iN_PATIENT_XRAYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iN_PATIENT_XRAYTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iN_PATIENT_XRAYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iN_PATIENT_XRAYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iN_PATIENT_XRAYTableAdapter.Adapter);
                    }
                }
                if ((this._iN_SAMPLETableAdapter != null)) {
                    revertConnections.Add(this._iN_SAMPLETableAdapter, this._iN_SAMPLETableAdapter.Connection);
                    this._iN_SAMPLETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iN_SAMPLETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iN_SAMPLETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iN_SAMPLETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iN_SAMPLETableAdapter.Adapter);
                    }
                }
                if ((this._lABORATORY_STAFFTableAdapter != null)) {
                    revertConnections.Add(this._lABORATORY_STAFFTableAdapter, this._lABORATORY_STAFFTableAdapter.Connection);
                    this._lABORATORY_STAFFTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._lABORATORY_STAFFTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._lABORATORY_STAFFTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lABORATORY_STAFFTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lABORATORY_STAFFTableAdapter.Adapter);
                    }
                }
                if ((this._lOG_IN_DETAILTableAdapter != null)) {
                    revertConnections.Add(this._lOG_IN_DETAILTableAdapter, this._lOG_IN_DETAILTableAdapter.Connection);
                    this._lOG_IN_DETAILTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._lOG_IN_DETAILTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._lOG_IN_DETAILTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lOG_IN_DETAILTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lOG_IN_DETAILTableAdapter.Adapter);
                    }
                }
                if ((this._lOG_IN_USERTableAdapter != null)) {
                    revertConnections.Add(this._lOG_IN_USERTableAdapter, this._lOG_IN_USERTableAdapter.Connection);
                    this._lOG_IN_USERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._lOG_IN_USERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._lOG_IN_USERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lOG_IN_USERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lOG_IN_USERTableAdapter.Adapter);
                    }
                }
                if ((this._oRGANIZATIONTableAdapter != null)) {
                    revertConnections.Add(this._oRGANIZATIONTableAdapter, this._oRGANIZATIONTableAdapter.Connection);
                    this._oRGANIZATIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._oRGANIZATIONTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._oRGANIZATIONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._oRGANIZATIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._oRGANIZATIONTableAdapter.Adapter);
                    }
                }
                if ((this._oUT_PATIENTTableAdapter != null)) {
                    revertConnections.Add(this._oUT_PATIENTTableAdapter, this._oUT_PATIENTTableAdapter.Connection);
                    this._oUT_PATIENTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._oUT_PATIENTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._oUT_PATIENTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._oUT_PATIENTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._oUT_PATIENTTableAdapter.Adapter);
                    }
                }
                if ((this._oUT_PATIENT_MEDICINETableAdapter != null)) {
                    revertConnections.Add(this._oUT_PATIENT_MEDICINETableAdapter, this._oUT_PATIENT_MEDICINETableAdapter.Connection);
                    this._oUT_PATIENT_MEDICINETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._oUT_PATIENT_MEDICINETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._oUT_PATIENT_MEDICINETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._oUT_PATIENT_MEDICINETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._oUT_PATIENT_MEDICINETableAdapter.Adapter);
                    }
                }
                if ((this._oUT_PATIENT_REPORTTableAdapter != null)) {
                    revertConnections.Add(this._oUT_PATIENT_REPORTTableAdapter, this._oUT_PATIENT_REPORTTableAdapter.Connection);
                    this._oUT_PATIENT_REPORTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._oUT_PATIENT_REPORTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._oUT_PATIENT_REPORTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._oUT_PATIENT_REPORTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._oUT_PATIENT_REPORTTableAdapter.Adapter);
                    }
                }
                if ((this._oUT_PATIENT_SCANTableAdapter != null)) {
                    revertConnections.Add(this._oUT_PATIENT_SCANTableAdapter, this._oUT_PATIENT_SCANTableAdapter.Connection);
                    this._oUT_PATIENT_SCANTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._oUT_PATIENT_SCANTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._oUT_PATIENT_SCANTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._oUT_PATIENT_SCANTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._oUT_PATIENT_SCANTableAdapter.Adapter);
                    }
                }
                if ((this._oUT_PATIENT_XRAYTableAdapter != null)) {
                    revertConnections.Add(this._oUT_PATIENT_XRAYTableAdapter, this._oUT_PATIENT_XRAYTableAdapter.Connection);
                    this._oUT_PATIENT_XRAYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._oUT_PATIENT_XRAYTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._oUT_PATIENT_XRAYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._oUT_PATIENT_XRAYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._oUT_PATIENT_XRAYTableAdapter.Adapter);
                    }
                }
                if ((this._oUT_SAMPLETableAdapter != null)) {
                    revertConnections.Add(this._oUT_SAMPLETableAdapter, this._oUT_SAMPLETableAdapter.Connection);
                    this._oUT_SAMPLETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._oUT_SAMPLETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._oUT_SAMPLETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._oUT_SAMPLETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._oUT_SAMPLETableAdapter.Adapter);
                    }
                }
                if ((this._pATIENT_APPOINTMENT_DETAILSTableAdapter != null)) {
                    revertConnections.Add(this._pATIENT_APPOINTMENT_DETAILSTableAdapter, this._pATIENT_APPOINTMENT_DETAILSTableAdapter.Connection);
                    this._pATIENT_APPOINTMENT_DETAILSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pATIENT_APPOINTMENT_DETAILSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pATIENT_APPOINTMENT_DETAILSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pATIENT_APPOINTMENT_DETAILSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pATIENT_APPOINTMENT_DETAILSTableAdapter.Adapter);
                    }
                }
                if ((this._pATIENT_PRIVATE_DETAILTableAdapter != null)) {
                    revertConnections.Add(this._pATIENT_PRIVATE_DETAILTableAdapter, this._pATIENT_PRIVATE_DETAILTableAdapter.Connection);
                    this._pATIENT_PRIVATE_DETAILTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pATIENT_PRIVATE_DETAILTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pATIENT_PRIVATE_DETAILTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pATIENT_PRIVATE_DETAILTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pATIENT_PRIVATE_DETAILTableAdapter.Adapter);
                    }
                }
                if ((this._pHARMACY_MEDICINESTableAdapter != null)) {
                    revertConnections.Add(this._pHARMACY_MEDICINESTableAdapter, this._pHARMACY_MEDICINESTableAdapter.Connection);
                    this._pHARMACY_MEDICINESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pHARMACY_MEDICINESTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pHARMACY_MEDICINESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pHARMACY_MEDICINESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pHARMACY_MEDICINESTableAdapter.Adapter);
                    }
                }
                if ((this._pHARMACY_STAFFTableAdapter != null)) {
                    revertConnections.Add(this._pHARMACY_STAFFTableAdapter, this._pHARMACY_STAFFTableAdapter.Connection);
                    this._pHARMACY_STAFFTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pHARMACY_STAFFTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pHARMACY_STAFFTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pHARMACY_STAFFTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pHARMACY_STAFFTableAdapter.Adapter);
                    }
                }
                if ((this._qUALIFICATIONTableAdapter != null)) {
                    revertConnections.Add(this._qUALIFICATIONTableAdapter, this._qUALIFICATIONTableAdapter.Connection);
                    this._qUALIFICATIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._qUALIFICATIONTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._qUALIFICATIONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._qUALIFICATIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._qUALIFICATIONTableAdapter.Adapter);
                    }
                }
                if ((this._rEPORT_IN_PATIENTTableAdapter != null)) {
                    revertConnections.Add(this._rEPORT_IN_PATIENTTableAdapter, this._rEPORT_IN_PATIENTTableAdapter.Connection);
                    this._rEPORT_IN_PATIENTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rEPORT_IN_PATIENTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rEPORT_IN_PATIENTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rEPORT_IN_PATIENTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rEPORT_IN_PATIENTTableAdapter.Adapter);
                    }
                }
                if ((this._rEPORT_OUT_PATIENTTableAdapter != null)) {
                    revertConnections.Add(this._rEPORT_OUT_PATIENTTableAdapter, this._rEPORT_OUT_PATIENTTableAdapter.Connection);
                    this._rEPORT_OUT_PATIENTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rEPORT_OUT_PATIENTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rEPORT_OUT_PATIENTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rEPORT_OUT_PATIENTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rEPORT_OUT_PATIENTTableAdapter.Adapter);
                    }
                }
                if ((this._rOOMTableAdapter != null)) {
                    revertConnections.Add(this._rOOMTableAdapter, this._rOOMTableAdapter.Connection);
                    this._rOOMTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rOOMTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rOOMTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rOOMTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rOOMTableAdapter.Adapter);
                    }
                }
                if ((this._sCAN_ROOMTableAdapter != null)) {
                    revertConnections.Add(this._sCAN_ROOMTableAdapter, this._sCAN_ROOMTableAdapter.Connection);
                    this._sCAN_ROOMTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sCAN_ROOMTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sCAN_ROOMTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sCAN_ROOMTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sCAN_ROOMTableAdapter.Adapter);
                    }
                }
                if ((this._sPECIALIST_DOCTORTableAdapter != null)) {
                    revertConnections.Add(this._sPECIALIST_DOCTORTableAdapter, this._sPECIALIST_DOCTORTableAdapter.Connection);
                    this._sPECIALIST_DOCTORTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sPECIALIST_DOCTORTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sPECIALIST_DOCTORTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sPECIALIST_DOCTORTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sPECIALIST_DOCTORTableAdapter.Adapter);
                    }
                }
                if ((this._wARDTableAdapter != null)) {
                    revertConnections.Add(this._wARDTableAdapter, this._wARDTableAdapter.Connection);
                    this._wARDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._wARDTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._wARDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._wARDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._wARDTableAdapter.Adapter);
                    }
                }
                if ((this._wARD_STAFFTableAdapter != null)) {
                    revertConnections.Add(this._wARD_STAFFTableAdapter, this._wARD_STAFFTableAdapter.Connection);
                    this._wARD_STAFFTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._wARD_STAFFTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._wARD_STAFFTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._wARD_STAFFTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._wARD_STAFFTableAdapter.Adapter);
                    }
                }
                if ((this._x_RAY_ROOMTableAdapter != null)) {
                    revertConnections.Add(this._x_RAY_ROOMTableAdapter, this._x_RAY_ROOMTableAdapter.Connection);
                    this._x_RAY_ROOMTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._x_RAY_ROOMTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._x_RAY_ROOMTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._x_RAY_ROOMTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._x_RAY_ROOMTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._aCCOUNTTableAdapter != null)) {
                    this._aCCOUNTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aCCOUNTTableAdapter]));
                    this._aCCOUNTTableAdapter.Transaction = null;
                }
                if ((this._aDMISSION_OFFICERTableAdapter != null)) {
                    this._aDMISSION_OFFICERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aDMISSION_OFFICERTableAdapter]));
                    this._aDMISSION_OFFICERTableAdapter.Transaction = null;
                }
                if ((this._bILLTableAdapter != null)) {
                    this._bILLTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bILLTableAdapter]));
                    this._bILLTableAdapter.Transaction = null;
                }
                if ((this._bILLING_OFFICERTableAdapter != null)) {
                    this._bILLING_OFFICERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bILLING_OFFICERTableAdapter]));
                    this._bILLING_OFFICERTableAdapter.Transaction = null;
                }
                if ((this._cHANNELING_OFFICERTableAdapter != null)) {
                    this._cHANNELING_OFFICERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cHANNELING_OFFICERTableAdapter]));
                    this._cHANNELING_OFFICERTableAdapter.Transaction = null;
                }
                if ((this._cUSTOMERTableAdapter != null)) {
                    this._cUSTOMERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cUSTOMERTableAdapter]));
                    this._cUSTOMERTableAdapter.Transaction = null;
                }
                if ((this._dRUGTableAdapter != null)) {
                    this._dRUGTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dRUGTableAdapter]));
                    this._dRUGTableAdapter.Transaction = null;
                }
                if ((this._dRUG_ORDERTableAdapter != null)) {
                    this._dRUG_ORDERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dRUG_ORDERTableAdapter]));
                    this._dRUG_ORDERTableAdapter.Transaction = null;
                }
                if ((this._dRUG_SUPPLIERTableAdapter != null)) {
                    this._dRUG_SUPPLIERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dRUG_SUPPLIERTableAdapter]));
                    this._dRUG_SUPPLIERTableAdapter.Transaction = null;
                }
                if ((this._gUARDIANTableAdapter != null)) {
                    this._gUARDIANTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._gUARDIANTableAdapter]));
                    this._gUARDIANTableAdapter.Transaction = null;
                }
                if ((this._hOSPITAL_CUSTOMERTableAdapter != null)) {
                    this._hOSPITAL_CUSTOMERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hOSPITAL_CUSTOMERTableAdapter]));
                    this._hOSPITAL_CUSTOMERTableAdapter.Transaction = null;
                }
                if ((this._iN_PATIENTTableAdapter != null)) {
                    this._iN_PATIENTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iN_PATIENTTableAdapter]));
                    this._iN_PATIENTTableAdapter.Transaction = null;
                }
                if ((this._iN_PATIENT_MEDICINETableAdapter != null)) {
                    this._iN_PATIENT_MEDICINETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iN_PATIENT_MEDICINETableAdapter]));
                    this._iN_PATIENT_MEDICINETableAdapter.Transaction = null;
                }
                if ((this._iN_PATIENT_REPORTTableAdapter != null)) {
                    this._iN_PATIENT_REPORTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iN_PATIENT_REPORTTableAdapter]));
                    this._iN_PATIENT_REPORTTableAdapter.Transaction = null;
                }
                if ((this._iN_PATIENT_SCANTableAdapter != null)) {
                    this._iN_PATIENT_SCANTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iN_PATIENT_SCANTableAdapter]));
                    this._iN_PATIENT_SCANTableAdapter.Transaction = null;
                }
                if ((this._iN_PATIENT_XRAYTableAdapter != null)) {
                    this._iN_PATIENT_XRAYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iN_PATIENT_XRAYTableAdapter]));
                    this._iN_PATIENT_XRAYTableAdapter.Transaction = null;
                }
                if ((this._iN_SAMPLETableAdapter != null)) {
                    this._iN_SAMPLETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iN_SAMPLETableAdapter]));
                    this._iN_SAMPLETableAdapter.Transaction = null;
                }
                if ((this._lABORATORY_STAFFTableAdapter != null)) {
                    this._lABORATORY_STAFFTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._lABORATORY_STAFFTableAdapter]));
                    this._lABORATORY_STAFFTableAdapter.Transaction = null;
                }
                if ((this._lOG_IN_DETAILTableAdapter != null)) {
                    this._lOG_IN_DETAILTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._lOG_IN_DETAILTableAdapter]));
                    this._lOG_IN_DETAILTableAdapter.Transaction = null;
                }
                if ((this._lOG_IN_USERTableAdapter != null)) {
                    this._lOG_IN_USERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._lOG_IN_USERTableAdapter]));
                    this._lOG_IN_USERTableAdapter.Transaction = null;
                }
                if ((this._oRGANIZATIONTableAdapter != null)) {
                    this._oRGANIZATIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._oRGANIZATIONTableAdapter]));
                    this._oRGANIZATIONTableAdapter.Transaction = null;
                }
                if ((this._oUT_PATIENTTableAdapter != null)) {
                    this._oUT_PATIENTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._oUT_PATIENTTableAdapter]));
                    this._oUT_PATIENTTableAdapter.Transaction = null;
                }
                if ((this._oUT_PATIENT_MEDICINETableAdapter != null)) {
                    this._oUT_PATIENT_MEDICINETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._oUT_PATIENT_MEDICINETableAdapter]));
                    this._oUT_PATIENT_MEDICINETableAdapter.Transaction = null;
                }
                if ((this._oUT_PATIENT_REPORTTableAdapter != null)) {
                    this._oUT_PATIENT_REPORTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._oUT_PATIENT_REPORTTableAdapter]));
                    this._oUT_PATIENT_REPORTTableAdapter.Transaction = null;
                }
                if ((this._oUT_PATIENT_SCANTableAdapter != null)) {
                    this._oUT_PATIENT_SCANTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._oUT_PATIENT_SCANTableAdapter]));
                    this._oUT_PATIENT_SCANTableAdapter.Transaction = null;
                }
                if ((this._oUT_PATIENT_XRAYTableAdapter != null)) {
                    this._oUT_PATIENT_XRAYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._oUT_PATIENT_XRAYTableAdapter]));
                    this._oUT_PATIENT_XRAYTableAdapter.Transaction = null;
                }
                if ((this._oUT_SAMPLETableAdapter != null)) {
                    this._oUT_SAMPLETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._oUT_SAMPLETableAdapter]));
                    this._oUT_SAMPLETableAdapter.Transaction = null;
                }
                if ((this._pATIENT_APPOINTMENT_DETAILSTableAdapter != null)) {
                    this._pATIENT_APPOINTMENT_DETAILSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pATIENT_APPOINTMENT_DETAILSTableAdapter]));
                    this._pATIENT_APPOINTMENT_DETAILSTableAdapter.Transaction = null;
                }
                if ((this._pATIENT_PRIVATE_DETAILTableAdapter != null)) {
                    this._pATIENT_PRIVATE_DETAILTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pATIENT_PRIVATE_DETAILTableAdapter]));
                    this._pATIENT_PRIVATE_DETAILTableAdapter.Transaction = null;
                }
                if ((this._pHARMACY_MEDICINESTableAdapter != null)) {
                    this._pHARMACY_MEDICINESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pHARMACY_MEDICINESTableAdapter]));
                    this._pHARMACY_MEDICINESTableAdapter.Transaction = null;
                }
                if ((this._pHARMACY_STAFFTableAdapter != null)) {
                    this._pHARMACY_STAFFTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pHARMACY_STAFFTableAdapter]));
                    this._pHARMACY_STAFFTableAdapter.Transaction = null;
                }
                if ((this._qUALIFICATIONTableAdapter != null)) {
                    this._qUALIFICATIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._qUALIFICATIONTableAdapter]));
                    this._qUALIFICATIONTableAdapter.Transaction = null;
                }
                if ((this._rEPORT_IN_PATIENTTableAdapter != null)) {
                    this._rEPORT_IN_PATIENTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rEPORT_IN_PATIENTTableAdapter]));
                    this._rEPORT_IN_PATIENTTableAdapter.Transaction = null;
                }
                if ((this._rEPORT_OUT_PATIENTTableAdapter != null)) {
                    this._rEPORT_OUT_PATIENTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rEPORT_OUT_PATIENTTableAdapter]));
                    this._rEPORT_OUT_PATIENTTableAdapter.Transaction = null;
                }
                if ((this._rOOMTableAdapter != null)) {
                    this._rOOMTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rOOMTableAdapter]));
                    this._rOOMTableAdapter.Transaction = null;
                }
                if ((this._sCAN_ROOMTableAdapter != null)) {
                    this._sCAN_ROOMTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sCAN_ROOMTableAdapter]));
                    this._sCAN_ROOMTableAdapter.Transaction = null;
                }
                if ((this._sPECIALIST_DOCTORTableAdapter != null)) {
                    this._sPECIALIST_DOCTORTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sPECIALIST_DOCTORTableAdapter]));
                    this._sPECIALIST_DOCTORTableAdapter.Transaction = null;
                }
                if ((this._wARDTableAdapter != null)) {
                    this._wARDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._wARDTableAdapter]));
                    this._wARDTableAdapter.Transaction = null;
                }
                if ((this._wARD_STAFFTableAdapter != null)) {
                    this._wARD_STAFFTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._wARD_STAFFTableAdapter]));
                    this._wARD_STAFFTableAdapter.Transaction = null;
                }
                if ((this._x_RAY_ROOMTableAdapter != null)) {
                    this._x_RAY_ROOMTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._x_RAY_ROOMTableAdapter]));
                    this._x_RAY_ROOMTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591